/********************************************************************

  jniRescue.cpp

  The main object for RESCUE's Java hookup.

  Rod Hanks,  Sep  5 2005

*********************************************************************/
#include <malloc.h>
#include <string.h>
#include "myHeaders.h"
#include "boolSupport.h"
#include "org_Rescue_rjni_cBagInt.h"
#include "cBagInt.h"
#include "org_Rescue_rjni_cBagRescueBlockUnit.h"
#include "cBagRescueBlockUnit.h"
#include "org_Rescue_rjni_cBagRescueEdgeSet.h"
#include "cBagRescueEdgeSet.h"
#include "org_Rescue_rjni_cBagRescueGeobodyPart.h"
#include "cBagRescueGeobodyPart.h"
#include "org_Rescue_rjni_cBagRescueHistory.h"
#include "cBagRescueHistory.h"
#include "org_Rescue_rjni_cBagRescueHistoryObject.h"
#include "cBagRescueHistoryObject.h"
#include "org_Rescue_rjni_cBagRescuePolyLine.h"
#include "cBagRescuePolyLine.h"
#include "org_Rescue_rjni_cBagRescuePolyLineStub.h"
#include "cBagRescuePolyLineStub.h"
#include "org_Rescue_rjni_cBagRescueProperty.h"
#include "cBagRescueProperty.h"
#include "org_Rescue_rjni_cBagRescuePropertyGroup.h"
#include "cBagRescuePropertyGroup.h"
#include "org_Rescue_rjni_cBagRescueSection.h"
#include "cBagRescueSection.h"
#include "org_Rescue_rjni_cBagRescueStairSteppedFault.h"
#include "cBagRescueStairSteppedFault.h"
#include "org_Rescue_rjni_cBagRescueSurfaceCell.h"
#include "cBagRescueSurfaceCell.h"
#include "org_Rescue_rjni_cBagRescueSurfaceToGrid.h"
#include "cBagRescueSurfaceToGrid.h"
#include "org_Rescue_rjni_cBagRescueTriangleVertex.h"
#include "cBagRescueTriangleVertex.h"
#include "org_Rescue_rjni_cBagRescueTrimLoop.h"
#include "cBagRescueTrimLoop.h"
#include "org_Rescue_rjni_cBagRescueWellboreCell.h"
#include "cBagRescueWellboreCell.h"
#include "org_Rescue_rjni_cBagRescueWellboreSurface.h"
#include "cBagRescueWellboreSurface.h"
#include "org_Rescue_rjni_cNameValuePair.h"
#include "cNameValuePair.h"
#include "org_Rescue_rjni_cSetRescueArrayFragment.h"
#include "cSetRescueArrayFragment.h"
#include "org_Rescue_rjni_cSetRescueBlock.h"
#include "cSetRescueBlock.h"
#include "org_Rescue_rjni_cSetRescueBlockUnit.h"
#include "cSetRescueBlockUnit.h"
#include "org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface.h"
#include "cSetRescueBlockUnitHorizonSurface.h"
#include "org_Rescue_rjni_cSetRescueBlockUnitSide.h"
#include "cSetRescueBlockUnitSide.h"
#include "org_Rescue_rjni_cSetRescueDataContainer.h"
#include "cSetRescueDataContainer.h"
#include "org_Rescue_rjni_cSetRescueEdgeSet.h"
#include "cSetRescueEdgeSet.h"
#include "org_Rescue_rjni_cSetRescueEdgeSetStub.h"
#include "cSetRescueEdgeSetStub.h"
#include "org_Rescue_rjni_cSetRescueEventDescr.h"
#include "cSetRescueEventDescr.h"
#include "org_Rescue_rjni_cSetRescueFaultIntersection.h"
#include "cSetRescueFaultIntersection.h"
#include "org_Rescue_rjni_cSetRescueGeobody.h"
#include "cSetRescueGeobody.h"
#include "org_Rescue_rjni_cSetRescueGeobodyPart.h"
#include "cSetRescueGeobodyPart.h"
#include "org_Rescue_rjni_cSetRescueGeobodySurface.h"
#include "cSetRescueGeobodySurface.h"
#include "org_Rescue_rjni_cSetRescueGeobodyVolume.h"
#include "cSetRescueGeobodyVolume.h"
#include "org_Rescue_rjni_cSetRescueGeometry.h"
#include "cSetRescueGeometry.h"
#include "org_Rescue_rjni_cSetRescueGeometryUnit.h"
#include "cSetRescueGeometryUnit.h"
#include "org_Rescue_rjni_cSetRescueGridAxis.h"
#include "cSetRescueGridAxis.h"
#include "org_Rescue_rjni_cSetRescueHistory.h"
#include "cSetRescueHistory.h"
#include "org_Rescue_rjni_cSetRescueHorizon.h"
#include "cSetRescueHorizon.h"
#include "org_Rescue_rjni_cSetRescueIJSurface.h"
#include "cSetRescueIJSurface.h"
#include "org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc.h"
#include "cSetRescueInterfaceSurfaceDesc.h"
#include "org_Rescue_rjni_cSetRescueLookup.h"
#include "cSetRescueLookup.h"
#include "org_Rescue_rjni_cSetRescueMacroVolume.h"
#include "cSetRescueMacroVolume.h"
#include "org_Rescue_rjni_cSetRescueModelPropertyGroup.h"
#include "cSetRescueModelPropertyGroup.h"
#include "org_Rescue_rjni_cSetRescuePoint.h"
#include "cSetRescuePoint.h"
#include "org_Rescue_rjni_cSetRescuePolyLine.h"
#include "cSetRescuePolyLine.h"
#include "org_Rescue_rjni_cSetRescuePolyLineNode.h"
#include "cSetRescuePolyLineNode.h"
#include "org_Rescue_rjni_cSetRescuePolyLineNodeBUG.h"
#include "cSetRescuePolyLineNodeBUG.h"
#include "org_Rescue_rjni_cSetRescuePolyLineNodeUV.h"
#include "cSetRescuePolyLineNodeUV.h"
#include "org_Rescue_rjni_cSetRescuePolyLineNodeUVT.h"
#include "cSetRescuePolyLineNodeUVT.h"
#include "org_Rescue_rjni_cSetRescuePolyLineStub.h"
#include "cSetRescuePolyLineStub.h"
#include "org_Rescue_rjni_cSetRescueProperty.h"
#include "cSetRescueProperty.h"
#include "org_Rescue_rjni_cSetRescuePropertyGroup.h"
#include "cSetRescuePropertyGroup.h"
#include "org_Rescue_rjni_cSetRescueReferenceSurface.h"
#include "cSetRescueReferenceSurface.h"
#include "org_Rescue_rjni_cSetRescueReservoir.h"
#include "cSetRescueReservoir.h"
#include "org_Rescue_rjni_cSetRescueSection.h"
#include "cSetRescueSection.h"
#include "org_Rescue_rjni_cSetRescueSOctTreeNode.h"
#include "cSetRescueSOctTreeNode.h"
#include "org_Rescue_rjni_cSetRescueStairSteppedFault.h"
#include "cSetRescueStairSteppedFault.h"
#include "org_Rescue_rjni_cSetRescueSurfaceCell.h"
#include "cSetRescueSurfaceCell.h"
#include "org_Rescue_rjni_cSetRescueSurfaceToGrid.h"
#include "cSetRescueSurfaceToGrid.h"
#include "org_Rescue_rjni_cSetRescueTimeStepGroup.h"
#include "cSetRescueTimeStepGroup.h"
#include "org_Rescue_rjni_cSetRescueTriangleFace.h"
#include "cSetRescueTriangleFace.h"
#include "org_Rescue_rjni_cSetRescueTriangleVertex.h"
#include "cSetRescueTriangleVertex.h"
#include "org_Rescue_rjni_cSetRescueTrimEdge.h"
#include "cSetRescueTrimEdge.h"
#include "org_Rescue_rjni_cSetRescueTrimLoop.h"
#include "cSetRescueTrimLoop.h"
#include "org_Rescue_rjni_cSetRescueTrimLoopStub.h"
#include "cSetRescueTrimLoopStub.h"
#include "org_Rescue_rjni_cSetRescueTrimVertex.h"
#include "cSetRescueTrimVertex.h"
#include "org_Rescue_rjni_cSetRescueUnit.h"
#include "cSetRescueUnit.h"
#include "org_Rescue_rjni_cSetRescueWellbore.h"
#include "cSetRescueWellbore.h"
#include "org_Rescue_rjni_cSetRescueWellboreCell.h"
#include "cSetRescueWellboreCell.h"
#include "org_Rescue_rjni_cSetRescueWellboreProperty.h"
#include "cSetRescueWellboreProperty.h"
#include "org_Rescue_rjni_cSetRescueWellboreSampling.h"
#include "cSetRescueWellboreSampling.h"
#include "org_Rescue_rjni_cSetRescueWellboreSurface.h"
#include "cSetRescueWellboreSurface.h"
#include "org_Rescue_rjni_cSetRescueWireframe.h"
#include "cSetRescueWireframe.h"
#include "org_Rescue_rjni_cSetString.h"
#include "cSetString.h"
#include "org_Rescue_rjni_myHeaders.h"
#include "myHeaders.h"
#include "org_Rescue_rjni_RCH2DArray.h"
#include "RCH2DArray.h"
#include "org_Rescue_rjni_RCH3DArray.h"
#include "RCH3DArray.h"
#include "org_Rescue_rjni_RCHf2DArray.h"
#include "RCHf2DArray.h"
#include "org_Rescue_rjni_RCHf3DArray.h"
#include "RCHf3DArray.h"
#include "org_Rescue_rjni_RescueArray.h"
#include "RescueArray.h"
#include "org_Rescue_rjni_RescueArray2dVector.h"
#include "RescueArray2dVector.h"
#include "org_Rescue_rjni_RescueArray3dVector.h"
#include "RescueArray3dVector.h"
#include "org_Rescue_rjni_RescueArrayByte.h"
#include "RescueArrayByte.h"
#include "org_Rescue_rjni_RescueArrayDouble.h"
#include "RescueArrayDouble.h"
#include "org_Rescue_rjni_RescueArrayFloat.h"
#include "RescueArrayFloat.h"
#include "org_Rescue_rjni_RescueArrayFragment.h"
#include "RescueArrayFragment.h"
#include "org_Rescue_rjni_RescueArrayFragment2dVector.h"
#include "RescueArrayFragment2dVector.h"
#include "org_Rescue_rjni_RescueArrayFragment3dVector.h"
#include "RescueArrayFragment3dVector.h"
#include "org_Rescue_rjni_RescueArrayFragmentByte.h"
#include "RescueArrayFragmentByte.h"
#include "org_Rescue_rjni_RescueArrayFragmentFloat.h"
#include "RescueArrayFragmentFloat.h"
#include "org_Rescue_rjni_RescueArrayFragmentDouble.h"
#include "RescueArrayFragmentDouble.h"
#include "org_Rescue_rjni_RescueArrayFragmentInt.h"
#include "RescueArrayFragmentInt.h"
#include "org_Rescue_rjni_RescueArrayFragmentShort.h"
#include "RescueArrayFragmentShort.h"
#include "org_Rescue_rjni_RescueArrayInt.h"
#include "RescueArrayInt.h"
#include "org_Rescue_rjni_RescueArrayShort.h"
#include "RescueArrayShort.h"
#include "org_Rescue_rjni_RescueBitArray.h"
#include "RescueBitArray.h"
#include "org_Rescue_rjni_RescueBlock.h"
#include "RescueBlock.h"
#include "org_Rescue_rjni_RescueBlockUnit.h"
#include "RescueBlockUnit.h"
#include "org_Rescue_rjni_RescueBlockUnitHorizonSurface.h"
#include "RescueBlockUnitHorizonSurface.h"
#include "org_Rescue_rjni_RescueBlockUnitSide.h"
#include "RescueBlockUnitSide.h"
#include "org_Rescue_rjni_RescueColor.h"
#include "RescueColor.h"
#include "org_Rescue_rjni_RescueColorTable.h"
#include "RescueColorTable.h"
#include "org_Rescue_rjni_RescueColorTableList.h"
#include "RescueColorTableList.h"
#include "org_Rescue_rjni_RescueContext.h"
#include "RescueContext.h"
#include "org_Rescue_rjni_RescueCoordinateLine.h"
#include "RescueCoordinateLine.h"
#include "org_Rescue_rjni_RescueCoordinatePolyLine.h"
#include "RescueCoordinatePolyLine.h"
#include "org_Rescue_rjni_RescueCoordinateSystem.h"
#include "RescueCoordinateSystem.h"
#include "org_Rescue_rjni_RescueCoordinateSystemAxis.h"
#include "RescueCoordinateSystemAxis.h"
#include "org_Rescue_rjni_RescueDataContainer.h"
#include "RescueDataContainer.h"
#include "org_Rescue_rjni_RescueEdgeSet.h"
#include "RescueEdgeSet.h"
#include "org_Rescue_rjni_RescueEdgeSetStub.h"
#include "RescueEdgeSetStub.h"
#include "org_Rescue_rjni_RescueEventDescr.h"
#include "RescueEventDescr.h"
#include "org_Rescue_rjni_RescueFaultIntersection.h"
#include "RescueFaultIntersection.h"
#include "org_Rescue_rjni_RescueGeobody.h"
#include "RescueGeobody.h"
#include "org_Rescue_rjni_RescueGeobodyPart.h"
#include "RescueGeobodyPart.h"
#include "org_Rescue_rjni_RescueGeobodySurface.h"
#include "RescueGeobodySurface.h"
#include "org_Rescue_rjni_RescueGeobodyVolume.h"
#include "RescueGeobodyVolume.h"
#include "org_Rescue_rjni_RescueGeometry.h"
#include "RescueGeometry.h"
#include "org_Rescue_rjni_RescueGeometryUnit.h"
#include "RescueGeometryUnit.h"
#include "org_Rescue_rjni_RescueGrid.h"
#include "RescueGrid.h"
#include "org_Rescue_rjni_RescueGridAxis.h"
#include "RescueGridAxis.h"
#include "org_Rescue_rjni_RescueHistory.h"
#include "RescueHistory.h"
#include "org_Rescue_rjni_RescueHistoryObject.h"
#include "RescueHistoryObject.h"
#include "org_Rescue_rjni_RescueHorizon.h"
#include "RescueHorizon.h"
#include "org_Rescue_rjni_RescueIdTree.h"
#include "RescueIdTree.h"
#include "org_Rescue_rjni_RescueIdTreeNode.h"
#include "RescueIdTreeNode.h"
#include "org_Rescue_rjni_RescueIJSurface.h"
#include "RescueIJSurface.h"
#include "org_Rescue_rjni_RescueInterfaceSurfaceDesc.h"
#include "RescueInterfaceSurfaceDesc.h"
#include "org_Rescue_rjni_RescueLogicalOrder.h"
#include "RescueLogicalOrder.h"
#include "org_Rescue_rjni_RescueLogicalOrderEntry.h"
#include "RescueLogicalOrderEntry.h"
#include "org_Rescue_rjni_RescueLookup.h"
#include "RescueLookup.h"
#include "org_Rescue_rjni_RescueLookupItem.h"
#include "RescueLookupItem.h"
#include "org_Rescue_rjni_RescueLookupString.h"
#include "RescueLookupString.h"
#include "org_Rescue_rjni_RescueLookupTable.h"
#include "RescueLookupTable.h"
#include "org_Rescue_rjni_RescueMacroVolume.h"
#include "RescueMacroVolume.h"
#include "org_Rescue_rjni_RescueModel.h"
#include "RescueModel.h"
#include "org_Rescue_rjni_RescueModelPropertyGroup.h"
#include "RescueModelPropertyGroup.h"
#include "org_Rescue_rjni_RescueObject.h"
#include "RescueObject.h"
#include "org_Rescue_rjni_RescueParametricLGRMap.h"
#include "RescueParametricLGRMap.h"
#include "org_Rescue_rjni_RescuePillar.h"
#include "RescuePillar.h"
#include "org_Rescue_rjni_RescuePoint.h"
#include "RescuePoint.h"
#include "org_Rescue_rjni_RescuePolyLine.h"
#include "RescuePolyLine.h"
#include "org_Rescue_rjni_RescuePolyLineNode.h"
#include "RescuePolyLineNode.h"
#include "org_Rescue_rjni_RescuePolyLineNodeBUG.h"
#include "RescuePolyLineNodeBUG.h"
#include "org_Rescue_rjni_RescuePolyLineNodeUV.h"
#include "RescuePolyLineNodeUV.h"
#include "org_Rescue_rjni_RescuePolyLineNodeUVT.h"
#include "RescuePolyLineNodeUVT.h"
#include "org_Rescue_rjni_RescuePolyLineStub.h"
#include "RescuePolyLineStub.h"
#include "org_Rescue_rjni_RescueProgressReporter.h"
#include "RescueProgressReporter.h"
#include "org_Rescue_rjni_RescueProperty.h"
#include "RescueProperty.h"
#include "org_Rescue_rjni_RescuePropertyGroup.h"
#include "RescuePropertyGroup.h"
#include "org_Rescue_rjni_RescueQuadrupletArray.h"
#include "RescueQuadrupletArray.h"
#include "org_Rescue_rjni_RescueRadialGrid.h"
#include "RescueRadialGrid.h"
#include "org_Rescue_rjni_RescueReferenceSurface.h"
#include "RescueReferenceSurface.h"
#include "org_Rescue_rjni_RescueReservoir.h"
#include "RescueReservoir.h"
#include "org_Rescue_rjni_RescueSection.h"
#include "RescueSection.h"
#include "org_Rescue_rjni_RescueSOctTreeNode.h"
#include "RescueSOctTreeNode.h"
#include "org_Rescue_rjni_RescueSplineCoef.h"
#include "RescueSplineCoef.h"
#include "org_Rescue_rjni_RescueSplitLine.h"
#include "RescueSplitLine.h"
#include "org_Rescue_rjni_RescueSplitPoint.h"
#include "RescueSplitPoint.h"
#include "org_Rescue_rjni_RescueStairSteppedFault.h"
#include "RescueStairSteppedFault.h"
#include "org_Rescue_rjni_RescueSurface.h"
#include "RescueSurface.h"
#include "org_Rescue_rjni_RescueSurfaceCell.h"
#include "RescueSurfaceCell.h"
#include "org_Rescue_rjni_RescueSurfaceToGrid.h"
#include "RescueSurfaceToGrid.h"
#include "org_Rescue_rjni_RescueTimeStepGroup.h"
#include "RescueTimeStepGroup.h"
#include "org_Rescue_rjni_RescueTriangleFace.h"
#include "RescueTriangleFace.h"
#include "org_Rescue_rjni_RescueTriangleVertex.h"
#include "RescueTriangleVertex.h"
#include "org_Rescue_rjni_RescueTriangulatedSurface.h"
#include "RescueTriangulatedSurface.h"
#include "org_Rescue_rjni_RescueTrimEdge.h"
#include "RescueTrimEdge.h"
#include "org_Rescue_rjni_RescueTrimLoop.h"
#include "RescueTrimLoop.h"
#include "org_Rescue_rjni_RescueTrimLoopStub.h"
#include "RescueTrimLoopStub.h"
#include "org_Rescue_rjni_RescueTrimVertex.h"
#include "RescueTrimVertex.h"
#include "org_Rescue_rjni_RescueTrimVertexStub.h"
#include "RescueTrimVertexStub.h"
#include "org_Rescue_rjni_RescueTripletArray.h"
#include "RescueTripletArray.h"
#include "org_Rescue_rjni_RescueTruncation.h"
#include "RescueTruncation.h"
#include "org_Rescue_rjni_RescueUnit.h"
#include "RescueUnit.h"
#include "org_Rescue_rjni_RescueUnstructuredGrid.h"
#include "RescueUnstructuredGrid.h"
#include "org_Rescue_rjni_RescueVertex.h"
#include "RescueVertex.h"
#include "org_Rescue_rjni_RescueWellbore.h"
#include "RescueWellbore.h"
#include "org_Rescue_rjni_RescueWellboreCell.h"
#include "RescueWellboreCell.h"
#include "org_Rescue_rjni_RescueWellboreProperty.h"
#include "RescueWellboreProperty.h"
#include "org_Rescue_rjni_RescueWellboreSampling.h"
#include "RescueWellboreSampling.h"
#include "org_Rescue_rjni_RescueWellboreSurface.h"
#include "RescueWellboreSurface.h"
#include "org_Rescue_rjni_RescueWireframe.h"
#include "RescueWireframe.h"
#include "org_Rescue_rjni_RescueWireframeCallBack.h"
#include "RescueWireframeCallBack.h"
#include "org_Rescue_rjni_RescueWireframeOwner.h"
#include "RescueWireframeOwner.h"
#include "org_Rescue_rjni_RescueWireframeStub.h"
#include "RescueWireframeStub.h"
#include "org_Rescue_rjni_RescueZStack.h"
#include "RescueZStack.h"
#include "org_Rescue_rjni_RescueGeometryPropertyList.h"
#include "RescueGeometryPropertyList.h"
#include "org_Rescue_rjni_RescueGeometryLGRList.h"
#include "RescueGeometryLGRList.h"
#include "org_Rescue_rjni_cBagRescueTimeStepGroup.h"
#include "cBagRescueTimeStepGroup.h"
#include "RescueTimeStepManager.h"

void throwByName(JNIEnv *env, const char *name, const char *msg)
{
  jclass cls = env->FindClass(name);

  if (cls != 0)
  {
    env->ThrowNew(cls, msg);
  }
  env->DeleteLocalRef(cls);
}

float *copyFloatArray(float *arrayIn, RESCUEINT64 arrayLength)
{
  float *myReturn = new float[(size_t) arrayLength];
  memcpy(myReturn, arrayIn, sizeof(float) * arrayLength);
  return myReturn;
}

RESCUEINT64 *copyLongArray(RESCUEINT64 *arrayIn, RESCUEINT64 arrayLength)
{
  RESCUEINT64 *myReturn = new RESCUEINT64[(size_t) arrayLength];
  memcpy(myReturn, arrayIn, sizeof(RESCUEINT64) * arrayLength);
  return myReturn;
}

RESCUEINT32 *copyIntArray(RESCUEINT32 *arrayIn, RESCUEINT64 arrayLength)
{
  RESCUEINT32 *myReturn = new RESCUEINT32[(size_t) arrayLength];
  memcpy(myReturn, arrayIn, sizeof(RESCUEINT32) * arrayLength);
  return myReturn;
}

short *copyShortArray(short *arrayIn, RESCUEINT64 arrayLength)
{
  short *myReturn = new short[(size_t) arrayLength];
  memcpy(myReturn, arrayIn, sizeof(short) * arrayLength);
  return myReturn;
}

double *copyDoubleArray(double *arrayIn, RESCUEINT64 arrayLength)
{
  double *myReturn = new double[(size_t) arrayLength];
  memcpy(myReturn, arrayIn, sizeof(double) * arrayLength);
  return myReturn;
}

unsigned char *copyByteArray(unsigned char *arrayIn, RESCUEINT64 arrayLength)
{
  unsigned char *myReturn = new unsigned char[(size_t) arrayLength];
  memcpy(myReturn, arrayIn, sizeof(unsigned char) * arrayLength);
  return myReturn;
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagInt_Create_1cBagInt0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagInt *myReturn = new cBagInt();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_cBagInt");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagInt_Delete_1cBagInt
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagInt *myObj = (cBagInt *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_~cBagInt");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagInt_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObject)
{
  try
  {
    cBagInt *myObject = (cBagInt *) nativeNdx;
    myObject->operator+=((int) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagInt_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObject)
{
  try
  {
    cBagInt *myObject = (cBagInt *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagInt_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagInt *myObject = (cBagInt *) nativeNdx;
    jlong myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagInt_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagInt *myObject = (cBagInt *) nativeNdx;
    RESCUEINT64 myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagInt_Contains6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong example)
{
  try
  {
    cBagInt *myObject = (cBagInt *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Contains(example);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagInt_Contains");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueBlockUnit_Create_1cBagRescueBlockUnit0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueBlockUnit *myReturn = new cBagRescueBlockUnit();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueBlockUnit_cBagRescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueBlockUnit_Delete_1cBagRescueBlockUnit
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueBlockUnit *myObj = (cBagRescueBlockUnit *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueBlockUnit_~cBagRescueBlockUnit");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueBlockUnit_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueBlockUnit * newObject = (RescueBlockUnit *) newObjectNdx;
    cBagRescueBlockUnit *myObject = (cBagRescueBlockUnit *) nativeNdx;
    myObject->operator+=((RescueBlockUnit *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueBlockUnit_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueBlockUnit_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueBlockUnit * existingObject = (RescueBlockUnit *) existingObjectNdx;
    cBagRescueBlockUnit *myObject = (cBagRescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueBlockUnit *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueBlockUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueBlockUnit_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueBlockUnit *myObject = (cBagRescueBlockUnit *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueBlockUnit_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueBlockUnit_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueBlockUnit *myObject = (cBagRescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueBlockUnit_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueEdgeSet_Create_1cBagRescueEdgeSet0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueEdgeSet *myReturn = new cBagRescueEdgeSet();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueEdgeSet_cBagRescueEdgeSet");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueEdgeSet_Delete_1cBagRescueEdgeSet
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueEdgeSet *myObj = (cBagRescueEdgeSet *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueEdgeSet_~cBagRescueEdgeSet");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueEdgeSet_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueEdgeSet * newObject = (RescueEdgeSet *) newObjectNdx;
    cBagRescueEdgeSet *myObject = (cBagRescueEdgeSet *) nativeNdx;
    myObject->operator+=((RescueEdgeSet *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueEdgeSet_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueEdgeSet_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueEdgeSet * existingObject = (RescueEdgeSet *) existingObjectNdx;
    cBagRescueEdgeSet *myObject = (cBagRescueEdgeSet *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueEdgeSet *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueEdgeSet_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueEdgeSet_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueEdgeSet *myObject = (cBagRescueEdgeSet *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueEdgeSet_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueEdgeSet_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueEdgeSet *myObject = (cBagRescueEdgeSet *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueEdgeSet_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueGeobodyPart_Create_1cBagRescueGeobodyPart0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueGeobodyPart *myReturn = new cBagRescueGeobodyPart();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueGeobodyPart_cBagRescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueGeobodyPart_Delete_1cBagRescueGeobodyPart
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueGeobodyPart *myObj = (cBagRescueGeobodyPart *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueGeobodyPart_~cBagRescueGeobodyPart");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueGeobodyPart_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeobodyPart * newObject = (RescueGeobodyPart *) newObjectNdx;
    cBagRescueGeobodyPart *myObject = (cBagRescueGeobodyPart *) nativeNdx;
    myObject->operator+=((RescueGeobodyPart *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueGeobodyPart_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueGeobodyPart_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeobodyPart * existingObject = (RescueGeobodyPart *) existingObjectNdx;
    cBagRescueGeobodyPart *myObject = (cBagRescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeobodyPart *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueGeobodyPart_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueGeobodyPart_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueGeobodyPart *myObject = (cBagRescueGeobodyPart *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueGeobodyPart_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueGeobodyPart_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueGeobodyPart *myObject = (cBagRescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueGeobodyPart_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueHistory_Create_1cBagRescueHistory0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueHistory *myReturn = new cBagRescueHistory();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistory_cBagRescueHistory");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueHistory_Delete_1cBagRescueHistory
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueHistory *myObj = (cBagRescueHistory *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistory_~cBagRescueHistory");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueHistory_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueHistory * newObject = (RescueHistory *) newObjectNdx;
    cBagRescueHistory *myObject = (cBagRescueHistory *) nativeNdx;
    myObject->operator+=((RescueHistory *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistory_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueHistory_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueHistory * existingObject = (RescueHistory *) existingObjectNdx;
    cBagRescueHistory *myObject = (cBagRescueHistory *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueHistory *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistory_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueHistory_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueHistory *myObject = (cBagRescueHistory *) nativeNdx;
    RescueHistory * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistory_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueHistory_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueHistory *myObject = (cBagRescueHistory *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistory_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueHistoryObject_Create_1cBagRescueHistoryObject0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueHistoryObject *myReturn = new cBagRescueHistoryObject();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistoryObject_cBagRescueHistoryObject");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueHistoryObject_Delete_1cBagRescueHistoryObject
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueHistoryObject *myObj = (cBagRescueHistoryObject *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistoryObject_~cBagRescueHistoryObject");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueHistoryObject_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueHistoryObject * newObject = (RescueHistoryObject *) newObjectNdx;
    cBagRescueHistoryObject *myObject = (cBagRescueHistoryObject *) nativeNdx;
    myObject->operator+=((RescueHistoryObject *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistoryObject_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueHistoryObject_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueHistoryObject * existingObject = (RescueHistoryObject *) existingObjectNdx;
    cBagRescueHistoryObject *myObject = (cBagRescueHistoryObject *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueHistoryObject *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistoryObject_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueHistoryObject_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueHistoryObject *myObject = (cBagRescueHistoryObject *) nativeNdx;
    RescueHistoryObject * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistoryObject_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueHistoryObject_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueHistoryObject *myObject = (cBagRescueHistoryObject *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueHistoryObject_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePolyLine_Create_1cBagRescuePolyLine0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescuePolyLine *myReturn = new cBagRescuePolyLine();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLine_cBagRescuePolyLine");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescuePolyLine_Delete_1cBagRescuePolyLine
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescuePolyLine *myObj = (cBagRescuePolyLine *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLine_~cBagRescuePolyLine");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescuePolyLine_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLine * newObject = (RescuePolyLine *) newObjectNdx;
    cBagRescuePolyLine *myObject = (cBagRescuePolyLine *) nativeNdx;
    myObject->operator+=((RescuePolyLine *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLine_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescuePolyLine_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLine * existingObject = (RescuePolyLine *) existingObjectNdx;
    cBagRescuePolyLine *myObject = (cBagRescuePolyLine *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLine *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLine_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePolyLine_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescuePolyLine *myObject = (cBagRescuePolyLine *) nativeNdx;
    RescuePolyLine * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLine_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePolyLine_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescuePolyLine *myObject = (cBagRescuePolyLine *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLine_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePolyLineStub_Create_1cBagRescuePolyLineStub0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescuePolyLineStub *myReturn = new cBagRescuePolyLineStub();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLineStub_cBagRescuePolyLineStub");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescuePolyLineStub_Delete_1cBagRescuePolyLineStub
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescuePolyLineStub *myObj = (cBagRescuePolyLineStub *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLineStub_~cBagRescuePolyLineStub");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescuePolyLineStub_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLineStub * newObject = (RescuePolyLineStub *) newObjectNdx;
    cBagRescuePolyLineStub *myObject = (cBagRescuePolyLineStub *) nativeNdx;
    myObject->operator+=((RescuePolyLineStub *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLineStub_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescuePolyLineStub_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLineStub * existingObject = (RescuePolyLineStub *) existingObjectNdx;
    cBagRescuePolyLineStub *myObject = (cBagRescuePolyLineStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLineStub *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLineStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePolyLineStub_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescuePolyLineStub *myObject = (cBagRescuePolyLineStub *) nativeNdx;
    RescuePolyLineStub * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLineStub_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePolyLineStub_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescuePolyLineStub *myObject = (cBagRescuePolyLineStub *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePolyLineStub_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueProperty_Create_1cBagRescueProperty0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueProperty *myReturn = new cBagRescueProperty();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueProperty_cBagRescueProperty");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueProperty_Delete_1cBagRescueProperty
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueProperty *myObj = (cBagRescueProperty *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueProperty_~cBagRescueProperty");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueProperty_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueProperty * newObject = (RescueProperty *) newObjectNdx;
    cBagRescueProperty *myObject = (cBagRescueProperty *) nativeNdx;
    myObject->operator+=((RescueProperty *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueProperty_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueProperty_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueProperty * existingObject = (RescueProperty *) existingObjectNdx;
    cBagRescueProperty *myObject = (cBagRescueProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueProperty *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueProperty_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueProperty_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueProperty *myObject = (cBagRescueProperty *) nativeNdx;
    RescueProperty * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueProperty_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueProperty_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueProperty *myObject = (cBagRescueProperty *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueProperty_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueProperty_PropertyNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    cBagRescueProperty *myObject = (cBagRescueProperty *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyNamed((char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueTimeStepGroup_PropertyNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePropertyGroup_Create_1cBagRescuePropertyGroup0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescuePropertyGroup *myReturn = new cBagRescuePropertyGroup();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePropertyGroup_cBagRescuePropertyGroup");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescuePropertyGroup_Delete_1cBagRescuePropertyGroup
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescuePropertyGroup *myObj = (cBagRescuePropertyGroup *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePropertyGroup_~cBagRescuePropertyGroup");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescuePropertyGroup_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePropertyGroup * newObject = (RescuePropertyGroup *) newObjectNdx;
    cBagRescuePropertyGroup *myObject = (cBagRescuePropertyGroup *) nativeNdx;
    myObject->operator+=((RescuePropertyGroup *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePropertyGroup_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescuePropertyGroup_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePropertyGroup * existingObject = (RescuePropertyGroup *) existingObjectNdx;
    cBagRescuePropertyGroup *myObject = (cBagRescuePropertyGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePropertyGroup *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePropertyGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePropertyGroup_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescuePropertyGroup *myObject = (cBagRescuePropertyGroup *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePropertyGroup_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescuePropertyGroup_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescuePropertyGroup *myObject = (cBagRescuePropertyGroup *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescuePropertyGroup_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSection_Create_1cBagRescueSection0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueSection *myReturn = new cBagRescueSection();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSection_cBagRescueSection");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueSection_Delete_1cBagRescueSection
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueSection *myObj = (cBagRescueSection *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSection_~cBagRescueSection");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueSection_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSection * newObject = (RescueSection *) newObjectNdx;
    cBagRescueSection *myObject = (cBagRescueSection *) nativeNdx;
    myObject->operator+=((RescueSection *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSection_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueSection_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSection * existingObject = (RescueSection *) existingObjectNdx;
    cBagRescueSection *myObject = (cBagRescueSection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSection *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSection_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSection_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueSection *myObject = (cBagRescueSection *) nativeNdx;
    RescueSection * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSection_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSection_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueSection *myObject = (cBagRescueSection *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSection_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueStairSteppedFault_Create_1cBagRescueStairSteppedFault0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueStairSteppedFault *myReturn = new cBagRescueStairSteppedFault();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueStairSteppedFault_cBagRescueStairSteppedFault");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueStairSteppedFault_Delete_1cBagRescueStairSteppedFault
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueStairSteppedFault *myObj = (cBagRescueStairSteppedFault *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueStairSteppedFault_~cBagRescueStairSteppedFault");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueStairSteppedFault_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueStairSteppedFault * newObject = (RescueStairSteppedFault *) newObjectNdx;
    cBagRescueStairSteppedFault *myObject = (cBagRescueStairSteppedFault *) nativeNdx;
    myObject->operator+=((RescueStairSteppedFault *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueStairSteppedFault_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueStairSteppedFault_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueStairSteppedFault * existingObject = (RescueStairSteppedFault *) existingObjectNdx;
    cBagRescueStairSteppedFault *myObject = (cBagRescueStairSteppedFault *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueStairSteppedFault *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueStairSteppedFault_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueStairSteppedFault_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueStairSteppedFault *myObject = (cBagRescueStairSteppedFault *) nativeNdx;
    RescueStairSteppedFault * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueStairSteppedFault_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueStairSteppedFault_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueStairSteppedFault *myObject = (cBagRescueStairSteppedFault *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueStairSteppedFault_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceCell_Create_1cBagRescueSurfaceCell0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueSurfaceCell *myReturn = new cBagRescueSurfaceCell();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceCell_cBagRescueSurfaceCell");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceCell_Delete_1cBagRescueSurfaceCell
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueSurfaceCell *myObj = (cBagRescueSurfaceCell *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceCell_~cBagRescueSurfaceCell");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceCell_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSurfaceCell * newObject = (RescueSurfaceCell *) newObjectNdx;
    cBagRescueSurfaceCell *myObject = (cBagRescueSurfaceCell *) nativeNdx;
    myObject->operator+=((RescueSurfaceCell *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceCell_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceCell_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSurfaceCell * existingObject = (RescueSurfaceCell *) existingObjectNdx;
    cBagRescueSurfaceCell *myObject = (cBagRescueSurfaceCell *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSurfaceCell *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceCell_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceCell_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueSurfaceCell *myObject = (cBagRescueSurfaceCell *) nativeNdx;
    RescueSurfaceCell * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceCell_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceCell_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueSurfaceCell *myObject = (cBagRescueSurfaceCell *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceCell_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceToGrid_Create_1cBagRescueSurfaceToGrid0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueSurfaceToGrid *myReturn = new cBagRescueSurfaceToGrid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceToGrid_cBagRescueSurfaceToGrid");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceToGrid_Delete_1cBagRescueSurfaceToGrid
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueSurfaceToGrid *myObj = (cBagRescueSurfaceToGrid *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceToGrid_~cBagRescueSurfaceToGrid");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceToGrid_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSurfaceToGrid * newObject = (RescueSurfaceToGrid *) newObjectNdx;
    cBagRescueSurfaceToGrid *myObject = (cBagRescueSurfaceToGrid *) nativeNdx;
    myObject->operator+=((RescueSurfaceToGrid *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceToGrid_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceToGrid_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSurfaceToGrid * existingObject = (RescueSurfaceToGrid *) existingObjectNdx;
    cBagRescueSurfaceToGrid *myObject = (cBagRescueSurfaceToGrid *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSurfaceToGrid *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceToGrid_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceToGrid_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueSurfaceToGrid *myObject = (cBagRescueSurfaceToGrid *) nativeNdx;
    RescueSurfaceToGrid * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceToGrid_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueSurfaceToGrid_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueSurfaceToGrid *myObject = (cBagRescueSurfaceToGrid *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueSurfaceToGrid_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueTriangleVertex_Create_1cBagRescueTriangleVertex0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueTriangleVertex *myReturn = new cBagRescueTriangleVertex();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTriangleVertex_cBagRescueTriangleVertex");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueTriangleVertex_Delete_1cBagRescueTriangleVertex
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueTriangleVertex *myObj = (cBagRescueTriangleVertex *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTriangleVertex_~cBagRescueTriangleVertex");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueTriangleVertex_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTriangleVertex * newObject = (RescueTriangleVertex *) newObjectNdx;
    cBagRescueTriangleVertex *myObject = (cBagRescueTriangleVertex *) nativeNdx;
    myObject->operator+=((RescueTriangleVertex *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTriangleVertex_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueTriangleVertex_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTriangleVertex * existingObject = (RescueTriangleVertex *) existingObjectNdx;
    cBagRescueTriangleVertex *myObject = (cBagRescueTriangleVertex *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTriangleVertex *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTriangleVertex_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueTriangleVertex_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueTriangleVertex *myObject = (cBagRescueTriangleVertex *) nativeNdx;
    RescueTriangleVertex * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTriangleVertex_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueTriangleVertex_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueTriangleVertex *myObject = (cBagRescueTriangleVertex *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTriangleVertex_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueTrimLoop_Create_1cBagRescueTrimLoop0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueTrimLoop *myReturn = new cBagRescueTrimLoop();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTrimLoop_cBagRescueTrimLoop");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueTrimLoop_Delete_1cBagRescueTrimLoop
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueTrimLoop *myObj = (cBagRescueTrimLoop *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTrimLoop_~cBagRescueTrimLoop");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueTrimLoop_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTrimLoop * newObject = (RescueTrimLoop *) newObjectNdx;
    cBagRescueTrimLoop *myObject = (cBagRescueTrimLoop *) nativeNdx;
    myObject->operator+=((RescueTrimLoop *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTrimLoop_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueTrimLoop_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTrimLoop * existingObject = (RescueTrimLoop *) existingObjectNdx;
    cBagRescueTrimLoop *myObject = (cBagRescueTrimLoop *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTrimLoop *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTrimLoop_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueTrimLoop_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueTrimLoop *myObject = (cBagRescueTrimLoop *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTrimLoop_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueTrimLoop_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueTrimLoop *myObject = (cBagRescueTrimLoop *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueTrimLoop_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueWellboreCell_Create_1cBagRescueWellboreCell0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueWellboreCell *myReturn = new cBagRescueWellboreCell();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreCell_cBagRescueWellboreCell");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueWellboreCell_Delete_1cBagRescueWellboreCell
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueWellboreCell *myObj = (cBagRescueWellboreCell *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreCell_~cBagRescueWellboreCell");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueWellboreCell_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellboreCell * newObject = (RescueWellboreCell *) newObjectNdx;
    cBagRescueWellboreCell *myObject = (cBagRescueWellboreCell *) nativeNdx;
    myObject->operator+=((RescueWellboreCell *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreCell_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueWellboreCell_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellboreCell * existingObject = (RescueWellboreCell *) existingObjectNdx;
    cBagRescueWellboreCell *myObject = (cBagRescueWellboreCell *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellboreCell *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreCell_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueWellboreCell_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueWellboreCell *myObject = (cBagRescueWellboreCell *) nativeNdx;
    RescueWellboreCell * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreCell_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueWellboreCell_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueWellboreCell *myObject = (cBagRescueWellboreCell *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreCell_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueWellboreSurface_Create_1cBagRescueWellboreSurface0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cBagRescueWellboreSurface *myReturn = new cBagRescueWellboreSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreSurface_cBagRescueWellboreSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueWellboreSurface_Delete_1cBagRescueWellboreSurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cBagRescueWellboreSurface *myObj = (cBagRescueWellboreSurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreSurface_~cBagRescueWellboreSurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cBagRescueWellboreSurface_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellboreSurface * newObject = (RescueWellboreSurface *) newObjectNdx;
    cBagRescueWellboreSurface *myObject = (cBagRescueWellboreSurface *) nativeNdx;
    myObject->operator+=((RescueWellboreSurface *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreSurface_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cBagRescueWellboreSurface_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellboreSurface * existingObject = (RescueWellboreSurface *) existingObjectNdx;
    cBagRescueWellboreSurface *myObject = (cBagRescueWellboreSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellboreSurface *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueWellboreSurface_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cBagRescueWellboreSurface *myObject = (cBagRescueWellboreSurface *) nativeNdx;
    RescueWellboreSurface * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreSurface_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cBagRescueWellboreSurface_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cBagRescueWellboreSurface *myObject = (cBagRescueWellboreSurface *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cBagRescueWellboreSurface_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_cNameValuePair_NthName0
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cNameValuePair *myObject = (cNameValuePair *) nativeNdx;
    char * myReturn = myObject->NthName((RESCUEINT64) ordinal);
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cNameValuePair_NthName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_cNameValuePair_NthValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cNameValuePair *myObject = (cNameValuePair *) nativeNdx;
    char * myReturn = myObject->NthValue((RESCUEINT64) ordinal);
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cNameValuePair_NthValue");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cNameValuePair_Count2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cNameValuePair *myObject = (cNameValuePair *) nativeNdx;
    int myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cNameValuePair_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cNameValuePair_Contains3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    cNameValuePair *myObject = (cNameValuePair *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Contains((char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cNameValuePair_Contains");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cNameValuePair_SetNameValuePair4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameStr
  ,jstring valueStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    jboolean valueBool;
    const char *value = env->GetStringUTFChars(valueStr, &valueBool);
    cNameValuePair *myObject = (cNameValuePair *) nativeNdx;
    myObject->SetNameValuePair((char *) name,
                (char *) value);
    env->ReleaseStringUTFChars(nameStr, name);
    env->ReleaseStringUTFChars(valueStr, value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cNameValuePair_SetNameValuePair");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_cNameValuePair_GetNameValuePair5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    cNameValuePair *myObject = (cNameValuePair *) nativeNdx;
    char * myReturn = myObject->GetNameValuePair((char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cNameValuePair_GetNameValuePair");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_Create_1cSetRescueArrayFragment0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueArrayFragment *myReturn = new cSetRescueArrayFragment();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_cSetRescueArrayFragment");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_Delete_1cSetRescueArrayFragment
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueArrayFragment *myObj = (cSetRescueArrayFragment *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_~cSetRescueArrayFragment");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueArrayFragment * newObject = (RescueArrayFragment *) newObjectNdx;
    cSetRescueArrayFragment *myObject = (cSetRescueArrayFragment *) nativeNdx;
    myObject->operator+=((RescueArrayFragment *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueArrayFragment * existingObject = (RescueArrayFragment *) existingObjectNdx;
    cSetRescueArrayFragment *myObject = (cSetRescueArrayFragment *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueArrayFragment *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueArrayFragment *myObject = (cSetRescueArrayFragment *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlongArray JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_NthObject5x
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueArrayFragment *myObject = (cSetRescueArrayFragment *) nativeNdx;
    RescueArrayFragment * myReturnObj = myObject->NthObject((RESCUEINT64) ordinal);
    jlong myReturnArray[2];
    myReturnArray[0] = (jlong) myReturnObj;
    myReturnArray[1] = (jlong) myReturnObj->ParentArray()->IsA();
    jlongArray myReturn = env->NewLongArray(2);
    env->SetLongArrayRegion(myReturn, 0, 2, myReturnArray);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlongArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_NthObject");
    return (jlongArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_Count6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueArrayFragment *myObject = (cSetRescueArrayFragment *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueArrayFragment_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueArrayFragment *myObject = (cSetRescueArrayFragment *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueArrayFragment_EmptySelf");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlock_Create_1cSetRescueBlock0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueBlock *myReturn = new cSetRescueBlock();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_cSetRescueBlock");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlock_Delete_1cSetRescueBlock
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueBlock *myObj = (cSetRescueBlock *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_~cSetRescueBlock");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlock_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueBlock * newObject = (RescueBlock *) newObjectNdx;
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    myObject->operator+=((RescueBlock *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlock_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueBlock * existingObject = (RescueBlock *) existingObjectNdx;
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueBlock *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlock_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlock_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RescueBlock * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlock_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RescueBlock * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlock_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RescueBlock * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlock_GeometryIdentifiedBy8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlock_Count9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlock_EmptySelf10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlock_Relink13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlock_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlock *myObject = (cSetRescueBlock *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlock_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_Create_1cSetRescueBlockUnit0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueBlockUnit *myReturn = new cSetRescueBlockUnit();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_cSetRescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_Delete_1cSetRescueBlockUnit
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueBlockUnit *myObj = (cSetRescueBlockUnit *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_~cSetRescueBlockUnit");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueBlockUnit * newObject = (RescueBlockUnit *) newObjectNdx;
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    myObject->operator+=((RescueBlockUnit *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueBlockUnit * existingObject = (RescueBlockUnit *) existingObjectNdx;
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueBlockUnit *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_GeometryIdentifiedBy8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_Count9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_EmptySelf10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_Relink13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnit_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnit *myObject = (cSetRescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnit_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_Create_1cSetRescueBlockUnitHorizonSurface0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myReturn = new cSetRescueBlockUnitHorizonSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_cSetRescueBlockUnitHorizonSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_Delete_1cSetRescueBlockUnitHorizonSurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObj = (cSetRescueBlockUnitHorizonSurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_~cSetRescueBlockUnitHorizonSurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface * newObject = (RescueBlockUnitHorizonSurface *) newObjectNdx;
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    myObject->operator+=((RescueBlockUnitHorizonSurface *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface * existingObject = (RescueBlockUnitHorizonSurface *) existingObjectNdx;
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueBlockUnitHorizonSurface *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    RescueBlockUnitHorizonSurface * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    RescueBlockUnitHorizonSurface * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    RescueBlockUnitHorizonSurface * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_Dispose13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    myObject->Dispose();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_Dispose");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitHorizonSurface_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnitHorizonSurface *myObject = (cSetRescueBlockUnitHorizonSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitHorizonSurface_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_Create_1cSetRescueBlockUnitSide0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueBlockUnitSide *myReturn = new cSetRescueBlockUnitSide();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_cSetRescueBlockUnitSide");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_Delete_1cSetRescueBlockUnitSide
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueBlockUnitSide *myObj = (cSetRescueBlockUnitSide *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_~cSetRescueBlockUnitSide");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueBlockUnitSide * newObject = (RescueBlockUnitSide *) newObjectNdx;
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    myObject->operator+=((RescueBlockUnitSide *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueBlockUnitSide * existingObject = (RescueBlockUnitSide *) existingObjectNdx;
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueBlockUnitSide *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    RescueBlockUnitSide * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    RescueBlockUnitSide * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    RescueBlockUnitSide * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueBlockUnitSide_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueBlockUnitSide *myObject = (cSetRescueBlockUnitSide *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueBlockUnitSide_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_Identifier0
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    jlong myReturn = myObject->Identifier();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_Identifier");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_Create_1cSetRescueDataContainer1  (JNIEnv *env, jobject obj
  ,jlong modelInNdx)
{
  try
  {
    RescueModel * modelIn = (RescueModel *) modelInNdx;
    cSetRescueDataContainer *myReturn = new cSetRescueDataContainer((RescueModel *) modelIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_cSetRescueDataContainer");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_Delete_1cSetRescueDataContainer
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueDataContainer *myObj = (cSetRescueDataContainer *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_~cSetRescueDataContainer");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_AddTo3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueDataContainer * newObject = (RescueDataContainer *) newObjectNdx;
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    myObject->operator+=((RescueDataContainer *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueDataContainer * existingObject = (RescueDataContainer *) existingObjectNdx;
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueDataContainer *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_RemoveFrom5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_NthObject6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    RescueDataContainer * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    RescueDataContainer * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_FileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    RESCUEBOOL myReturn = myObject->FileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_FileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_cSetRescueDataContainer_FileVersion15
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueDataContainer *myObject = (cSetRescueDataContainer *) nativeNdx;
    int myReturn = (int) myObject->FileVersion();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueDataContainer_FileVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_Create_1RescueDataContainer0  (JNIEnv *env, jobject obj
  ,jlong modelNdx
  ,jlong customGridNdx)
{
  try
  {
    RescueModel * model = (RescueModel *) modelNdx;
    RescueGrid * customGrid = (RescueGrid *) customGridNdx;
    RescueDataContainer *myReturn = new RescueDataContainer((RescueModel *) model,
                (RescueGrid *) customGrid);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_RescueDataContainer");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_NamedData1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    cNameValuePair * myReturn = myObject->NamedData();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_NamedData");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_PropertyGrid2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    RescueGrid * myReturn = myObject->PropertyGrid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_PropertyGrid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_Properties3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    cSetRescueProperty * myReturn = myObject->Properties();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_Properties");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_PropertyGroups4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    cSetRescuePropertyGroup * myReturn = myObject->PropertyGroups();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_PropertyGroups");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_NthRescueProperty5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    RescueProperty * myReturn = myObject->NthRescueProperty(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_NthRescueProperty");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_PropertyIdentifiedBy6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_PropertyIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_PropertyNamed7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyNamed((char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_PropertyNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_Grid8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    RescueGrid * myReturn = myObject->Grid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_Grid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueDataContainer_ParentModel9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueDataContainer *myObject = (RescueDataContainer *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueDataContainer_Delete_1RescueDataContainer
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueDataContainer *myObj = (RescueDataContainer *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueDataContainer_~RescueDataContainer");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_Create_1cSetRescueEdgeSet0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueEdgeSet *myReturn = new cSetRescueEdgeSet();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_cSetRescueEdgeSet");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_Delete_1cSetRescueEdgeSet
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueEdgeSet *myObj = (cSetRescueEdgeSet *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_~cSetRescueEdgeSet");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueEdgeSet * newObject = (RescueEdgeSet *) newObjectNdx;
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    myObject->operator+=((RescueEdgeSet *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueEdgeSet * existingObject = (RescueEdgeSet *) existingObjectNdx;
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueEdgeSet *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSet_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueEdgeSet *myObject = (cSetRescueEdgeSet *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSet_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_Create_1cSetRescueEdgeSetStub0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueEdgeSetStub *myReturn = new cSetRescueEdgeSetStub();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_cSetRescueEdgeSetStub");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_Delete_1cSetRescueEdgeSetStub
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueEdgeSetStub *myObj = (cSetRescueEdgeSetStub *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_~cSetRescueEdgeSetStub");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueEdgeSetStub * newObject = (RescueEdgeSetStub *) newObjectNdx;
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    myObject->operator+=((RescueEdgeSetStub *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueEdgeSetStub * existingObject = (RescueEdgeSetStub *) existingObjectNdx;
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueEdgeSetStub *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEdgeSetStub_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueEdgeSetStub *myObject = (cSetRescueEdgeSetStub *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEdgeSetStub_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_Create_1cSetRescueEventDescr0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueEventDescr *myReturn = new cSetRescueEventDescr();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_cSetRescueEventDescr");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_Delete_1cSetRescueEventDescr
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueEventDescr *myObj = (cSetRescueEventDescr *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_~cSetRescueEventDescr");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueEventDescr * newObject = (RescueEventDescr *) newObjectNdx;
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    myObject->operator+=((RescueEventDescr *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueEventDescr * existingObject = (RescueEventDescr *) existingObjectNdx;
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueEventDescr *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    RescueEventDescr * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    RescueEventDescr * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    RescueEventDescr * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueEventDescr_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueEventDescr *myObject = (cSetRescueEventDescr *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueEventDescr_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_Create_1cSetRescueFaultIntersection0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueFaultIntersection *myReturn = new cSetRescueFaultIntersection();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_cSetRescueFaultIntersection");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_Delete_1cSetRescueFaultIntersection
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueFaultIntersection *myObj = (cSetRescueFaultIntersection *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_~cSetRescueFaultIntersection");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueFaultIntersection * newObject = (RescueFaultIntersection *) newObjectNdx;
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    myObject->operator+=((RescueFaultIntersection *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueFaultIntersection * existingObject = (RescueFaultIntersection *) existingObjectNdx;
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueFaultIntersection *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    RescueFaultIntersection * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    RescueFaultIntersection * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    RescueFaultIntersection * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueFaultIntersection_RelinkWireframeData13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueFaultIntersection *myObject = (cSetRescueFaultIntersection *) nativeNdx;
    myObject->RelinkWireframeData((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueFaultIntersection_RelinkWireframeData");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_Create_1cSetRescueGeobody0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGeobody *myReturn = new cSetRescueGeobody();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_cSetRescueGeobody");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_Delete_1cSetRescueGeobody
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGeobody *myObj = (cSetRescueGeobody *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_~cSetRescueGeobody");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeobody * newObject = (RescueGeobody *) newObjectNdx;
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    myObject->operator+=((RescueGeobody *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeobody * existingObject = (RescueGeobody *) existingObjectNdx;
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeobody *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RescueGeobody * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RescueGeobody * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RescueGeobody * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_GeometryIdentifiedBy8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_Count9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_EmptySelf10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_Relink13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobody_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobody *myObject = (cSetRescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobody_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_Create_1cSetRescueGeobodyPart0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGeobodyPart *myReturn = new cSetRescueGeobodyPart();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_cSetRescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_Delete_1cSetRescueGeobodyPart
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGeobodyPart *myObj = (cSetRescueGeobodyPart *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_~cSetRescueGeobodyPart");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeobodyPart * newObject = (RescueGeobodyPart *) newObjectNdx;
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    myObject->operator+=((RescueGeobodyPart *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeobodyPart * existingObject = (RescueGeobodyPart *) existingObjectNdx;
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeobodyPart *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_GeometryIdentifiedBy8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_Count9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_EmptySelf10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_Relink13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_DropWireframeMemory14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    myObject->DropWireframeMemory();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_DropWireframeMemory");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_RelinkWireframeData16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    myObject->RelinkWireframeData((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_RelinkWireframeData");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyPart_AnyFileTruncated18
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodyPart *myObject = (cSetRescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyPart_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_Create_1cSetRescueGeobodySurface0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGeobodySurface *myReturn = new cSetRescueGeobodySurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_cSetRescueGeobodySurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_Delete_1cSetRescueGeobodySurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGeobodySurface *myObj = (cSetRescueGeobodySurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_~cSetRescueGeobodySurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeobodySurface * newObject = (RescueGeobodySurface *) newObjectNdx;
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    myObject->operator+=((RescueGeobodySurface *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeobodySurface * existingObject = (RescueGeobodySurface *) existingObjectNdx;
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeobodySurface *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodySurface_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeobodySurface *myObject = (cSetRescueGeobodySurface *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodySurface_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_Create_1cSetRescueGeobodyVolume0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGeobodyVolume *myReturn = new cSetRescueGeobodyVolume();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_cSetRescueGeobodyVolume");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_Delete_1cSetRescueGeobodyVolume
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGeobodyVolume *myObj = (cSetRescueGeobodyVolume *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_~cSetRescueGeobodyVolume");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeobodyVolume * newObject = (RescueGeobodyVolume *) newObjectNdx;
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    myObject->operator+=((RescueGeobodyVolume *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeobodyVolume * existingObject = (RescueGeobodyVolume *) existingObjectNdx;
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeobodyVolume *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeobodyVolume_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeobodyVolume *myObject = (cSetRescueGeobodyVolume *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeobodyVolume_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_Create_1cSetRescueGeometry0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGeometry *myReturn = new cSetRescueGeometry();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_cSetRescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_Delete_1cSetRescueGeometry
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGeometry *myObj = (cSetRescueGeometry *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_~cSetRescueGeometry");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeometry * newObject = (RescueGeometry *) newObjectNdx;
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    myObject->operator+=((RescueGeometry *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeometry * existingObject = (RescueGeometry *) existingObjectNdx;
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeometry *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_Dispose13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    myObject->Dispose();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_Dispose");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeometry_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeometry *myObject = (cSetRescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometry_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_Create_1cSetRescueGeometryUnit0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGeometryUnit *myReturn = new cSetRescueGeometryUnit();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_cSetRescueGeometryUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_Delete_1cSetRescueGeometryUnit
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGeometryUnit *myObj = (cSetRescueGeometryUnit *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_~cSetRescueGeometryUnit");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGeometryUnit * newObject = (RescueGeometryUnit *) newObjectNdx;
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    myObject->operator+=((RescueGeometryUnit *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGeometryUnit * existingObject = (RescueGeometryUnit *) existingObjectNdx;
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGeometryUnit *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    RescueGeometryUnit * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_ObjectIdentifiedBy6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    RescueGeometryUnit * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_Count7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_EmptySelf8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGeometryUnit_Relink11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGeometryUnit *myObject = (cSetRescueGeometryUnit *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGeometryUnit_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_Create_1cSetRescueGridAxis0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueGridAxis *myReturn = new cSetRescueGridAxis();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_cSetRescueGridAxis");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_Delete_1cSetRescueGridAxis
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueGridAxis *myObj = (cSetRescueGridAxis *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_~cSetRescueGridAxis");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueGridAxis * newObject = (RescueGridAxis *) newObjectNdx;
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    myObject->operator+=((RescueGridAxis *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueGridAxis * existingObject = (RescueGridAxis *) existingObjectNdx;
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueGridAxis *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    RescueGridAxis * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    RescueGridAxis * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    RescueGridAxis * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueGridAxis_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueGridAxis *myObject = (cSetRescueGridAxis *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueGridAxis_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHistory_Create_1cSetRescueHistory0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueHistory *myReturn = new cSetRescueHistory();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_cSetRescueHistory");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHistory_Delete_1cSetRescueHistory
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueHistory *myObj = (cSetRescueHistory *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_~cSetRescueHistory");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHistory_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueHistory * newObject = (RescueHistory *) newObjectNdx;
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    myObject->operator+=((RescueHistory *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueHistory_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueHistory * existingObject = (RescueHistory *) existingObjectNdx;
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueHistory *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueHistory_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHistory_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    RescueHistory * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHistory_ObjectIdentifiedBy6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    RescueHistory * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHistory_Count7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHistory_EmptySelf8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHistory_Relink11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueHistory *myObject = (cSetRescueHistory *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHistory_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_Create_1cSetRescueHorizon0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueHorizon *myReturn = new cSetRescueHorizon();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_cSetRescueHorizon");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_Delete_1cSetRescueHorizon
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueHorizon *myObj = (cSetRescueHorizon *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_~cSetRescueHorizon");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueHorizon * newObject = (RescueHorizon *) newObjectNdx;
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    myObject->operator+=((RescueHorizon *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueHorizon * existingObject = (RescueHorizon *) existingObjectNdx;
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueHorizon *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    RescueHorizon * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    RescueHorizon * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    RescueHorizon * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueHorizon_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueHorizon *myObject = (cSetRescueHorizon *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueHorizon_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_Create_1cSetRescueIJSurface0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueIJSurface *myReturn = new cSetRescueIJSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_cSetRescueIJSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_Delete_1cSetRescueIJSurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueIJSurface *myObj = (cSetRescueIJSurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_~cSetRescueIJSurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueIJSurface * newObject = (RescueIJSurface *) newObjectNdx;
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    myObject->operator+=((RescueIJSurface *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueIJSurface * existingObject = (RescueIJSurface *) existingObjectNdx;
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueIJSurface *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    RescueIJSurface * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    RescueIJSurface * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    RescueIJSurface * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueIJSurface_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueIJSurface *myObject = (cSetRescueIJSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueIJSurface_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_Create_1cSetRescueInterfaceSurfaceDesc0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueInterfaceSurfaceDesc *myReturn = new cSetRescueInterfaceSurfaceDesc();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_cSetRescueInterfaceSurfaceDesc");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_Delete_1cSetRescueInterfaceSurfaceDesc
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueInterfaceSurfaceDesc *myObj = (cSetRescueInterfaceSurfaceDesc *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_~cSetRescueInterfaceSurfaceDesc");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueInterfaceSurfaceDesc * newObject = (RescueInterfaceSurfaceDesc *) newObjectNdx;
    cSetRescueInterfaceSurfaceDesc *myObject = (cSetRescueInterfaceSurfaceDesc *) nativeNdx;
    myObject->operator+=((RescueInterfaceSurfaceDesc *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueInterfaceSurfaceDesc * existingObject = (RescueInterfaceSurfaceDesc *) existingObjectNdx;
    cSetRescueInterfaceSurfaceDesc *myObject = (cSetRescueInterfaceSurfaceDesc *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueInterfaceSurfaceDesc *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueInterfaceSurfaceDesc *myObject = (cSetRescueInterfaceSurfaceDesc *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueInterfaceSurfaceDesc *myObject = (cSetRescueInterfaceSurfaceDesc *) nativeNdx;
    RescueInterfaceSurfaceDesc * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_Count6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueInterfaceSurfaceDesc *myObject = (cSetRescueInterfaceSurfaceDesc *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueInterfaceSurfaceDesc_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueInterfaceSurfaceDesc *myObject = (cSetRescueInterfaceSurfaceDesc *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueInterfaceSurfaceDesc_EmptySelf");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueLookup_Create_1cSetRescueLookup0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueLookup *myReturn = new cSetRescueLookup();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_cSetRescueLookup");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueLookup_Delete_1cSetRescueLookup
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueLookup *myObj = (cSetRescueLookup *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_~cSetRescueLookup");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueLookup_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueLookup * newObject = (RescueLookup *) newObjectNdx;
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    myObject->operator+=((RescueLookup *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueLookup_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueLookup * existingObject = (RescueLookup *) existingObjectNdx;
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueLookup *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueLookup_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueLookup_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    RescueLookup * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueLookup_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    RescueLookup * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueLookup_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    RescueLookup * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueLookup_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueLookup_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueLookup_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueLookup *myObject = (cSetRescueLookup *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueLookup_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_Create_1cSetRescueMacroVolume0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueMacroVolume *myReturn = new cSetRescueMacroVolume();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_cSetRescueMacroVolume");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_Delete_1cSetRescueMacroVolume
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueMacroVolume *myObj = (cSetRescueMacroVolume *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_~cSetRescueMacroVolume");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueMacroVolume * newObject = (RescueMacroVolume *) newObjectNdx;
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    myObject->operator+=((RescueMacroVolume *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueMacroVolume * existingObject = (RescueMacroVolume *) existingObjectNdx;
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueMacroVolume *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueMacroVolume_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueMacroVolume *myObject = (cSetRescueMacroVolume *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueMacroVolume_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_Create_1cSetRescueModelPropertyGroup0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueModelPropertyGroup *myReturn = new cSetRescueModelPropertyGroup();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_cSetRescueModelPropertyGroup");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_Delete_1cSetRescueModelPropertyGroup
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueModelPropertyGroup *myObj = (cSetRescueModelPropertyGroup *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_~cSetRescueModelPropertyGroup");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueModelPropertyGroup * newObject = (RescueModelPropertyGroup *) newObjectNdx;
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    myObject->operator+=((RescueModelPropertyGroup *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueModelPropertyGroup * existingObject = (RescueModelPropertyGroup *) existingObjectNdx;
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueModelPropertyGroup *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    RescueModelPropertyGroup * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    RescueModelPropertyGroup * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    RescueModelPropertyGroup * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueModelPropertyGroup_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueModelPropertyGroup *myObject = (cSetRescueModelPropertyGroup *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueModelPropertyGroup_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePoint_Create_1cSetRescuePoint0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePoint *myReturn = new cSetRescuePoint();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_cSetRescuePoint");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePoint_Delete_1cSetRescuePoint
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePoint *myObj = (cSetRescuePoint *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_~cSetRescuePoint");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePoint_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePoint * newObject = (RescuePoint *) newObjectNdx;
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    myObject->operator+=((RescuePoint *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePoint_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePoint * existingObject = (RescuePoint *) existingObjectNdx;
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePoint *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePoint_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePoint_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    RescuePoint * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePoint_Count6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    jlong  myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong ) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_Count");
    return (jlong ) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePoint_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_EmptySelf");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePoint_IndexOf10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePoint * existingObject = (RescuePoint *) existingObjectNdx;
    cSetRescuePoint *myObject = (cSetRescuePoint *) nativeNdx;
    jlong myReturn = myObject->IndexOf((RescuePoint *) existingObject);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePoint_IndexOf");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_Create_1cSetRescuePolyLine0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePolyLine *myReturn = new cSetRescuePolyLine();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_cSetRescuePolyLine");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_Delete_1cSetRescuePolyLine
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePolyLine *myObj = (cSetRescuePolyLine *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_~cSetRescuePolyLine");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLine * newObject = (RescuePolyLine *) newObjectNdx;
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    myObject->operator+=((RescuePolyLine *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLine * existingObject = (RescuePolyLine *) existingObjectNdx;
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLine *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    RescuePolyLine * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    RescuePolyLine * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    RescuePolyLine * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLine_PolyLineBetween13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong end1Ndx
  ,jlong end2Ndx)
{
  try
  {
    RescueTrimVertex * end1 = (RescueTrimVertex *) end1Ndx;
    RescueTrimVertex * end2 = (RescueTrimVertex *) end2Ndx;
    cSetRescuePolyLine *myObject = (cSetRescuePolyLine *) nativeNdx;
    RescuePolyLine * myReturn = myObject->PolyLineBetween((RescueTrimVertex *) end1,
                (RescueTrimVertex *) end2);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLine_PolyLineBetween");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_Create_1cSetRescuePolyLineNode0  (JNIEnv *env, jobject obj
  ,jlong parentInNdx)
{
  try
  {
    RescuePolyLine * parentIn = (RescuePolyLine *) parentInNdx;
    cSetRescuePolyLineNode *myReturn = new cSetRescuePolyLineNode((RescuePolyLine *) parentIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_cSetRescuePolyLineNode");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_Delete_1cSetRescuePolyLineNode
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePolyLineNode *myObj = (cSetRescuePolyLineNode *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_~cSetRescuePolyLineNode");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLineNode * newObject = (RescuePolyLineNode *) newObjectNdx;
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator+=((RescuePolyLineNode *) newObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_operator+=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLineNode * existingObject = (RescuePolyLineNode *) existingObjectNdx;
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLineNode *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    RescuePolyLineNode * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    RescuePolyLineNode * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    RescuePolyLineNode * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNode_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePolyLineNode *myObject = (cSetRescuePolyLineNode *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNode_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_Create_1cSetRescuePolyLineNodeBUG0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myReturn = new cSetRescuePolyLineNodeBUG();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_cSetRescuePolyLineNodeBUG");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_Delete_1cSetRescuePolyLineNodeBUG
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myObj = (cSetRescuePolyLineNodeBUG *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_~cSetRescuePolyLineNodeBUG");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLineNodeBUG * newObject = (RescuePolyLineNodeBUG *) newObjectNdx;
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    myObject->operator+=((RescuePolyLineNodeBUG *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLineNodeBUG * existingObject = (RescuePolyLineNodeBUG *) existingObjectNdx;
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLineNodeBUG *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    RescuePolyLineNodeBUG * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    RescuePolyLineNodeBUG * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    RescuePolyLineNodeBUG * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeBUG_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePolyLineNodeBUG *myObject = (cSetRescuePolyLineNodeBUG *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeBUG_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_Create_1cSetRescuePolyLineNodeUV0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePolyLineNodeUV *myReturn = new cSetRescuePolyLineNodeUV();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_cSetRescuePolyLineNodeUV");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_Delete_1cSetRescuePolyLineNodeUV
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePolyLineNodeUV *myObj = (cSetRescuePolyLineNodeUV *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_~cSetRescuePolyLineNodeUV");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLineNodeUV * newObject = (RescuePolyLineNodeUV *) newObjectNdx;
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    myObject->operator+=((RescuePolyLineNodeUV *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLineNodeUV * existingObject = (RescuePolyLineNodeUV *) existingObjectNdx;
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLineNodeUV *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    RescuePolyLineNodeUV * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    RescuePolyLineNodeUV * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    RescuePolyLineNodeUV * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUV_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePolyLineNodeUV *myObject = (cSetRescuePolyLineNodeUV *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUV_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_Create_1cSetRescuePolyLineNodeUVT0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myReturn = new cSetRescuePolyLineNodeUVT();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_cSetRescuePolyLineNodeUVT");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_Delete_1cSetRescuePolyLineNodeUVT
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myObj = (cSetRescuePolyLineNodeUVT *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_~cSetRescuePolyLineNodeUVT");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLineNodeUVT * newObject = (RescuePolyLineNodeUVT *) newObjectNdx;
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    myObject->operator+=((RescuePolyLineNodeUVT *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLineNodeUVT * existingObject = (RescuePolyLineNodeUVT *) existingObjectNdx;
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLineNodeUVT *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    RescuePolyLineNodeUVT * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    RescuePolyLineNodeUVT * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    RescuePolyLineNodeUVT * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineNodeUVT_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePolyLineNodeUVT *myObject = (cSetRescuePolyLineNodeUVT *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineNodeUVT_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_Create_1cSetRescuePolyLineStub0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePolyLineStub *myReturn = new cSetRescuePolyLineStub();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_cSetRescuePolyLineStub");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_Delete_1cSetRescuePolyLineStub
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePolyLineStub *myObj = (cSetRescuePolyLineStub *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_~cSetRescuePolyLineStub");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePolyLineStub * newObject = (RescuePolyLineStub *) newObjectNdx;
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    myObject->operator+=((RescuePolyLineStub *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePolyLineStub * existingObject = (RescuePolyLineStub *) existingObjectNdx;
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePolyLineStub *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    RescuePolyLineStub * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    RescuePolyLineStub * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    RescuePolyLineStub * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePolyLineStub_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePolyLineStub *myObject = (cSetRescuePolyLineStub *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePolyLineStub_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueProperty_Create_1cSetRescueProperty0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueProperty *myReturn = new cSetRescueProperty();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_cSetRescueProperty");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_Delete_1cSetRescueProperty
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueProperty *myObj = (cSetRescueProperty *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_~cSetRescueProperty");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueProperty * newObject = (RescueProperty *) newObjectNdx;
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    myObject->operator+=((RescueProperty *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueProperty_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueProperty * existingObject = (RescueProperty *) existingObjectNdx;
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueProperty *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueProperty_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueProperty_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    RescueProperty * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueProperty_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    RescueProperty * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueProperty_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    RescueProperty * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueProperty_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_Dispose13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    myObject->Dispose();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_Dispose");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueProperty_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_Relinquish15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueProperty * existingObject = (RescueProperty *) existingObjectNdx;
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    myObject->Relinquish((RescueProperty *) existingObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_Relinquish");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueProperty_RelinquishAll16
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueProperty *myObject = (cSetRescueProperty *) nativeNdx;
    myObject->RelinquishAll();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueProperty_RelinquishAll");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_Create_1cSetRescuePropertyGroup0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescuePropertyGroup *myReturn = new cSetRescuePropertyGroup();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_cSetRescuePropertyGroup");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_Delete_1cSetRescuePropertyGroup
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescuePropertyGroup *myObj = (cSetRescuePropertyGroup *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_~cSetRescuePropertyGroup");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescuePropertyGroup * newObject = (RescuePropertyGroup *) newObjectNdx;
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    myObject->operator+=((RescuePropertyGroup *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescuePropertyGroup * existingObject = (RescuePropertyGroup *) existingObjectNdx;
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescuePropertyGroup *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescuePropertyGroup_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescuePropertyGroup *myObject = (cSetRescuePropertyGroup *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescuePropertyGroup_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_Create_1cSetRescueReferenceSurface0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueReferenceSurface *myReturn = new cSetRescueReferenceSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_cSetRescueReferenceSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_Delete_1cSetRescueReferenceSurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueReferenceSurface *myObj = (cSetRescueReferenceSurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_~cSetRescueReferenceSurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueReferenceSurface * newObject = (RescueReferenceSurface *) newObjectNdx;
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    myObject->operator+=((RescueReferenceSurface *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueReferenceSurface * existingObject = (RescueReferenceSurface *) existingObjectNdx;
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueReferenceSurface *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    RescueReferenceSurface * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    RescueReferenceSurface * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    RescueReferenceSurface * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueReferenceSurface_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueReferenceSurface *myObject = (cSetRescueReferenceSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReferenceSurface_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_Create_1cSetRescueReservoir0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueReservoir *myReturn = new cSetRescueReservoir();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_cSetRescueReservoir");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_Delete_1cSetRescueReservoir
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueReservoir *myObj = (cSetRescueReservoir *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_~cSetRescueReservoir");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueReservoir * newObject = (RescueReservoir *) newObjectNdx;
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    myObject->operator+=((RescueReservoir *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueReservoir * existingObject = (RescueReservoir *) existingObjectNdx;
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueReservoir *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    RescueReservoir * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_ObjectIdentifiedBy6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    RescueReservoir * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_Count7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_EmptySelf8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueReservoir_Relink11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueReservoir *myObject = (cSetRescueReservoir *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueReservoir_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSection_Create_1cSetRescueSection0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueSection *myReturn = new cSetRescueSection();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_cSetRescueSection");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSection_Delete_1cSetRescueSection
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueSection *myObj = (cSetRescueSection *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_~cSetRescueSection");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSection_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSection * newObject = (RescueSection *) newObjectNdx;
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    myObject->operator+=((RescueSection *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSection_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSection * existingObject = (RescueSection *) existingObjectNdx;
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSection *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSection_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSection_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    RescueSection * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSection_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    RescueSection * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSection_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    RescueSection * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSection_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSection_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSection_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSection_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSection *myObject = (cSetRescueSection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSection_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_Create_1cSetRescueSOctTreeNode0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueSOctTreeNode *myReturn = new cSetRescueSOctTreeNode();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_cSetRescueSOctTreeNode");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_Delete_1cSetRescueSOctTreeNode
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueSOctTreeNode *myObj = (cSetRescueSOctTreeNode *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_~cSetRescueSOctTreeNode");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSOctTreeNode * newObject = (RescueSOctTreeNode *) newObjectNdx;
    cSetRescueSOctTreeNode *myObject = (cSetRescueSOctTreeNode *) nativeNdx;
    myObject->operator+=((RescueSOctTreeNode *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSOctTreeNode * existingObject = (RescueSOctTreeNode *) existingObjectNdx;
    cSetRescueSOctTreeNode *myObject = (cSetRescueSOctTreeNode *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSOctTreeNode *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueSOctTreeNode *myObject = (cSetRescueSOctTreeNode *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueSOctTreeNode *myObject = (cSetRescueSOctTreeNode *) nativeNdx;
    RescueSOctTreeNode * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_Count6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSOctTreeNode *myObject = (cSetRescueSOctTreeNode *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSOctTreeNode_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSOctTreeNode *myObject = (cSetRescueSOctTreeNode *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSOctTreeNode_EmptySelf");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_Create_1cSetRescueStairSteppedFault0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueStairSteppedFault *myReturn = new cSetRescueStairSteppedFault();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_cSetRescueStairSteppedFault");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_Delete_1cSetRescueStairSteppedFault
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueStairSteppedFault *myObj = (cSetRescueStairSteppedFault *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_~cSetRescueStairSteppedFault");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueStairSteppedFault * newObject = (RescueStairSteppedFault *) newObjectNdx;
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    myObject->operator+=((RescueStairSteppedFault *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueStairSteppedFault * existingObject = (RescueStairSteppedFault *) existingObjectNdx;
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueStairSteppedFault *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    RescueStairSteppedFault * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_ObjectIdentifiedBy6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    RescueStairSteppedFault * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_Count7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_EmptySelf8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueStairSteppedFault_Relink11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueStairSteppedFault *myObject = (cSetRescueStairSteppedFault *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueStairSteppedFault_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_Create_1cSetRescueSurfaceCell0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueSurfaceCell *myReturn = new cSetRescueSurfaceCell();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_cSetRescueSurfaceCell");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_Delete_1cSetRescueSurfaceCell
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueSurfaceCell *myObj = (cSetRescueSurfaceCell *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_~cSetRescueSurfaceCell");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSurfaceCell * newObject = (RescueSurfaceCell *) newObjectNdx;
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    myObject->operator+=((RescueSurfaceCell *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSurfaceCell * existingObject = (RescueSurfaceCell *) existingObjectNdx;
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSurfaceCell *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    RescueSurfaceCell * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    RescueSurfaceCell * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    RescueSurfaceCell * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceCell_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueSurfaceCell *myObject = (cSetRescueSurfaceCell *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceCell_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_Create_1cSetRescueSurfaceToGrid0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueSurfaceToGrid *myReturn = new cSetRescueSurfaceToGrid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_cSetRescueSurfaceToGrid");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_Delete_1cSetRescueSurfaceToGrid
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueSurfaceToGrid *myObj = (cSetRescueSurfaceToGrid *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_~cSetRescueSurfaceToGrid");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueSurfaceToGrid * newObject = (RescueSurfaceToGrid *) newObjectNdx;
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    myObject->operator+=((RescueSurfaceToGrid *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueSurfaceToGrid * existingObject = (RescueSurfaceToGrid *) existingObjectNdx;
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueSurfaceToGrid *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    RescueSurfaceToGrid * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_ObjectIdentifiedBy6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    RescueSurfaceToGrid * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_Count7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_EmptySelf8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueSurfaceToGrid_Relink11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueSurfaceToGrid *myObject = (cSetRescueSurfaceToGrid *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueSurfaceToGrid_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_Create_1cSetRescueTimeStepGroup0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTimeStepGroup *myReturn = new cSetRescueTimeStepGroup();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_cSetRescueTimeStepGroup");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_Delete_1cSetRescueTimeStepGroup
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTimeStepGroup *myObj = (cSetRescueTimeStepGroup *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_~cSetRescueTimeStepGroup");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTimeStepGroup * newObject = (RescueTimeStepGroup *) newObjectNdx;
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    myObject->operator+=((RescueTimeStepGroup *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTimeStepGroup * existingObject = (RescueTimeStepGroup *) existingObjectNdx;
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTimeStepGroup *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    RescueTimeStepGroup * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    RescueTimeStepGroup * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    RescueTimeStepGroup * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTimeStepGroup_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTimeStepGroup *myObject = (cSetRescueTimeStepGroup *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTimeStepGroup_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_Create_1cSetRescueTriangleFace0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTriangleFace *myReturn = new cSetRescueTriangleFace();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_cSetRescueTriangleFace");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_Delete_1cSetRescueTriangleFace
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTriangleFace *myObj = (cSetRescueTriangleFace *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_~cSetRescueTriangleFace");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTriangleFace * newObject = (RescueTriangleFace *) newObjectNdx;
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    myObject->operator+=((RescueTriangleFace *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTriangleFace * existingObject = (RescueTriangleFace *) existingObjectNdx;
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTriangleFace *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    RescueTriangleFace * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_Count6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_Relink10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleFace_IndexOf11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTriangleFace * existingObject = (RescueTriangleFace *) existingObjectNdx;
    cSetRescueTriangleFace *myObject = (cSetRescueTriangleFace *) nativeNdx;
    jlong myReturn = myObject->IndexOf((RescueTriangleFace *) existingObject);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleFace_IndexOf");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_Create_1cSetRescueTriangleVertex0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTriangleVertex *myReturn = new cSetRescueTriangleVertex();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_cSetRescueTriangleVertex");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_Delete_1cSetRescueTriangleVertex
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTriangleVertex *myObj = (cSetRescueTriangleVertex *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_~cSetRescueTriangleVertex");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTriangleVertex * newObject = (RescueTriangleVertex *) newObjectNdx;
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    myObject->operator+=((RescueTriangleVertex *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTriangleVertex * existingObject = (RescueTriangleVertex *) existingObjectNdx;
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTriangleVertex *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    RescueTriangleVertex * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_Count6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_Relink10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTriangleVertex_IndexOf11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTriangleVertex * existingObject = (RescueTriangleVertex *) existingObjectNdx;
    cSetRescueTriangleVertex *myObject = (cSetRescueTriangleVertex *) nativeNdx;
    jlong myReturn = myObject->IndexOf((RescueTriangleVertex *) existingObject);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTriangleVertex_IndexOf");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_Create_1cSetRescueTrimEdge0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTrimEdge *myReturn = new cSetRescueTrimEdge();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_cSetRescueTrimEdge");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_Delete_1cSetRescueTrimEdge
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTrimEdge *myObj = (cSetRescueTrimEdge *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_~cSetRescueTrimEdge");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTrimEdge * newObject = (RescueTrimEdge *) newObjectNdx;
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    myObject->operator+=((RescueTrimEdge *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTrimEdge * existingObject = (RescueTrimEdge *) existingObjectNdx;
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTrimEdge *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    RescueTrimEdge * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    RescueTrimEdge * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    RescueTrimEdge * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimEdge_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTrimEdge *myObject = (cSetRescueTrimEdge *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimEdge_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_Create_1cSetRescueTrimLoop0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTrimLoop *myReturn = new cSetRescueTrimLoop();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_cSetRescueTrimLoop");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_Delete_1cSetRescueTrimLoop
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTrimLoop *myObj = (cSetRescueTrimLoop *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_~cSetRescueTrimLoop");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTrimLoop * newObject = (RescueTrimLoop *) newObjectNdx;
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    myObject->operator+=((RescueTrimLoop *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTrimLoop * existingObject = (RescueTrimLoop *) existingObjectNdx;
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTrimLoop *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoop_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTrimLoop *myObject = (cSetRescueTrimLoop *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoop_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_Create_1cSetRescueTrimLoopStub0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTrimLoopStub *myReturn = new cSetRescueTrimLoopStub();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_cSetRescueTrimLoopStub");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_Delete_1cSetRescueTrimLoopStub
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTrimLoopStub *myObj = (cSetRescueTrimLoopStub *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_~cSetRescueTrimLoopStub");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTrimLoopStub * newObject = (RescueTrimLoopStub *) newObjectNdx;
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    myObject->operator+=((RescueTrimLoopStub *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTrimLoopStub * existingObject = (RescueTrimLoopStub *) existingObjectNdx;
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTrimLoopStub *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    RescueTrimLoopStub * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    RescueTrimLoopStub * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    RescueTrimLoopStub * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimLoopStub_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTrimLoopStub *myObject = (cSetRescueTrimLoopStub *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimLoopStub_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_Create_1cSetRescueTrimVertex0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueTrimVertex *myReturn = new cSetRescueTrimVertex();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_cSetRescueTrimVertex");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_Delete_1cSetRescueTrimVertex
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueTrimVertex *myObj = (cSetRescueTrimVertex *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_~cSetRescueTrimVertex");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueTrimVertex * newObject = (RescueTrimVertex *) newObjectNdx;
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    myObject->operator+=((RescueTrimVertex *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueTrimVertex * existingObject = (RescueTrimVertex *) existingObjectNdx;
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueTrimVertex *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    RescueTrimVertex * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    RescueTrimVertex * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    RescueTrimVertex * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueTrimVertex_TrimVertexLocatedBy13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloat x
  ,jfloat y
  ,jfloat z)
{
  try
  {
    cSetRescueTrimVertex *myObject = (cSetRescueTrimVertex *) nativeNdx;
    RescueTrimVertex * myReturn = myObject->TrimVertexLocatedBy((float) x,
                (float) y,
                (float) z);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueTrimVertex_TrimVertexLocatedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueUnit_Create_1cSetRescueUnit0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueUnit *myReturn = new cSetRescueUnit();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_cSetRescueUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueUnit_Delete_1cSetRescueUnit
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueUnit *myObj = (cSetRescueUnit *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_~cSetRescueUnit");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueUnit_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueUnit * newObject = (RescueUnit *) newObjectNdx;
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    myObject->operator+=((RescueUnit *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueUnit_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueUnit * existingObject = (RescueUnit *) existingObjectNdx;
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueUnit *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueUnit_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueUnit_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    RescueUnit * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueUnit_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    RescueUnit * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueUnit_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    RescueUnit * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueUnit_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueUnit_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueUnit_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueUnit *myObject = (cSetRescueUnit *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueUnit_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_Create_1cSetRescueWellbore0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueWellbore *myReturn = new cSetRescueWellbore();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_cSetRescueWellbore");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_Delete_1cSetRescueWellbore
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueWellbore *myObj = (cSetRescueWellbore *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_~cSetRescueWellbore");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellbore * newObject = (RescueWellbore *) newObjectNdx;
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    myObject->operator+=((RescueWellbore *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellbore * existingObject = (RescueWellbore *) existingObjectNdx;
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellbore *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    RescueWellbore * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    RescueWellbore * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    RescueWellbore * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellbore_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellbore *myObject = (cSetRescueWellbore *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellbore_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_Create_1cSetRescueWellboreCell0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueWellboreCell *myReturn = new cSetRescueWellboreCell();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_cSetRescueWellboreCell");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_Delete_1cSetRescueWellboreCell
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueWellboreCell *myObj = (cSetRescueWellboreCell *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_~cSetRescueWellboreCell");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellboreCell * newObject = (RescueWellboreCell *) newObjectNdx;
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    myObject->operator+=((RescueWellboreCell *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellboreCell * existingObject = (RescueWellboreCell *) existingObjectNdx;
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellboreCell *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    RescueWellboreCell * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    RescueWellboreCell * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    RescueWellboreCell * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreCell_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueWellboreCell *myObject = (cSetRescueWellboreCell *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreCell_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_Create_1cSetRescueWellboreProperty0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueWellboreProperty *myReturn = new cSetRescueWellboreProperty();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_cSetRescueWellboreProperty");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_Delete_1cSetRescueWellboreProperty
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueWellboreProperty *myObj = (cSetRescueWellboreProperty *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_~cSetRescueWellboreProperty");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellboreProperty * newObject = (RescueWellboreProperty *) newObjectNdx;
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    myObject->operator+=((RescueWellboreProperty *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellboreProperty * existingObject = (RescueWellboreProperty *) existingObjectNdx;
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellboreProperty *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    RescueWellboreProperty * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    RescueWellboreProperty * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    RescueWellboreProperty * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_Dispose13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    myObject->Dispose();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_Dispose");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreProperty_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreProperty *myObject = (cSetRescueWellboreProperty *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreProperty_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_Create_1cSetRescueWellboreSampling0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueWellboreSampling *myReturn = new cSetRescueWellboreSampling();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_cSetRescueWellboreSampling");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_Delete_1cSetRescueWellboreSampling
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueWellboreSampling *myObj = (cSetRescueWellboreSampling *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_~cSetRescueWellboreSampling");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellboreSampling * newObject = (RescueWellboreSampling *) newObjectNdx;
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    myObject->operator+=((RescueWellboreSampling *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellboreSampling * existingObject = (RescueWellboreSampling *) existingObjectNdx;
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellboreSampling *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    RescueWellboreSampling * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    RescueWellboreSampling * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    RescueWellboreSampling * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_Relink");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_Dispose13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    myObject->Dispose();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_Dispose");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSampling_AnyFileTruncated14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreSampling *myObject = (cSetRescueWellboreSampling *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSampling_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_Create_1cSetRescueWellboreSurface0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueWellboreSurface *myReturn = new cSetRescueWellboreSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_cSetRescueWellboreSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_Delete_1cSetRescueWellboreSurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueWellboreSurface *myObj = (cSetRescueWellboreSurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_~cSetRescueWellboreSurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWellboreSurface * newObject = (RescueWellboreSurface *) newObjectNdx;
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    myObject->operator+=((RescueWellboreSurface *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWellboreSurface * existingObject = (RescueWellboreSurface *) existingObjectNdx;
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWellboreSurface *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    RescueWellboreSurface * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    RescueWellboreSurface * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    RescueWellboreSurface * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWellboreSurface_Relink12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueWellboreSurface *myObject = (cSetRescueWellboreSurface *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWellboreSurface_Relink");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_Create_1cSetRescueWireframe0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetRescueWireframe *myReturn = new cSetRescueWireframe();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_cSetRescueWireframe");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_Delete_1cSetRescueWireframe
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetRescueWireframe *myObj = (cSetRescueWireframe *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_~cSetRescueWireframe");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newObjectNdx)
{
  try
  {
    RescueWireframe * newObject = (RescueWireframe *) newObjectNdx;
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->operator+=((RescueWireframe *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingObjectNdx)
{
  try
  {
    RescueWireframe * existingObject = (RescueWireframe *) existingObjectNdx;
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RescueWireframe *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_RemoveFrom4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ndx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RESCUEINT64) ndx);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_NthObject5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    RescueWireframe * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_NthObject");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_ObjectNamed6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameInStr)
{
  try
  {
    jboolean nameInBool;
    const char *nameIn = env->GetStringUTFChars(nameInStr, &nameInBool);
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    RescueWireframe * myReturn = myObject->ObjectNamed((char *) nameIn);
    env->ReleaseStringUTFChars(nameInStr, nameIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_ObjectNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_ObjectIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    RescueWireframe * myReturn = myObject->ObjectIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_ObjectIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_Count8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_EmptySelf9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_EmptySelf");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_UnloadWireframe12
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->UnloadWireframe();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_UnloadWireframe");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_CopyWireframeData13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring oldPathNameStr)
{
  try
  {
    jboolean oldPathNameBool;
    const char *oldPathName = env->GetStringUTFChars(oldPathNameStr, &oldPathNameBool);
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->CopyWireframeData((char *) oldPathName);
    env->ReleaseStringUTFChars(oldPathNameStr, oldPathName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_CopyWireframeData");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_DropWireframeMemory14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->DropWireframeMemory();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_DropWireframeMemory");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_UpdateWireframeData15
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->UpdateWireframeData();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_UpdateWireframeData");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_Relink16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong parentNdx)
{
  try
  {
    RescueObject * parent = (RescueObject *) parentNdx;
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    myObject->Relink((RescueObject *) parent);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_Relink");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetRescueWireframe_AnyFileTruncated17
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetRescueWireframe *myObject = (cSetRescueWireframe *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetRescueWireframe_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetString_Create_1cSetString0  (JNIEnv *env, jobject obj
)
{
  try
  {
    cSetString *myReturn = new cSetString();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_cSetString");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetString_Delete_1cSetString
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    cSetString *myObj = (cSetString *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_~cSetString");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetString_AddTo2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newObjectStr)
{
  try
  {
    jboolean newObjectBool;
    const char *newObjectCCStar = env->GetStringUTFChars(newObjectStr, &newObjectBool);
    RCHString *newObject = new RCHString(newObjectCCStar);
    env->ReleaseStringUTFChars(newObjectStr, newObjectCCStar);
    cSetString *myObject = (cSetString *) nativeNdx;
    myObject->operator+=((RCHString *) newObject);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_operator+=");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetString_RemoveFrom3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring existingObjectStr)
{
  try
  {
    jboolean existingObjectBool;
    const char *existingObjectCCStar = env->GetStringUTFChars(existingObjectStr, &existingObjectBool);
    RCHString *existingObject = new RCHString(existingObjectCCStar);
    env->ReleaseStringUTFChars(existingObjectStr, existingObjectCCStar);
    cSetString *myObject = (cSetString *) nativeNdx;
    RESCUEBOOL myReturn = myObject->operator-=((RCHString *) existingObject);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_operator-=");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_cSetString_NthObject4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong ordinal)
{
  try
  {
    cSetString *myObject = (cSetString *) nativeNdx;
    RCHString * myReturn = myObject->NthObject((RESCUEINT64) ordinal);
    if (myReturn == 0)
    {
      return (jstring) 0;
    }
    else
    {
      return env->NewStringUTF(myReturn->String());
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_NthObject");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_cSetString_Count5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetString *myObject = (cSetString *) nativeNdx;
    jlong myReturn = myObject->Count64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_Count");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_cSetString_Contains6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring exampleStr)
{
  try
  {
    jboolean exampleBool;
    const char *exampleCCStar = env->GetStringUTFChars(exampleStr, &exampleBool);
    RCHString *example = new RCHString(exampleCCStar);
    env->ReleaseStringUTFChars(exampleStr, exampleCCStar);
    cSetString *myObject = (cSetString *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Contains((RCHString *) example);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_Contains");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_cSetString_EmptySelf7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    cSetString *myObject = (cSetString *) nativeNdx;
    myObject->EmptySelf();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in cSetString_EmptySelf");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RCH2DArray_Create_1RCH2DArray0  (JNIEnv *env, jobject obj
  ,jlong maxI
  ,jlong maxJ
  ,jfloatArray valuesArray)
{
  jfloat *values = 0;
  try
  {
    if (valuesArray != 0)
    {
      values = (jfloat *) env->GetPrimitiveArrayCritical(valuesArray, 0);
    }
    RCH2DArray *myReturn = new RCH2DArray((RESCUEINT64) maxI,
                (RESCUEINT64) maxJ,
                (float *) (valuesArray == 0) ? 0 : copyFloatArray(values, env->GetArrayLength(valuesArray)));
    if (valuesArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
    }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (values != 0)
      {
        env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH2DArray_RCH2DArray");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RCH2DArray_Set1
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jfloat value)
{
  try
  {
    RCH2DArray *myObject = (RCH2DArray *) nativeNdx;
    myObject->Set((RESCUEINT64) i, (RESCUEINT64) j, value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH2DArray_Set");
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RCH2DArray_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j)
{
  try
  {
    RCH2DArray *myObject = (RCH2DArray *) nativeNdx;
    float myReturn = myObject->Value((RESCUEINT64) i, (RESCUEINT64) j);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH2DArray_Value");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RCH2DArray_Array3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RCH2DArray *myObject = (RCH2DArray *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->Array();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ArrayLength64();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH2DArray_Array");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RCH2DArray_ArrayLength4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RCH2DArray *myObject = (RCH2DArray *) nativeNdx;
    jlong myReturn = myObject->ArrayLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH2DArray_ArrayLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RCH2DArray_Delete_1RCH2DArray
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RCH2DArray *myObj = (RCH2DArray *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH2DArray_~RCH2DArray");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RCH3DArray_Create_1RCH3DArray0  (JNIEnv *env, jobject obj
  ,jlong maxI
  ,jlong maxJ
  ,jlong maxK
  ,jfloatArray valuesArray)
{
  jfloat *values = 0;
  try
  {
    if (valuesArray != 0)
    {
      values = (jfloat *) env->GetPrimitiveArrayCritical(valuesArray, 0);
    }
    RCH3DArray *myReturn = new RCH3DArray((RESCUEINT64) maxI,
                (RESCUEINT64) maxJ,
                (RESCUEINT64) maxK,
                (float *) (valuesArray == 0) ? 0 : copyFloatArray(values, env->GetArrayLength(valuesArray)));
    if (valuesArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
    }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (values != 0)
      {
        env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH3DArray_RCH3DArray");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RCH3DArray_Set1
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jfloat value)
{
  try
  {
    RCH3DArray *myObject = (RCH3DArray *) nativeNdx;
    myObject->Set((RESCUEINT64) i, (RESCUEINT64) j, (RESCUEINT64) k, (float) value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH3DArray_Set");
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RCH3DArray_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k)
{
  try
  {
    RCH3DArray *myObject = (RCH3DArray *) nativeNdx;
    float myReturn = myObject->Value((RESCUEINT64) i, (RESCUEINT64) j, (RESCUEINT64) k);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH3DArray_Value");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RCH3DArray_Array3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RCH3DArray *myObject = (RCH3DArray *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->Array();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ArrayLength64();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH3DArray_Array");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RCH3DArray_ArrayLength4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RCH3DArray *myObject = (RCH3DArray *) nativeNdx;
    jlong myReturn = myObject->ArrayLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH3DArray_ArrayLength");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RCH3DArray_Delete_1RCH3DArray
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RCH3DArray *myObj = (RCH3DArray *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RCH3DArray_~RCH3DArray");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray_Delete_1RescueArray
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArray *myObj = (RescueArray *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_~RescueArray");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueArray_PropertyName2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RCHString * myReturn = myObject->PropertyName();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_PropertyName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray_SetPropertyName3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newPropertyNameStr)
{
  try
  {
    jboolean newPropertyNameBool;
    const char *newPropertyName = env->GetStringUTFChars(newPropertyNameStr, &newPropertyNameBool);
    RescueArray *myObject = (RescueArray *) nativeNdx;
    myObject->SetPropertyName((char *) newPropertyName);
    env->ReleaseStringUTFChars(newPropertyNameStr, newPropertyName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_SetPropertyName");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueArray_PropertyType4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RCHString * myReturn = myObject->PropertyType();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_PropertyType");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray_SetPropertyType5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newPropertyTypeStr)
{
  try
  {
    jboolean newPropertyTypeBool;
    const char *newPropertyType = env->GetStringUTFChars(newPropertyTypeStr, &newPropertyTypeBool);
    RescueArray *myObject = (RescueArray *) nativeNdx;
    myObject->SetPropertyType((char *) newPropertyType);
    env->ReleaseStringUTFChars(newPropertyTypeStr, newPropertyType);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_SetPropertyType");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueArray_UnitOfMeasure6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RCHString * myReturn = myObject->UnitOfMeasure();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_UnitOfMeasure");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray_SetUnitOfMeasure7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newUnitOfMeasureStr)
{
  try
  {
    jboolean newUnitOfMeasureBool;
    const char *newUnitOfMeasure = env->GetStringUTFChars(newUnitOfMeasureStr, &newUnitOfMeasureBool);
    RescueArray *myObject = (RescueArray *) nativeNdx;
    myObject->SetUnitOfMeasure((char *) newUnitOfMeasure);
    env->ReleaseStringUTFChars(newUnitOfMeasureStr, newUnitOfMeasure);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_SetUnitOfMeasure");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray_Grid8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RescueGrid * myReturn = myObject->Grid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_Grid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_CellCentered9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->CellCentered();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_CellCentered");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray_ParentModel10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_IsOfType11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_IsLoaded12
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_FileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->FileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_FileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_Load14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Load();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_Load");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_Unload15
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Unload();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_Unload");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_HasChanged16
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->HasChanged();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_HasChanged");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_MinMaxDirty17
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->MinMaxDirty();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_MinMaxDirty");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray_CalculateMinMax18
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    myObject->CalculateMinMax();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_CalculateMinMax");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray_MarkChanged19
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    myObject->MarkChanged();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_MarkChanged");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArray_Version20
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean reloadBool)
{
  try
  {
    RESCUEBOOL reload = ((reloadBool == JNI_TRUE) ? TRUE : FALSE);
    RescueArray *myObject = (RescueArray *) nativeNdx;
    int myReturn = (int) myObject->Version((RESCUEBOOL) reload);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_Version");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray_HasFragments25
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    RESCUEBOOL myReturn = myObject->HasFragments();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_HasFragments");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray_Fragments26
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray *myObject = (RescueArray *) nativeNdx;
    cSetRescueArrayFragment * myReturn = myObject->Fragments();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray_Fragments");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray2dVector_Delete_1RescueArray2dVector
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArray2dVector *myObj = (RescueArray2dVector *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_~RescueArray2dVector");
  }
}

extern "C" 
JNIEXPORT jobject JNICALL Java_org_Rescue_rjni_RescueArray2dVector_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    Rescue2dVector myReturnCPP = myObject->NullValue();
    jclass objClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
    jobject myReturn = env->AllocObject(objClass);
    jfieldID fieldID;
    fieldID = env->GetFieldID(objClass, "coord1", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord1);
    fieldID = env->GetFieldID(objClass, "coord2", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord2);
  return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_NullValue");
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobjectArray JNICALL Java_org_Rescue_rjni_RescueArray2dVector_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    Rescue2dVector * myReturnCPP = myObject->Value();
    jobjectArray myReturn = 0;
    if (myReturnCPP != 0)
    {
      long howMany = myObject->ValueLength64();
      jclass objClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
      jobject objInstance = env->AllocObject(objClass);
      jfieldID coord1ID = env->GetFieldID(objClass, "coord1", "F");
      jfieldID coord2ID = env->GetFieldID(objClass, "coord2", "F");
      myReturn = (jobjectArray) env->NewObjectArray(howMany, objClass, objInstance);
      int loop;
      for (loop = 0; loop < howMany; loop++)
      {
        if (loop != 0)
        {
          objInstance = env->AllocObject(objClass);
        }
        env->SetObjectArrayElement(myReturn, loop, objInstance);
        env->SetFloatField(objInstance, coord1ID, myReturnCPP[loop].coord1);
        env->SetFloatField(objInstance, coord2ID, myReturnCPP[loop].coord2);
      }
    }
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_Value");
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray2dVector_ValueLength3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ValueLength64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray2dVector_AllValues4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobjectArray bufferJ
  ,jlong offset
  ,jlong valueCount)
{
  try
  {
    Rescue2dVector *buffer = 0;
    if (bufferJ != 0)
    {
      jsize bufferLength = env->GetArrayLength(bufferJ);
      if (bufferLength > 0)
      {
        jclass bufferClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
        jfieldID bufferCoord1ID = env->GetFieldID(bufferClass, "coord1", "F");
        jfieldID bufferCoord2ID = env->GetFieldID(bufferClass, "coord2", "F");
        buffer = new Rescue2dVector[bufferLength];
        jsize loop2;
        for (loop2 = 0; loop2 < bufferLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(bufferJ, loop2);
          buffer[loop2].coord1 = env->GetFloatField(element, bufferCoord1ID);
          buffer[loop2].coord2 = env->GetFloatField(element, bufferCoord2ID);
        }
      }
    }
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    myObject->AllValues((Rescue2dVector *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    delete [] buffer;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray2dVector_SetValue5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobject nullValueJ
  ,jobjectArray valueArrayJ)
{
  try
  {
    jclass nullValueClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
    jfieldID nullValueCoord1ID = env->GetFieldID(nullValueClass, "coord1", "F");
    jfieldID nullValueCoord2ID = env->GetFieldID(nullValueClass, "coord2", "F");
    Rescue2dVector nullValue;
    nullValue.coord1 = env->GetFloatField(nullValueJ, nullValueCoord1ID);
    nullValue.coord2 = env->GetFloatField(nullValueJ, nullValueCoord2ID);
    Rescue2dVector *valueArray = 0;
    if (valueArrayJ != 0)
    {
      jsize valueArrayLength = env->GetArrayLength(valueArrayJ);
      if (valueArrayLength > 0)
      {
        jclass valueArrayClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
        jfieldID valueArrayCoord1ID = env->GetFieldID(valueArrayClass, "coord1", "F");
        jfieldID valueArrayCoord2ID = env->GetFieldID(valueArrayClass, "coord2", "F");
        valueArray = new Rescue2dVector[valueArrayLength];
        jsize loop2;
        for (loop2 = 0; loop2 < valueArrayLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(valueArrayJ, loop2);
          valueArray[loop2].coord1 = env->GetFloatField(element, valueArrayCoord1ID);
          valueArray[loop2].coord2 = env->GetFloatField(element, valueArrayCoord2ID);
        }
      }
    }
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    myObject->SetValue((Rescue2dVector) nullValue,
                (Rescue2dVector *) valueArray);
    delete [] valueArray;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray2dVector_SetNullValue7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobject nullValueInJ)
{
  try
  {
    jclass nullValueInClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
    jfieldID nullValueInCoord1ID = env->GetFieldID(nullValueInClass, "coord1", "F");
    jfieldID nullValueInCoord2ID = env->GetFieldID(nullValueInClass, "coord2", "F");
    Rescue2dVector nullValueIn;
    nullValueIn.coord1 = env->GetFloatField(nullValueInJ, nullValueInCoord1ID);
    nullValueIn.coord2 = env->GetFloatField(nullValueInJ, nullValueInCoord2ID);
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    myObject->SetNullValue((Rescue2dVector) nullValueIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_SetNullValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray2dVector_IsLoaded8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobject JNICALL Java_org_Rescue_rjni_RescueArray2dVector_MinValue9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    Rescue2dVector myReturnCPP = myObject->MinValue();
    jclass objClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
    jobject myReturn = env->AllocObject(objClass);
    jfieldID fieldID;
    fieldID = env->GetFieldID(objClass, "coord1", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord1);
    fieldID = env->GetFieldID(objClass, "coord2", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord2);
  return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_MinValue");
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobject JNICALL Java_org_Rescue_rjni_RescueArray2dVector_MaxValue10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    Rescue2dVector myReturnCPP = myObject->MaxValue();
    jclass objClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
    jobject myReturn = env->AllocObject(objClass);
    jfieldID fieldID;
    fieldID = env->GetFieldID(objClass, "coord1", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord1);
    fieldID = env->GetFieldID(objClass, "coord2", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord2);
  return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_MaxValue");
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray2dVector_Load11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray2dVector_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray2dVector_Create13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                iCount,
                jLowBound,
                jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray2dVector_Create14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray2dVector_IsOfType15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArray2dVector *myObject = (RescueArray2dVector *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray2dVector_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray3dVector_Delete_1RescueArray3dVector
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArray3dVector *myObj = (RescueArray3dVector *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_~RescueArray3dVector");
  }
}

extern "C" 
JNIEXPORT jobject JNICALL Java_org_Rescue_rjni_RescueArray3dVector_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    Rescue3dVector myReturnCPP = myObject->NullValue();
    jclass objClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
    jobject myReturn = env->AllocObject(objClass);
    jfieldID fieldID;
    fieldID = env->GetFieldID(objClass, "coord1", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord1);
    fieldID = env->GetFieldID(objClass, "coord2", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord2);
    fieldID = env->GetFieldID(objClass, "coord3", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord3);
  return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_NullValue");
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobjectArray JNICALL Java_org_Rescue_rjni_RescueArray3dVector_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    Rescue3dVector * myReturnCPP = myObject->Value();
    jobjectArray myReturn = 0;
    if (myReturnCPP != 0)
    {
      long howMany = myObject->ValueLength64();
      jclass objClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
      jobject objInstance = env->AllocObject(objClass);
      jfieldID coord1ID = env->GetFieldID(objClass, "coord1", "F");
      jfieldID coord2ID = env->GetFieldID(objClass, "coord2", "F");
      jfieldID coord3ID = env->GetFieldID(objClass, "coord3", "F");
      myReturn = (jobjectArray) env->NewObjectArray(howMany, objClass, objInstance);
      int loop;
      for (loop = 0; loop < howMany; loop++)
      {
        if (loop != 0)
        {
          objInstance = env->AllocObject(objClass);
        }
        env->SetObjectArrayElement(myReturn, loop, objInstance);
        env->SetFloatField(objInstance, coord1ID, myReturnCPP[loop].coord1);
        env->SetFloatField(objInstance, coord2ID, myReturnCPP[loop].coord2);
        env->SetFloatField(objInstance, coord3ID, myReturnCPP[loop].coord3);
      }
    }
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_Value");
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray3dVector_ValueLength3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray3dVector_AllValues4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobjectArray bufferJ
  ,jlong offset
  ,jlong valueCount)
{
  try
  {
    Rescue3dVector *buffer = 0;
    if (bufferJ != 0)
    {
      jsize bufferLength = env->GetArrayLength(bufferJ);
      if (bufferLength > 0)
      {
        jclass bufferClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
        jfieldID bufferCoord1ID = env->GetFieldID(bufferClass, "coord1", "F");
        jfieldID bufferCoord2ID = env->GetFieldID(bufferClass, "coord2", "F");
        jfieldID bufferCoord3ID = env->GetFieldID(bufferClass, "coord3", "F");
        buffer = new Rescue3dVector[bufferLength];
        jsize loop2;
        for (loop2 = 0; loop2 < bufferLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(bufferJ, loop2);
          buffer[loop2].coord1 = env->GetFloatField(element, bufferCoord1ID);
          buffer[loop2].coord2 = env->GetFloatField(element, bufferCoord2ID);
          buffer[loop2].coord3 = env->GetFloatField(element, bufferCoord3ID);
        }
      }
    }
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    myObject->AllValues((Rescue3dVector *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    delete [] buffer;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray3dVector_SetValue5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobject nullValueJ
  ,jobjectArray valueArrayJ)
{
  try
  {
    jclass nullValueClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
    jfieldID nullValueCoord1ID = env->GetFieldID(nullValueClass, "coord1", "F");
    jfieldID nullValueCoord2ID = env->GetFieldID(nullValueClass, "coord2", "F");
    jfieldID nullValueCoord3ID = env->GetFieldID(nullValueClass, "coord3", "F");
    Rescue3dVector nullValue;
    nullValue.coord1 = env->GetFloatField(nullValueJ, nullValueCoord1ID);
    nullValue.coord2 = env->GetFloatField(nullValueJ, nullValueCoord2ID);
    nullValue.coord3 = env->GetFloatField(nullValueJ, nullValueCoord3ID);
    Rescue3dVector *valueArray = 0;
    if (valueArrayJ != 0)
    {
      jsize valueArrayLength = env->GetArrayLength(valueArrayJ);
      if (valueArrayLength > 0)
      {
        jclass valueArrayClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
        jfieldID valueArrayCoord1ID = env->GetFieldID(valueArrayClass, "coord1", "F");
        jfieldID valueArrayCoord2ID = env->GetFieldID(valueArrayClass, "coord2", "F");
        jfieldID valueArrayCoord3ID = env->GetFieldID(valueArrayClass, "coord3", "F");
        valueArray = new Rescue3dVector[valueArrayLength];
        jsize loop2;
        for (loop2 = 0; loop2 < valueArrayLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(valueArrayJ, loop2);
          valueArray[loop2].coord1 = env->GetFloatField(element, valueArrayCoord1ID);
          valueArray[loop2].coord2 = env->GetFloatField(element, valueArrayCoord2ID);
          valueArray[loop2].coord3 = env->GetFloatField(element, valueArrayCoord3ID);
        }
      }
    }
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    myObject->SetValue((Rescue3dVector) nullValue,
                (Rescue3dVector *) valueArray);
    delete [] valueArray;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArray3dVector_SetNullValue7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobject nullValueInJ)
{
  try
  {
    jclass nullValueInClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
    jfieldID nullValueInCoord1ID = env->GetFieldID(nullValueInClass, "coord1", "F");
    jfieldID nullValueInCoord2ID = env->GetFieldID(nullValueInClass, "coord2", "F");
    jfieldID nullValueInCoord3ID = env->GetFieldID(nullValueInClass, "coord3", "F");
    Rescue3dVector nullValueIn;
    nullValueIn.coord1 = env->GetFloatField(nullValueInJ, nullValueInCoord1ID);
    nullValueIn.coord2 = env->GetFloatField(nullValueInJ, nullValueInCoord2ID);
    nullValueIn.coord3 = env->GetFloatField(nullValueInJ, nullValueInCoord3ID);
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    myObject->SetNullValue((Rescue3dVector) nullValueIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_SetNullValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray3dVector_IsLoaded8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobject JNICALL Java_org_Rescue_rjni_RescueArray3dVector_MinValue9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    Rescue3dVector myReturnCPP = myObject->MinValue();
    jclass objClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
    jobject myReturn = env->AllocObject(objClass);
    jfieldID fieldID;
    fieldID = env->GetFieldID(objClass, "coord1", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord1);
    fieldID = env->GetFieldID(objClass, "coord2", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord2);
    fieldID = env->GetFieldID(objClass, "coord3", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord3);
  return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_MinValue");
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobject JNICALL Java_org_Rescue_rjni_RescueArray3dVector_MaxValue10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    Rescue3dVector myReturnCPP = myObject->MaxValue();
    jclass objClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
    jobject myReturn = env->AllocObject(objClass);
    jfieldID fieldID;
    fieldID = env->GetFieldID(objClass, "coord1", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord1);
    fieldID = env->GetFieldID(objClass, "coord2", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord2);
    fieldID = env->GetFieldID(objClass, "coord3", "F");
    env->SetFloatField(myReturn, fieldID, myReturnCPP.coord3);
  return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_MaxValue");
    return (jobject) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray3dVector_Load11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray3dVector_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray3dVector_Create13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArray3dVector_Create14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArray3dVector_IsOfType15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArray3dVector *myObject = (RescueArray3dVector *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArray3dVector_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayByte_Delete_1RescueArrayByte
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayByte *myObj = (RescueArrayByte *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_~RescueArrayByte");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArrayByte_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    int myReturn = (int) myObject->NullValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_NullValue");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayByte_LookupTable2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RescueLookup * myReturn = myObject->LookupTable();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_LookupTable");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayByte_ValueLength3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ValueLength64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jbyteArray JNICALL Java_org_Rescue_rjni_RescueArrayByte_Value4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    signed char *myReturnCpp = (signed char *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      jlong howMany = myObject->ValueLength64();
      jbyteArray myReturn = env->NewByteArray(howMany);
      env->SetByteArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jbyteArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_Value");
    return (jbyteArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayByte_AllValues5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jbyteArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jbyte *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jbyte *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    myObject->AllValues((unsigned char *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jbyte *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jbyte *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jbyte *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayByte_SetValue6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jbyte nullValueJ
  ,jbyteArray valueArrayArray)
{
  jbyte *valueArray = 0;
  try
  {
    unsigned char nullValue = (unsigned char) nullValueJ;
    if (valueArrayArray != 0)
    {
      valueArray = (jbyte *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    myObject->SetValue((unsigned char) nullValue,
                (unsigned char *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jbyte *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jbyte *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jbyte *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayByte_SetNullValue8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jchar nullValueIn)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    myObject->SetNullValue((char) nullValueIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_SetNullValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayByte_IsLoaded9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jbyte JNICALL Java_org_Rescue_rjni_RescueArrayByte_MinValue10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    unsigned char myReturn = myObject->MinValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jbyte) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_MinValue");
    return (jbyte) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jbyte JNICALL Java_org_Rescue_rjni_RescueArrayByte_MaxValue11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    unsigned char myReturn = myObject->MaxValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jbyte) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_MaxValue");
    return (jbyte) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayByte_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayByte_Load13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayByte_Create14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayByte_Create15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayByte_IsOfType16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArrayByte *myObject = (RescueArrayByte *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayByte_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayDouble_Delete_1RescueArrayDouble
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayDouble *myObj = (RescueArrayDouble *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_~RescueArrayDouble");
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueArrayDouble_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    double myReturn = myObject->NullValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_NullValue");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdoubleArray JNICALL Java_org_Rescue_rjni_RescueArrayDouble_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    jdouble * myReturnCpp = (jdouble *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      jlong howMany = myObject->ValueLength64();
      jdoubleArray myReturn = env->NewDoubleArray(howMany);
      env->SetDoubleArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_Value");
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayDouble_ValueLength3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ValueLength64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayDouble_AllValues4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdoubleArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jdouble *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jdouble *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    myObject->AllValues((double *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayDouble_SetValue5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdouble nullValue
  ,jdoubleArray valueArrayArray)
{
  jdouble *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jdouble *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    myObject->SetValue((double) nullValue,
                (double *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jdouble *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jdouble *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jdouble *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_SetValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayDouble_IsLoaded7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueArrayDouble_MinValue8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    double myReturn = myObject->MinValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_MinValue");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueArrayDouble_MaxValue9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    double myReturn = myObject->MaxValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_MaxValue");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayDouble_Load10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayDouble_Load11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayDouble_Create12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayDouble_Create13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayDouble_IsOfType14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArrayDouble *myObject = (RescueArrayDouble *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayDouble_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFloat_Delete_1RescueArrayFloat
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFloat *myObj = (RescueArrayFloat *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_~RescueArrayFloat");
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueArrayFloat_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    float myReturn = myObject->NullValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_NullValue");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFloat_ValueLength2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ValueLength64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueArrayFloat_Value3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      jlong howMany = myObject->ValueLength64();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_Value");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFloat_AllValues4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloatArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jfloat *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jfloat *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    myObject->AllValues((float *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFloat_SetValue5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloat nullValue
  ,jfloatArray valueArrayArray)
{
  jfloat *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jfloat *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    myObject->SetValue((float) nullValue,
                (float *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFloat_SetNullValue7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloat nullValueIn)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    myObject->SetNullValue((float) nullValueIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_SetNullValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayFloat_IsLoaded8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueArrayFloat_MinValue9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    float myReturn = myObject->MinValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_MinValue");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueArrayFloat_MaxValue10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    float myReturn = myObject->MaxValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_MaxValue");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFloat_Load11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFloat_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFloat_Create13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFloat_Create14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayFloat_IsOfType15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArrayFloat *myObject = (RescueArrayFloat *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFloat_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArrayFragment_Dimensions0
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    jint myReturn = myObject->Dimensions();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_Dimensions");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_ILowBound1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ILowBound64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_ILowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_ICount2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ICount64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_ICount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_JLowBound3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->JLowBound64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_JLowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_JCount4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->JCount64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_JCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_KLowBound5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->KLowBound64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_KLowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_KCount6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->KCount64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_KCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment_NodeCount7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment *myObject = (RescueArrayFragment *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->NodeCount64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_NodeCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragment_Delete_1RescueArrayFragment
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragment *myObj = (RescueArrayFragment *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment_~RescueArrayFragment");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragment2dVector_Delete_1RescueArrayFragment2dVector
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragment2dVector *myObj = (RescueArrayFragment2dVector *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment2dVector_~RescueArrayFragment2dVector");
  }
}

extern "C" 
JNIEXPORT jobjectArray JNICALL Java_org_Rescue_rjni_RescueArrayFragment2dVector_Value1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment2dVector *myObject = (RescueArrayFragment2dVector *) nativeNdx;
    Rescue2dVector * myReturnCPP = myObject->Value();
    jobjectArray myReturn = 0;
    if (myReturnCPP != 0)
    {
      long howMany = myObject->ValueLength64();
      jclass objClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
      jobject objInstance = env->AllocObject(objClass);
      jfieldID coord1ID = env->GetFieldID(objClass, "coord1", "F");
      jfieldID coord2ID = env->GetFieldID(objClass, "coord2", "F");
      myReturn = (jobjectArray) env->NewObjectArray(howMany, objClass, objInstance);
      int loop;
      for (loop = 0; loop < howMany; loop++)
      {
        if (loop != 0)
        {
          objInstance = env->AllocObject(objClass);
        }
        env->SetObjectArrayElement(myReturn, loop, objInstance);
        env->SetFloatField(objInstance, coord1ID, myReturnCPP[loop].coord1);
        env->SetFloatField(objInstance, coord2ID, myReturnCPP[loop].coord2);
      }
    }
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment2dVector_Value");
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment2dVector_ValueLength2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment2dVector *myObject = (RescueArrayFragment2dVector *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment2dVector_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragment2dVector_SetValue3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobjectArray valueArrayJ)
{
  try
  {
    Rescue2dVector *valueArray = 0;
    if (valueArrayJ != 0)
    {
      jsize valueArrayLength = env->GetArrayLength(valueArrayJ);
      if (valueArrayLength > 0)
      {
        jclass valueArrayClass = env->FindClass("org/Rescue/rjni/Rescue2dVector");
        jfieldID valueArrayCoord1ID = env->GetFieldID(valueArrayClass, "coord1", "F");
        jfieldID valueArrayCoord2ID = env->GetFieldID(valueArrayClass, "coord2", "F");
        valueArray = new Rescue2dVector[valueArrayLength];
        jsize loop2;
        for (loop2 = 0; loop2 < valueArrayLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(valueArrayJ, loop2);
          valueArray[loop2].coord1 = env->GetFloatField(element, valueArrayCoord1ID);
          valueArray[loop2].coord2 = env->GetFloatField(element, valueArrayCoord2ID);
        }
      }
    }
    RescueArrayFragment2dVector *myObject = (RescueArrayFragment2dVector *) nativeNdx;
    myObject->SetValue((Rescue2dVector *) valueArray);
    delete [] valueArray;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment2dVector_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragment3dVector_Delete_1RescueArrayFragment3dVector
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragment3dVector *myObj = (RescueArrayFragment3dVector *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment3dVector_~RescueArrayFragment3dVector");
  }
}

extern "C" 
JNIEXPORT jobjectArray JNICALL Java_org_Rescue_rjni_RescueArrayFragment3dVector_Value1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment3dVector *myObject = (RescueArrayFragment3dVector *) nativeNdx;
    Rescue3dVector * myReturnCPP = myObject->Value();
    jobjectArray myReturn = 0;
    if (myReturnCPP != 0)
    {
      long howMany = myObject->ValueLength64();
      jclass objClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
      jobject objInstance = env->AllocObject(objClass);
      jfieldID coord1ID = env->GetFieldID(objClass, "coord1", "F");
      jfieldID coord2ID = env->GetFieldID(objClass, "coord2", "F");
      jfieldID coord3ID = env->GetFieldID(objClass, "coord3", "F");
      myReturn = (jobjectArray) env->NewObjectArray(howMany, objClass, objInstance);
      int loop;
      for (loop = 0; loop < howMany; loop++)
      {
        if (loop != 0)
        {
          objInstance = env->AllocObject(objClass);
        }
        env->SetObjectArrayElement(myReturn, loop, objInstance);
        env->SetFloatField(objInstance, coord1ID, myReturnCPP[loop].coord1);
        env->SetFloatField(objInstance, coord2ID, myReturnCPP[loop].coord2);
        env->SetFloatField(objInstance, coord3ID, myReturnCPP[loop].coord3);
      }
    }
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment3dVector_Value");
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragment3dVector_ValueLength2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragment3dVector *myObject = (RescueArrayFragment3dVector *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment3dVector_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragment3dVector_SetValue3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jobjectArray valueArrayJ)
{
  try
  {
    Rescue3dVector *valueArray = 0;
    if (valueArrayJ != 0)
    {
      jsize valueArrayLength = env->GetArrayLength(valueArrayJ);
      if (valueArrayLength > 0)
      {
        jclass valueArrayClass = env->FindClass("org/Rescue/rjni/Rescue3dVector");
        jfieldID valueArrayCoord1ID = env->GetFieldID(valueArrayClass, "coord1", "F");
        jfieldID valueArrayCoord2ID = env->GetFieldID(valueArrayClass, "coord2", "F");
        jfieldID valueArrayCoord3ID = env->GetFieldID(valueArrayClass, "coord3", "F");
        valueArray = new Rescue3dVector[valueArrayLength];
        jsize loop2;
        for (loop2 = 0; loop2 < valueArrayLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(valueArrayJ, loop2);
          valueArray[loop2].coord1 = env->GetFloatField(element, valueArrayCoord1ID);
          valueArray[loop2].coord2 = env->GetFloatField(element, valueArrayCoord2ID);
          valueArray[loop2].coord3 = env->GetFloatField(element, valueArrayCoord3ID);
        }
      }
    }
    RescueArrayFragment3dVector *myObject = (RescueArrayFragment3dVector *) nativeNdx;
    myObject->SetValue((Rescue3dVector *) valueArray);
    delete [] valueArray;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragment3dVector_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentByte_Delete_1RescueArrayFragmentByte
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragmentByte *myObj = (RescueArrayFragmentByte *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentByte_~RescueArrayFragmentByte");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragmentByte_ValueLength1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentByte *myObject = (RescueArrayFragmentByte *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentByte_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jbyteArray JNICALL Java_org_Rescue_rjni_RescueArrayFragmentByte_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentByte *myObject = (RescueArrayFragmentByte *) nativeNdx;
    signed char *myReturnCpp = (signed char *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jbyteArray myReturn = env->NewByteArray(howMany);
      env->SetByteArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jbyteArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentByte_Value");
    return (jbyteArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentByte_SetValue3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jbyteArray valueArrayArray)
{
  jbyte *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jbyte *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayFragmentByte *myObject = (RescueArrayFragmentByte *) nativeNdx;
    myObject->SetValue((unsigned char *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jbyte *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jbyte *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jbyte *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentByte_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentFloat_Delete_1RescueArrayFragmentFloat
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragmentFloat *myObj = (RescueArrayFragmentFloat *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentFloat_~RescueArrayFragmentFloat");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentDouble_Delete_1RescueArrayFragmentDouble
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragmentDouble *myObj = (RescueArrayFragmentDouble *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentDouble_~RescueArrayFragmentDouble");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragmentFloat_ValueLength1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentFloat *myObject = (RescueArrayFragmentFloat *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentFloat_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragmentDouble_ValueLength1d
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentDouble *myObject = (RescueArrayFragmentDouble *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentDouble_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueArrayFragmentFloat_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentFloat *myObject = (RescueArrayFragmentFloat *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentFloat_Value");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdoubleArray JNICALL Java_org_Rescue_rjni_RescueArrayFragmentDouble_Value2d
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentDouble *myObject = (RescueArrayFragmentDouble *) nativeNdx;
    jdouble * myReturnCpp = (jdouble *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jdoubleArray myReturn = env->NewDoubleArray(howMany);
      env->SetDoubleArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentFloat_Value");
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentFloat_AllValues3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloatArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jfloat *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jfloat *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayFragmentFloat *myObject = (RescueArrayFragmentFloat *) nativeNdx;
    myObject->AllValues((float *) buffer, offset, valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentFloat_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentDouble_AllValues3d
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdoubleArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jdouble *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jdouble *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayFragmentDouble *myObject = (RescueArrayFragmentDouble *) nativeNdx;
    myObject->AllValues((double *) buffer, offset, valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentDouble_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentFloat_SetValue4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloatArray valueArrayArray)
{
  jfloat *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jfloat *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayFragmentFloat *myObject = (RescueArrayFragmentFloat *) nativeNdx;
    myObject->SetValue((float *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentFloat_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentDouble_SetValue4d
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdoubleArray valueArrayArray)
{
  jdouble *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jdouble *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayFragmentDouble *myObject = (RescueArrayFragmentDouble *) nativeNdx;
    myObject->SetValue((double *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jdouble *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jdouble *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jdouble *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentDouble_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentInt_Delete_1RescueArrayFragmentInt
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragmentInt *myObj = (RescueArrayFragmentInt *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentInt_~RescueArrayFragmentInt");
  }
}

extern "C" 
JNIEXPORT jintArray JNICALL Java_org_Rescue_rjni_RescueArrayFragmentInt_Value1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentInt *myObject = (RescueArrayFragmentInt *) nativeNdx;
    jint * myReturnCpp = (jint *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jintArray myReturn = env->NewIntArray(howMany);
      env->SetIntArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jintArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentInt_Value");
    return (jintArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragmentInt_ValueLength2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentInt *myObject = (RescueArrayFragmentInt *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentInt_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentInt_SetValue3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jintArray valueArrayArray)
{
  jint *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jint *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayFragmentInt *myObject = (RescueArrayFragmentInt *) nativeNdx;
    myObject->SetValue((RESCUEINT32 *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jint *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jint *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jint *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentInt_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentShort_Delete_1RescueArrayFragmentShort
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayFragmentShort *myObj = (RescueArrayFragmentShort *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentShort_~RescueArrayFragmentShort");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayFragmentShort_ValueLength1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentShort *myObject = (RescueArrayFragmentShort *) nativeNdx;
    jlong myReturn = myObject->ValueLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentShort_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jcharArray JNICALL Java_org_Rescue_rjni_RescueArrayFragmentShort_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayFragmentShort *myObject = (RescueArrayFragmentShort *) nativeNdx;
    unsigned short *myReturnCpp = (unsigned short *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jcharArray myReturn = env->NewCharArray(howMany);
      env->SetCharArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jcharArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentShort_Value");
    return (jcharArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayFragmentShort_SetValue3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jcharArray valueArrayArray)
{
  jchar *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jchar *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayFragmentShort *myObject = (RescueArrayFragmentShort *) nativeNdx;
    myObject->SetValue((unsigned short *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jchar *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jchar *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jchar *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayFragmentShort_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayInt_Delete_1RescueArrayInt
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayInt *myObj = (RescueArrayInt *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_~RescueArrayInt");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArrayInt_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    int myReturn = myObject->NullValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_NullValue");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jintArray JNICALL Java_org_Rescue_rjni_RescueArrayInt_Value2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    jint * myReturnCpp = (jint *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jintArray myReturn = env->NewIntArray(howMany);
      env->SetIntArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jintArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_Value");
    return (jintArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayInt_ValueLength3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ValueLength64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayInt_AllValues4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jintArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jint *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jint *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    myObject->AllValues((RESCUEINT32 *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jint *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jint *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jint *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayInt_SetValue5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint nullValue
  ,jintArray valueArrayArray)
{
  jint *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jint *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    myObject->SetValue(nullValue,
                (RESCUEINT32 *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jint *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jint *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jint *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayInt_SetNullValue7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint nullValueIn)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    myObject->SetNullValue(nullValueIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_SetNullValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayInt_IsLoaded8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArrayInt_MinValue9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    int myReturn = myObject->MinValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_MinValue");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArrayInt_MaxValue10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    int myReturn = myObject->MaxValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_MaxValue");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayInt_Load11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayInt_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayInt_Create13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayInt_Create14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayInt_IsOfType15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArrayInt *myObject = (RescueArrayInt *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayInt_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayShort_Delete_1RescueArrayShort
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueArrayShort *myObj = (RescueArrayShort *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_~RescueArrayShort");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueArrayShort_NullValue1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    int myReturn = myObject->NullValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_NullValue");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayShort_LookupTable2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RescueLookup * myReturn = myObject->LookupTable();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_LookupTable");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayShort_ValueLength3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RESCUEINT64 myReturn = (RESCUEINT64) myObject->ValueLength64();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_ValueLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jcharArray JNICALL Java_org_Rescue_rjni_RescueArrayShort_Value4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    unsigned short *myReturnCpp = (unsigned short *) myObject->Value();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ValueLength64();
      jcharArray myReturn = env->NewCharArray(howMany);
      env->SetCharArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jcharArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_Value");
    return (jcharArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayShort_AllValues5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jcharArray bufferArray
  ,jlong offset
  ,jlong valueCount)
{
  jchar *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jchar *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    myObject->AllValues((unsigned short *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) valueCount);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jchar *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jchar *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jchar *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_AllValues");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayShort_SetValue6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jchar nullValueJ
  ,jcharArray valueArrayArray)
{
  jchar *valueArray = 0;
  try
  {
    unsigned short nullValue = (unsigned short) nullValueJ;
    if (valueArrayArray != 0)
    {
      valueArray = (jchar *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    myObject->SetValue((unsigned short) nullValue,
                (unsigned short *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jchar *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jchar *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jchar *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_SetValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueArrayShort_SetNullValue8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jchar nullValueInJ)
{
  try
  {
    unsigned short nullValueIn = (unsigned short) nullValueInJ;
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    myObject->SetNullValue((unsigned short) nullValueIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_SetNullValue");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayShort_IsLoaded9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jchar JNICALL Java_org_Rescue_rjni_RescueArrayShort_MinValue10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    unsigned short myReturn = myObject->MinValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jchar) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_MinValue");
    return (jchar) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jchar JNICALL Java_org_Rescue_rjni_RescueArrayShort_MaxValue11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    unsigned short myReturn = myObject->MaxValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jchar) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_MaxValue");
    return (jchar) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayShort_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayShort_Load13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Load((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_Load");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayShort_Create14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueArrayShort_Create15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong iLowBound
  ,jlong iCount
  ,jlong jLowBound
  ,jlong jCount
  ,jlong kLowBound
  ,jlong kCount)
{
  try
  {
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RescueArrayFragment * myReturn = myObject->Create((RESCUEINT64) iLowBound,
                (RESCUEINT64) iCount,
                (RESCUEINT64) jLowBound,
                (RESCUEINT64) jCount,
                (RESCUEINT64) kLowBound,
                (RESCUEINT64) kCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_Create");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueArrayShort_IsOfType16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueArrayShort *myObject = (RescueArrayShort *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueArrayShort_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueBitArray_BitField0
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedNdx)
{
  try
  {
    RescueBitArray *myObject = (RescueBitArray *) nativeNdx;
    int myReturn = myObject->BitField((RESCUEINT64) zeroBasedNdx);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBitArray_BitField");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBitArray_SetBitField1
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedNdx
  ,jint value)
{
  try
  {
    RescueBitArray *myObject = (RescueBitArray *) nativeNdx;
    myObject->SetBitField((RESCUEINT64) zeroBasedNdx, value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBitArray_SetBitField");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBitArray_Delete_1RescueBitArray
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueBitArray *myObj = (RescueBitArray *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBitArray_~RescueBitArray");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_Create_1RescueBlock0  (JNIEnv *env, jobject obj
  ,jstring newBlockNameStr
  ,jlong newBlockParentNdx)
{
  try
  {
    jboolean newBlockNameBool;
    const char *newBlockName = env->GetStringUTFChars(newBlockNameStr, &newBlockNameBool);
    RescueModel * newBlockParent = (RescueModel *) newBlockParentNdx;
    RescueBlock *myReturn = new RescueBlock((char *) newBlockName,
                (RescueModel *) newBlockParent);
    env->ReleaseStringUTFChars(newBlockNameStr, newBlockName);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_RescueBlock");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlock_Delete_1RescueBlock
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueBlock *myObj = (RescueBlock *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_~RescueBlock");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueBlock_BlockName2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RCHString * myReturn = myObject->BlockName();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_BlockName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlock_SetBlockName3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newBlockNameStr)
{
  try
  {
    jboolean newBlockNameBool;
    const char *newBlockName = env->GetStringUTFChars(newBlockNameStr, &newBlockNameBool);
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    myObject->SetBlockName((char *) newBlockName);
    env->ReleaseStringUTFChars(newBlockNameStr, newBlockName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_SetBlockName");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_ParentModel4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_BlockUnitCount5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    jlong myReturn = myObject->BlockUnitCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_BlockUnitCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_NthRescueBlockUnit6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->NthRescueBlockUnit((RESCUEINT64) zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_NthRescueBlockUnit");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_BlockUnitIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->BlockUnitIdentifiedBy((RESCUEINT64) identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_BlockUnitIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_BlockUnitForUnit8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong unitToFindNdx)
{
  try
  {
    RescueUnit * unitToFind = (RescueUnit *) unitToFindNdx;
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->BlockUnitForUnit((RescueUnit *) unitToFind);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_BlockUnitForUnit");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlock_DropBlockUnit9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong blockUnitToDropNdx)
{
  try
  {
    RescueBlockUnit * blockUnitToDrop = (RescueBlockUnit *) blockUnitToDropNdx;
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropBlockUnit((RescueBlockUnit *) blockUnitToDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_DropBlockUnit");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_PropertyIdentifiedBy10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyIdentifiedBy((RESCUEINT64) id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_PropertyIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_MacroVolumeIdentifiedBy11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->MacroVolumeIdentifiedBy((RESCUEINT64) id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_MacroVolumeIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_BlockUnitSideIdentifiedBy12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueBlockUnitSide * myReturn = myObject->BlockUnitSideIdentifiedBy((RESCUEINT64) id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_BlockUnitSideIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlock_AnyFileTruncated13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlock_GeometryIdentifiedBy14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy((RESCUEINT64) identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlock_IsOfType15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueBlock *myObject = (RescueBlock *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlock_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Create_1RescueBlockUnit0  (JNIEnv *env, jobject obj
  ,jlong parentBlockNdx
  ,jlong parentUnitNdx)
{
  try
  {
    RescueBlock * parentBlock = (RescueBlock *) parentBlockNdx;
    RescueUnit * parentUnit = (RescueUnit *) parentUnitNdx;
    RescueBlockUnit *myReturn = new RescueBlockUnit((RescueBlock *) parentBlock,
                (RescueUnit *) parentUnit);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_RescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Create_1RescueBlockUnit1  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBlockNdx
  ,jlong parentUnitNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jfloat k_origin
  ,jfloat k_step
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueBlock * parentBlock = (RescueBlock *) parentBlockNdx;
    RescueUnit * parentUnit = (RescueUnit *) parentUnitNdx;
    RescueBlockUnit *myReturn = new RescueBlockUnit((RescueCoordinateSystem::Orientation) orientation,
                (RescueBlock *) parentBlock,
                (RescueUnit *) parentUnit,
                (float) i_origin,
                (float) i_step,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (float) j_origin,
                (float) j_step,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (float) k_origin,
                (float) k_step,
                (RESCUEINT64) k_lowbound,
                (RESCUEINT64) k_count,
                (float) missingValue);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_RescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Create_1RescueBlockUnit2  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBlockNdx
  ,jlong parentUnitNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueBlock * parentBlock = (RescueBlock *) parentBlockNdx;
    RescueUnit * parentUnit = (RescueUnit *) parentUnitNdx;
    RescueBlockUnit *myReturn = new RescueBlockUnit((RescueCoordinateSystem::Orientation) orientation,
                (RescueBlock *) parentBlock,
                (RescueUnit *) parentUnit,
                (float) i_origin,
                (float) i_step,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (float) j_origin,
                (float) j_step,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (RESCUEINT64) k_lowbound,
                (RESCUEINT64) k_count,
                (float) missingValue);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_RescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Create_1RescueBlockUnit3  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBlockNdx
  ,jlong parentUnitNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue
  ,jlong topSurfaceInNdx
  ,jfloat topOffsetIn
  ,jlong bottomSurfaceInNdx
  ,jfloat bottomOffsetIn)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueBlock * parentBlock = (RescueBlock *) parentBlockNdx;
    RescueUnit * parentUnit = (RescueUnit *) parentUnitNdx;
    RescueReferenceSurface * topSurfaceIn = (RescueReferenceSurface *) topSurfaceInNdx;
    RescueReferenceSurface * bottomSurfaceIn = (RescueReferenceSurface *) bottomSurfaceInNdx;
    RescueBlockUnit *myReturn = new RescueBlockUnit((RescueCoordinateSystem::Orientation) orientation,
                (RescueBlock *) parentBlock,
                (RescueUnit *) parentUnit,
                (float) i_origin,
                (float) i_step,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (float) j_origin,
                (float) j_step,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (RESCUEINT64) k_lowbound,
                (RESCUEINT64) k_count,
                (float) missingValue,
                (RescueReferenceSurface *) topSurfaceIn,
                (float) topOffsetIn,
                (RescueReferenceSurface *) bottomSurfaceIn,
                (float) bottomOffsetIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_RescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Create_1RescueBlockUnit4  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBlockNdx
  ,jlong parentUnitNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue
  ,jlong referenceSurfaceInNdx
  ,jfloat referenceOffsetIn
  ,jfloat thicknessIn
  ,jint onOffLapInInt)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueBlock * parentBlock = (RescueBlock *) parentBlockNdx;
    RescueUnit * parentUnit = (RescueUnit *) parentUnitNdx;
    RescueReferenceSurface * referenceSurfaceIn = (RescueReferenceSurface *) referenceSurfaceInNdx;
    RescueGeometry::RescueLapType onOffLapIn = (RescueGeometry::RescueLapType) onOffLapInInt;
    RescueBlockUnit *myReturn = new RescueBlockUnit((RescueCoordinateSystem::Orientation) orientation,
                (RescueBlock *) parentBlock,
                (RescueUnit *) parentUnit,
                (float) i_origin,
                (float) i_step,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (float) j_origin,
                (float) j_step,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (RESCUEINT64) k_lowbound,
                (RESCUEINT64) k_count,
                (float) missingValue,
                (RescueReferenceSurface *) referenceSurfaceIn,
                (float) referenceOffsetIn,
                (float) thicknessIn,
                (RescueGeometry::RescueLapType) onOffLapIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_RescueBlockUnit");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Delete_1RescueBlockUnit
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueBlockUnit *myObj = (RescueBlockUnit *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_~RescueBlockUnit");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Unit6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueUnit * myReturn = myObject->Unit();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_Unit");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Block7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueBlock * myReturn = myObject->Block();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_Block");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_ParentModel8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_SurfaceAboveMe9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueBlockUnitHorizonSurface * myReturn = myObject->SurfaceAboveMe();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_SurfaceAboveMe");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_SurfaceBelowMe10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueBlockUnitHorizonSurface * myReturn = myObject->SurfaceBelowMe();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_SurfaceBelowMe");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_SetSurfaceAboveMe11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSurfaceNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface * existingSurface = (RescueBlockUnitHorizonSurface *) existingSurfaceNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->SetSurfaceAboveMe((RescueBlockUnitHorizonSurface *) existingSurface);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_SetSurfaceAboveMe");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_SetSurfaceBelowMe12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSurfaceNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface * existingSurface = (RescueBlockUnitHorizonSurface *) existingSurfaceNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->SetSurfaceBelowMe((RescueBlockUnitHorizonSurface *) existingSurface);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_SetSurfaceBelowMe");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_AddMacroVolume13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->AddMacroVolume();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_AddMacroVolume");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_DropMacroVolume14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingVolumeNdx)
{
  try
  {
    RescueMacroVolume * existingVolume = (RescueMacroVolume *) existingVolumeNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->DropMacroVolume((RescueMacroVolume *) existingVolume);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_DropMacroVolume");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_NthMacroVolume15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->NthMacroVolume((RESCUEINT64) zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_NthMacroVolume");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_MacroVolumeIdentifiedBy16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueMacroVolume * myReturn = myObject->MacroVolumeIdentifiedBy(id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_MacroVolumeIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_BlockUnitSideIdentifiedBy17
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueBlockUnitSide * myReturn = myObject->BlockUnitSideIdentifiedBy((RESCUEINT64) id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_BlockUnitSideIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_AddPropertyGroup18
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingPropertyGroupNdx)
{
  try
  {
    RescuePropertyGroup * existingPropertyGroup = (RescuePropertyGroup *) existingPropertyGroupNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->AddPropertyGroup((RescuePropertyGroup *) existingPropertyGroup);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_AddPropertyGroup");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlockUnit_DeletePropertyGroup19
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingPropertyGroupNdx)
{
  try
  {
    RescuePropertyGroup * existingPropertyGroup = (RescuePropertyGroup *) existingPropertyGroupNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DeletePropertyGroup((RescuePropertyGroup *) existingPropertyGroup);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_DeletePropertyGroup");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_NthPropertyGroup20
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->NthPropertyGroup((RESCUEINT64) zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_NthPropertyGroup");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_BlockUnitGrid21
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueGrid * myReturn = myObject->BlockUnitGrid(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_BlockUnitGrid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_GridGeometry22
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueGeometry * myReturn = myObject->GridGeometry(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_GridGeometry");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_GeometryCount23
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->GeometryCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_GeometryCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_AddGeometry24
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newGeometryNdx)
{
  try
  {
    RescueGeometry * newGeometry = (RescueGeometry *) newGeometryNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->AddGeometry((RescueGeometry *) newGeometry);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_AddGeometry");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_DropGeometry25
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong toDropNdx)
{
  try
  {
    RescueGeometry * toDrop = (RescueGeometry *) toDropNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->DropGeometry((RescueGeometry *) toDrop);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_DropGeometry");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_PropertyCount26
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->PropertyCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_PropertyCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_CountOfPropertyGroup27
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->CountOfPropertyGroup64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_CountOfPropertyGroup");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_CountOfVolumes28
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->CountOfVolumes64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_CountOfVolumes");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_CountOfGeobodies29
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    jlong myReturn = myObject->CountOfGeobodies64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_CountOfGeobodies");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_NthPart30
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->NthPart(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_NthPart");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_GeometryIdentifiedBy31
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlockUnit_AnyFileTruncated32
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnit_SetColor34
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong colorInNdx)
{
  try
  {
    RescueColor * colorIn = (RescueColor *) colorInNdx;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    myObject->SetColor((RescueColor *) colorIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_SetColor");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_Color35
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueColor * myReturn = myObject->Color();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_Color");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnit_PropertyIdentifiedBy36
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyIdentifiedBy(id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_PropertyIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlockUnit_IsOfType37
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueBlockUnit *myObject = (RescueBlockUnit *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnit_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_Create_1RescueBlockUnitHorizonSurface0  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentHorizonNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jfloat missingValue
  ,jint typeInInt)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueHorizon * parentHorizon = (RescueHorizon *) parentHorizonNdx;
    RescueSurface::SurfaceType typeIn = (RescueSurface::SurfaceType) typeInInt;
    RescueBlockUnitHorizonSurface *myReturn = new RescueBlockUnitHorizonSurface((RescueCoordinateSystem::Orientation) orientation,
                (RescueHorizon *) parentHorizon,
                (float) i_origin,
                (float) i_step,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (float) j_origin,
                (float) j_step,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (float) missingValue,
                (RescueSurface::SurfaceType) typeIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_RescueBlockUnitHorizonSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_Create_1RescueBlockUnitHorizonSurface1  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentHorizonNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jfloat missingValue
  ,jfloatArray valueTripletsArray
  ,jint typeInInt)
{
  jfloat *valueTriplets = 0;
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueHorizon * parentHorizon = (RescueHorizon *) parentHorizonNdx;
    if (valueTripletsArray != 0)
    {
      valueTriplets = (jfloat *) env->GetPrimitiveArrayCritical(valueTripletsArray, 0);
    }
    RescueSurface::SurfaceType typeIn = (RescueSurface::SurfaceType) typeInInt;
    RescueBlockUnitHorizonSurface *myReturn = new RescueBlockUnitHorizonSurface((RescueCoordinateSystem::Orientation) orientation,
                (RescueHorizon *) parentHorizon,
                (float) i_origin,
                (float) i_step,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (float) j_origin,
                (float) j_step,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (float) missingValue,
                (float *) valueTriplets,
                (RescueSurface::SurfaceType) typeIn);
    if (valueTripletsArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueTripletsArray, (jfloat *) valueTriplets, 0);
    }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (valueTriplets != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueTripletsArray, (jfloat *) valueTriplets, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_RescueBlockUnitHorizonSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_Create_1RescueBlockUnitHorizonSurface2  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentHorizonNdx
  ,jlong i_lowbound
  ,jlong i_count
  ,jlong j_lowbound
  ,jlong j_count
  ,jfloat missingValue
  ,jint typeInInt)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueHorizon * parentHorizon = (RescueHorizon *) parentHorizonNdx;
    RescueSurface::SurfaceType typeIn = (RescueSurface::SurfaceType) typeInInt;
    RescueBlockUnitHorizonSurface *myReturn = new RescueBlockUnitHorizonSurface((RescueCoordinateSystem::Orientation) orientation,
                (RescueHorizon *) parentHorizon,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (float) missingValue,
                (RescueSurface::SurfaceType) typeIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_RescueBlockUnitHorizonSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_Create_1RescueBlockUnitHorizonSurface3  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentHorizonNdx
  ,jfloat missingValue
  ,jint typeInInt)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueHorizon * parentHorizon = (RescueHorizon *) parentHorizonNdx;
    RescueSurface::SurfaceType typeIn = (RescueSurface::SurfaceType) typeInInt;
    RescueBlockUnitHorizonSurface *myReturn = new RescueBlockUnitHorizonSurface((RescueCoordinateSystem::Orientation) orientation,
                (RescueHorizon *) parentHorizon,
                (float) missingValue,
                (RescueSurface::SurfaceType) typeIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_RescueBlockUnitHorizonSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_Create_1RescueBlockUnitHorizonSurface4  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentHorizonNdx
  ,jlong i_lowbound
  ,jlong i_count
  ,jlong j_lowbound
  ,jlong j_count
  ,jfloat missingValue
  ,jfloatArray valueTripletsArray
  ,jint typeInInt)
{
  jfloat *valueTriplets = 0;
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueHorizon * parentHorizon = (RescueHorizon *) parentHorizonNdx;
    if (valueTripletsArray != 0)
    {
      valueTriplets = (jfloat *) env->GetPrimitiveArrayCritical(valueTripletsArray, 0);
    }
    RescueSurface::SurfaceType typeIn = (RescueSurface::SurfaceType) typeInInt;
    RescueBlockUnitHorizonSurface *myReturn = new RescueBlockUnitHorizonSurface((RescueCoordinateSystem::Orientation) orientation,
                (RescueHorizon *) parentHorizon,
                (RESCUEINT64) i_lowbound,
                (RESCUEINT64) i_count,
                (RESCUEINT64) j_lowbound,
                (RESCUEINT64) j_count,
                (float) missingValue,
                (float *) valueTriplets,
                (RescueSurface::SurfaceType) typeIn);
    if (valueTripletsArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueTripletsArray, (jfloat *) valueTriplets, 0);
    }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (valueTriplets != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueTripletsArray, (jfloat *) valueTriplets, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_RescueBlockUnitHorizonSurface");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_ParentHorizon5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface *myObject = (RescueBlockUnitHorizonSurface *) nativeNdx;
    RescueHorizon * myReturn = myObject->ParentHorizon();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_ParentHorizon");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_BlockUnitAboveMe6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface *myObject = (RescueBlockUnitHorizonSurface *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->BlockUnitAboveMe();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_BlockUnitAboveMe");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_BlockUnitBelowMe7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnitHorizonSurface *myObject = (RescueBlockUnitHorizonSurface *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->BlockUnitBelowMe();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_BlockUnitBelowMe");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_SetBlockUnitAboveMe8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingUnitNdx)
{
  try
  {
    RescueBlockUnit * existingUnit = (RescueBlockUnit *) existingUnitNdx;
    RescueBlockUnitHorizonSurface *myObject = (RescueBlockUnitHorizonSurface *) nativeNdx;
    myObject->SetBlockUnitAboveMe((RescueBlockUnit *) existingUnit);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_SetBlockUnitAboveMe");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_SetBlockUnitBelowMe9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingUnitNdx)
{
  try
  {
    RescueBlockUnit * existingUnit = (RescueBlockUnit *) existingUnitNdx;
    RescueBlockUnitHorizonSurface *myObject = (RescueBlockUnitHorizonSurface *) nativeNdx;
    myObject->SetBlockUnitBelowMe((RescueBlockUnit *) existingUnit);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_SetBlockUnitBelowMe");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlockUnitHorizonSurface_IsOfType10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueBlockUnitHorizonSurface *myObject = (RescueBlockUnitHorizonSurface *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitHorizonSurface_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitSide_Create_1RescueBlockUnitSide0  (JNIEnv *env, jobject obj
  ,jlong existingSectionNdx)
{
  try
  {
    RescueSection * existingSection = (RescueSection *) existingSectionNdx;
    RescueBlockUnitSide *myReturn = new RescueBlockUnitSide((RescueSection *) existingSection);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitSide_RescueBlockUnitSide");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueBlockUnitSide_Delete_1RescueBlockUnitSide
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueBlockUnitSide *myObj = (RescueBlockUnitSide *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitSide_~RescueBlockUnitSide");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitSide_Section2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnitSide *myObject = (RescueBlockUnitSide *) nativeNdx;
    RescueSection * myReturn = myObject->Section();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitSide_Section");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitSide_EdgesObj3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnitSide *myObject = (RescueBlockUnitSide *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->EdgesObj();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitSide_EdgesObj");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueBlockUnitSide_Edges4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueBlockUnitSide *myObject = (RescueBlockUnitSide *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->Edges();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitSide_Edges");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueBlockUnitSide_IsOfType5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueBlockUnitSide *myObject = (RescueBlockUnitSide *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueBlockUnitSide_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColor_Create_1RescueColor0  (JNIEnv *env, jobject obj
  ,jlong otherColorNdx)
{
  try
  {
    RescueColor & otherColor = (RescueColor &) otherColorNdx;
    RescueColor *myReturn = new RescueColor((RescueColor &) otherColor);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_RescueColor");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_SamePoint
  (JNIEnv *env, jclass myClass, jfloat x1, jfloat y1, jfloat z1, jfloat x2, jfloat y2, jfloat z2)
{
  return RescueContext::SamePoint(x1, y1, z1, x2, y2, z2);
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColor_Create_1RescueColor1  (JNIEnv *env, jobject obj
  ,jlong contextNdx
  ,jint red
  ,jint green
  ,jint blue
  ,jstring nameStr)
{
  try
  {
    RescueContext * context = (RescueContext *) contextNdx;
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueColor *myReturn = new RescueColor((RescueContext *) context,
                (int) red,
                (int) green,
                (int) blue,
                (char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_RescueColor");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColor_Create_1RescueColor2  (JNIEnv *env, jobject obj
  ,jlong contextNdx
  ,jfloat red
  ,jfloat green
  ,jfloat blue
  ,jstring nameStr)
{
  try
  {
    RescueContext * context = (RescueContext *) contextNdx;
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueColor *myReturn = new RescueColor((RescueContext *) context,
                (float) red,
                (float) green,
                (float) blue,
                (char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_RescueColor");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColor_Delete_1RescueColor
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueColor *myObj = (RescueColor *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_~RescueColor");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColor_SetColor4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint red
  ,jint green
  ,jint blue
  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueColor *myObject = (RescueColor *) nativeNdx;
    myObject->SetColor((int) red,
                (int) green,
                (int) blue,
                (char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_SetColor");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColor_SetColor5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloat red
  ,jfloat green
  ,jfloat blue
  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueColor *myObject = (RescueColor *) nativeNdx;
    myObject->SetColor((float) red,
                (float) green,
                (float) blue,
                (char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_SetColor");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueColor_ColorName8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColor *myObject = (RescueColor *) nativeNdx;
    char * myReturn = myObject->ColorName();
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_ColorName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jintArray JNICALL Java_org_Rescue_rjni_RescueColor_GetColorR1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColor *myObject = (RescueColor *) nativeNdx;
    int red, green, blue;
    myObject->GetColor(red, green, blue);
#ifdef _WIN32
    long outputs[3];
#else
    int outputs[3];
#endif
    outputs[0] = red;
    outputs[1] = green;
    outputs[2] = blue;
    jintArray myReturn = env->NewIntArray(3);
    env->SetIntArrayRegion(myReturn, 0, 3, outputs);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jintArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_GetColorR1");
    return (jintArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueColor_GetColorR2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColor *myObject = (RescueColor *) nativeNdx;
    float red, green, blue;
    myObject->GetColor(red, green, blue);
    jfloatArray myReturn = env->NewFloatArray(3);
    env->SetFloatArrayRegion(myReturn, 0, 1, &red);
    env->SetFloatArrayRegion(myReturn, 1, 1, &green);
    env->SetFloatArrayRegion(myReturn, 2, 1, &blue);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_GetColorR2");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColor_IsOfType9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueColor *myObject = (RescueColor *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColor_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColorTable_Create_1RescueColorTable0  (JNIEnv *env, jobject obj
  ,jlong parentModelNdx
  ,jlong probableRows
  ,jint roleInt)
{
  try
  {
    RescueModel * parentModel = (RescueModel *) parentModelNdx;
    RescueColorTable::Role role = (RescueColorTable::Role) roleInt;
    RescueColorTable *myReturn = new RescueColorTable((RescueModel *) parentModel,
                probableRows,
                (RescueColorTable::Role) role);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_RescueColorTable");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColorTable_Create_1RescueColorTable1  (JNIEnv *env, jobject obj
  ,jlong otherNdx)
{
  try
  {
    RescueColorTable & other = (RescueColorTable &) otherNdx;
    RescueColorTable *myReturn = new RescueColorTable((RescueColorTable &) other);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_RescueColorTable");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_Delete_1RescueColorTable
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueColorTable *myObj = (RescueColorTable *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_~RescueColorTable");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_ResetColorTable3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    myObject->ResetColorTable();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_ResetColorTable");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColorTable_ColorRowCount4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    jlong myReturn = myObject->ColorRowCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_ColorRowCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_AddColorRow6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloat lowValue
  ,jfloat highValue
  ,jlong colorNdx)
{
  try
  {
    RescueColor * color = (RescueColor *) colorNdx;
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    myObject->AddColorRow((float) lowValue,
                (float) highValue,
                (RescueColor *) color);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_AddColorRow");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_AddColorRow7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloat lowValue
  ,jfloat highValue
  ,jlong lowColorNdx
  ,jlong highColorNdx)
{
  try
  {
    RescueColor * lowColor = (RescueColor *) lowColorNdx;
    RescueColor * highColor = (RescueColor *) highColorNdx;
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    myObject->AddColorRow((float) lowValue,
                (float) highValue,
                (RescueColor *) lowColor,
                (RescueColor *) highColor);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_AddColorRow");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_AddColorRow8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean lowToInfiniteBool
  ,jfloat lowValue
  ,jboolean highToInfiniteBool
  ,jfloat highValue
  ,jlong colorNdx)
{
  try
  {
    RESCUEBOOL lowToInfinite = ((lowToInfiniteBool == JNI_TRUE) ? TRUE : FALSE);
    RESCUEBOOL highToInfinite = ((highToInfiniteBool == JNI_TRUE) ? TRUE : FALSE);
    RescueColor * color = (RescueColor *) colorNdx;
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    myObject->AddColorRow((RESCUEBOOL) lowToInfinite,
                (float) lowValue,
                (RESCUEBOOL) highToInfinite,
                (float) highValue,
                (RescueColor *) color);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_AddColorRow");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_AddColorRow9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean lowToInfiniteBool
  ,jfloat lowValue
  ,jboolean highToInfiniteBool
  ,jfloat highValue
  ,jlong lowColorNdx
  ,jlong highColorNdx)
{
  try
  {
    RESCUEBOOL lowToInfinite = ((lowToInfiniteBool == JNI_TRUE) ? TRUE : FALSE);
    RESCUEBOOL highToInfinite = ((highToInfiniteBool == JNI_TRUE) ? TRUE : FALSE);
    RescueColor * lowColor = (RescueColor *) lowColorNdx;
    RescueColor * highColor = (RescueColor *) highColorNdx;
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    myObject->AddColorRow((RESCUEBOOL) lowToInfinite,
                (float) lowValue,
                (RESCUEBOOL) highToInfinite,
                (float) highValue,
                (RescueColor *) lowColor,
                (RescueColor *) highColor);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_AddColorRow");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTable_IsLoaded10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTable_FileTruncated11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    RESCUEBOOL myReturn = myObject->FileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_FileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTable_Load12
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Load();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_Load");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTable_Unload13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Unload();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_Unload");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTable_HasChanged14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    RESCUEBOOL myReturn = myObject->HasChanged();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_HasChanged");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTable_MarkChanged15
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    myObject->MarkChanged();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_MarkChanged");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueColorTable_Version16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean reloadBool)
{
  try
  {
    RESCUEBOOL reload = ((reloadBool == JNI_TRUE) ? TRUE : FALSE);
    RescueColorTable *myObject = (RescueColorTable *) nativeNdx;
    int myReturn = myObject->Version((RESCUEBOOL) reload);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTable_Version");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColorTableList_Create_1RescueColorTableList0  (JNIEnv *env, jobject obj
  ,jlong contextNdx
  ,jlong probableCount)
{
  try
  {
    RescueContext * context = (RescueContext *) contextNdx;
    RescueColorTableList *myReturn = new RescueColorTableList((RescueContext *) context,
                probableCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_RescueColorTableList");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueColorTableList_Delete_1RescueColorTableList
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueColorTableList *myObj = (RescueColorTableList *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_~RescueColorTableList");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColorTableList_TableFor2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring typeNameStr)
{
  try
  {
    jboolean typeNameBool;
    const char *typeName = env->GetStringUTFChars(typeNameStr, &typeNameBool);
    RescueColorTableList *myObject = (RescueColorTableList *) nativeNdx;
    RescueColorTable * myReturn = myObject->TableFor((char *) typeName);
    env->ReleaseStringUTFChars(typeNameStr, typeName);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_TableFor");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTableList_AddTableFor3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring typeNameStr
  ,jlong tableNdx)
{
  try
  {
    jboolean typeNameBool;
    const char *typeName = env->GetStringUTFChars(typeNameStr, &typeNameBool);
    RescueColorTable * table = (RescueColorTable *) tableNdx;
    RescueColorTableList *myObject = (RescueColorTableList *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AddTableFor((char *) typeName,
                (RescueColorTable *) table);
    env->ReleaseStringUTFChars(typeNameStr, typeName);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_AddTableFor");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueColorTableList_DeleteTableFor4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring typeNameStr)
{
  try
  {
    jboolean typeNameBool;
    const char *typeName = env->GetStringUTFChars(typeNameStr, &typeNameBool);
    RescueColorTableList *myObject = (RescueColorTableList *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DeleteTableFor((char *) typeName);
    env->ReleaseStringUTFChars(typeNameStr, typeName);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_DeleteTableFor");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueColorTableList_TypeCount5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTableList *myObject = (RescueColorTableList *) nativeNdx;
    jlong myReturn = myObject->TypeCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_TypeCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jobjectArray JNICALL Java_org_Rescue_rjni_RescueColorTableList_TypeNames6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueColorTableList *myObject = (RescueColorTableList *) nativeNdx;
    char ** myReturn = myObject->TypeNames();
    int returnCount = myObject->TypeCount64();
    jobjectArray returnArray = (jobjectArray) env->NewObjectArray(returnCount, 
                                                 env->FindClass("java/lang/String"), 
                                                 env->NewStringUTF(""));
    int rLoop;
    for (rLoop = 0; rLoop < returnCount; rLoop++)
    {
      env->SetObjectArrayElement(returnArray, rLoop, 
                               env->NewStringUTF(myReturn[rLoop]));
    }
    return returnArray;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueColorTableList_TypeNames");
    return (jobjectArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueContext_Create_1RescueContext0  (JNIEnv *env, jobject obj
)
{
  try
  {
    RescueContext *myReturn = new RescueContext();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_RescueContext");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

class RescueRJNIProgressMonitor:public RescueProgressReporter
{
  JNIEnv *env;
  RCHString className;
public:
  RescueRJNIProgressMonitor(JNIEnv *envIn, const char *classNameIn)
  {
    env = envIn;
    className = classNameIn;
    char *pos = strchr(className.String(), '.');
    while (pos != 0)
    {
      *pos = '/';
      pos = strchr(className.String(), '.');
    }
  }

  virtual void ReportProgress(const char *phaseDescription)
  {
    jclass cls = env->FindClass(className.String());
    jmethodID mid = env->GetStaticMethodID(cls, "ReportProgress", "(Ljava/lang/String;)V");
    if (mid == 0)
    {
      throw "Could not locate ReportProgress method in registered RescueProgressReporter";
    }
    else
    {
      env->ExceptionClear();
      env->CallStaticVoidMethod(cls, mid, env->NewStringUTF(phaseDescription));
      if (env->ExceptionOccurred())
      {
        throw "Exception occurred in call to ReportProgress method in registered RescueProgressReporter";
        env->ExceptionClear();
      }
    }
  }

};

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_RegisterProgressReporter1
  (JNIEnv *env, jobject obj, jlong nativeNdx, jstring reporterClassNameStr)
{
  try
  {
    if (reporterClassNameStr == 0)
    {
      RescueContext *myObject = (RescueContext *) nativeNdx;
      myObject->RegisterProgressReporter((RescueProgressReporter *) 0);
    }
    else
    {
      jboolean reporterClassNameBool;
      const char *reporterClassName = env->GetStringUTFChars(reporterClassNameStr, &reporterClassNameBool);
      RescueProgressReporter * newProgressObject = new RescueRJNIProgressMonitor(env, reporterClassName);
      env->ReleaseStringUTFChars(reporterClassNameStr, reporterClassName);
      RescueContext *myObject = (RescueContext *) nativeNdx;
      myObject->RegisterProgressReporter((RescueProgressReporter *) newProgressObject);
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_RegisterProgressReporter");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueModel_ReadWITSML133
  (JNIEnv *env, jobject obj, jlong refNdx, jstring pathNameStr, jstring reporterClassNameStr)
{
  try
  {
    jboolean pathNameBool;
    const char *pathName = env->GetStringUTFChars(pathNameStr, &pathNameBool);
    RescueModel * modelIn = (RescueModel *) refNdx;
    RescueProgressReporter *loggingObject = 0;

    if (reporterClassNameStr != 0)
    {
      jboolean reporterClassNameBool;
      const char *reporterClassName = env->GetStringUTFChars(reporterClassNameStr, &reporterClassNameBool);
      loggingObject = new RescueRJNIProgressMonitor(env, reporterClassName);
      env->ReleaseStringUTFChars(reporterClassNameStr, reporterClassName);
    }

    jboolean myReturn = modelIn->ReadWITSML(pathName, loggingObject);
    env->ReleaseStringUTFChars(pathNameStr, pathName);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueModel_WriteWITSML");
    return (jboolean) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_SetAutoBackup2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean newStateBool)
{
  try
  {
    RESCUEBOOL newState = ((newStateBool == JNI_TRUE) ? TRUE : FALSE);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->SetAutoBackup((RESCUEBOOL) newState);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_SetAutoBackup");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_SetFileNameManipulation3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean newStateBool)
{
  try
  {
    RESCUEBOOL newState = ((newStateBool == JNI_TRUE) ? TRUE : FALSE);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->SetFileNameManipulation((RESCUEBOOL) newState);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_SetFileNameManipulation");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_CleanFromUnarchive4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->CleanFromUnarchive();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_CleanFromUnarchive");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_SetLoadOnDemand5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean newStateBool)
{
  try
  {
    RESCUEBOOL newState = ((newStateBool == JNI_TRUE) ? TRUE : FALSE);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->SetLoadOnDemand((RESCUEBOOL) newState);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_SetLoadOnDemand");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_DelayedPropertyLoad6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DelayedPropertyLoad();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_DelayedPropertyLoad");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_SetLoadOnDemand27
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean newStateBool)
{
  try
  {
    RESCUEBOOL newState = ((newStateBool == JNI_TRUE) ? TRUE : FALSE);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->SetLoadOnDemand2((RESCUEBOOL) newState);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_SetLoadOnDemand2");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_DelayedGeometryLoad8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DelayedGeometryLoad();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_DelayedGeometryLoad");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_RescueProgress9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring progressDescriptionStr)
{
  try
  {
    jboolean progressDescriptionBool;
    const char *progressDescription = env->GetStringUTFChars(progressDescriptionStr, &progressDescriptionBool);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->RescueProgress((const char *) progressDescription);
    env->ReleaseStringUTFChars(progressDescriptionStr, progressDescription);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_RescueProgress");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueContext_GetLock10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring rescueFileNameStr
  ,jboolean needWriteBool
  ,jboolean forceLockBool)
{
  try
  {
    jboolean rescueFileNameBool;
    const char *rescueFileName = env->GetStringUTFChars(rescueFileNameStr, &rescueFileNameBool);
    RESCUEBOOL needWrite = ((needWriteBool == JNI_TRUE) ? TRUE : FALSE);
    RESCUEBOOL forceLock = ((forceLockBool == JNI_TRUE) ? TRUE : FALSE);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    char * myReturn = myObject->GetLock((char *) rescueFileName,
                (RESCUEBOOL) needWrite,
                (RESCUEBOOL) forceLock);
    env->ReleaseStringUTFChars(rescueFileNameStr, rescueFileName);
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_GetLock");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_ReleaseLock11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring rescueFileNameStr)
{
  try
  {
    jboolean rescueFileNameBool;
    const char *rescueFileName = env->GetStringUTFChars(rescueFileNameStr, &rescueFileNameBool);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->ReleaseLock((char *) rescueFileName);
    env->ReleaseStringUTFChars(rescueFileNameStr, rescueFileName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_ReleaseLock");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_CheckLock12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring rescueFileNameStr)
{
  try
  {
    jboolean rescueFileNameBool;
    const char *rescueFileName = env->GetStringUTFChars(rescueFileNameStr, &rescueFileNameBool);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    RESCUEBOOL myReturn = myObject->CheckLock((char *) rescueFileName);
    env->ReleaseStringUTFChars(rescueFileNameStr, rescueFileName);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_CheckLock");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_VetFileName13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring fileNameStr
  ,jboolean creatingBool
  ,jboolean desireBinaryBool)
{
  try
  {
    jboolean fileNameBool;
    const char *fileNameCCStar = env->GetStringUTFChars(fileNameStr, &fileNameBool);
    RCHString *fileName = new RCHString(fileNameCCStar);
    env->ReleaseStringUTFChars(fileNameStr, fileNameCCStar);
    RESCUEBOOL creating = ((creatingBool == JNI_TRUE) ? TRUE : FALSE);
    RESCUEBOOL desireBinary = ((desireBinaryBool == JNI_TRUE) ? TRUE : FALSE);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->VetFileName((RCHString *) fileName,
                (RESCUEBOOL) creating,
                (RESCUEBOOL) desireBinary);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_VetFileName");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueContext_FileVersion14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring pathNameStr)
{
  try
  {
    jboolean pathNameBool;
    const char *pathName = env->GetStringUTFChars(pathNameStr, &pathNameBool);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    int myReturn = myObject->FileVersion((char *) pathName);
    env->ReleaseStringUTFChars(pathNameStr, pathName);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_FileVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueContext_SoftwareVersion15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring pathNameStr)
{
  try
  {
    jboolean pathNameBool;
    const char *pathName = env->GetStringUTFChars(pathNameStr, &pathNameBool);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    int myReturn = myObject->SoftwareVersion((char *) pathName);
    env->ReleaseStringUTFChars(pathNameStr, pathName);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_SoftwareVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueContext_LibraryVersion17
  (JNIEnv *env, jclass cls)
{
  try
  {
    int myReturn = RescueContext::LibraryVersion();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_LibraryVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueContext_LibrarySubVersion18
  (JNIEnv *env, jclass cls)
{
  try
  {
    int myReturn = RescueContext::LibrarySubVersion();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_LibrarySubVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_TypeMarker19
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring pathNameStr
  ,jbyteArray bufferArray
  ,jint bufLen)
{
  jbyte *buffer = 0;
  try
  {
    jboolean pathNameBool;
    const char *pathName = env->GetStringUTFChars(pathNameStr, &pathNameBool);
    if (bufferArray != 0)
    {
      buffer = (jbyte *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueContext *myObject = (RescueContext *) nativeNdx;
    RESCUEBOOL myReturn = myObject->TypeMarker((char *) pathName,
                (unsigned char *) buffer,
                (int) bufLen);
    env->ReleaseStringUTFChars(pathNameStr, pathName);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jbyte *) buffer, 0);
    }
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jbyte *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jbyte *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_TypeMarker");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_FileTruncated20
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring pathNameStr)
{
  try
  {
    jboolean pathNameBool;
    const char *pathName = env->GetStringUTFChars(pathNameStr, &pathNameBool);
    RescueContext *myObject = (RescueContext *) nativeNdx;
    RESCUEBOOL myReturn = myObject->FileTruncated((char *) pathName);
    env->ReleaseStringUTFChars(pathNameStr, pathName);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_FileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueContext_BinaryFlag21
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    RESCUEBOOL myReturn = myObject->BinaryFlag();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_BinaryFlag");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueContext_ReadFileVersion22
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    int myReturn = myObject->ReadFileVersion();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_ReadFileVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueContext_FileVersion23
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    int myReturn = myObject->FileVersion();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_FileVersion");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueContext_NextId24
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    jlong myReturn = myObject->NextId();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_NextId");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueContext_LastError25
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    const char * myReturn = myObject->LastError();
    if (myReturn == 0)
    {
      return (jstring) 0;
    }
    else
    {
      return env->NewStringUTF(myReturn);
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_LastError");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C"
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueContext_ClearError26
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueContext *myObject = (RescueContext *) nativeNdx;
    myObject->ClearError();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch(...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueContext_ClearError");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueCoordinateLine_Delete_1RescueCoordinateLine
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueCoordinateLine *myObj = (RescueCoordinateLine *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateLine_~RescueCoordinateLine");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueCoordinatePolyLine_Delete_1RescueCoordinatePolyLine
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueCoordinatePolyLine *myObj = (RescueCoordinatePolyLine *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinatePolyLine_~RescueCoordinatePolyLine");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Create_1RescueCoordinateSystem0  (JNIEnv *env, jobject obj
  ,jlong contextNdx
  ,jstring nameStr
  ,jint displayOrientationInInt
  ,jlong vertexInNdx
  ,jstring XpropertyStr
  ,jstring XuomStr
  ,jstring YpropertyStr
  ,jstring YuomStr
  ,jstring ZpropertyStr
  ,jstring ZuomStr
  ,jint insysIn
  ,jint inzoneIn
  ,jint inUnitIn
  ,jint insphIn
  ,jdouble semiMajorAxisIn
  ,jdouble eccentricityIn
  ,jdouble standardLatIn
  ,jdouble secondLatIn
  ,jdouble centralLongIn
  ,jdouble latOriginIn
  ,jdouble FALSEEastingIn
  ,jdouble FALSENorthingIn)
{
  try
  {
    RescueContext * context = (RescueContext *) contextNdx;
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueCoordinateSystem::Orientation displayOrientationIn = (RescueCoordinateSystem::Orientation) displayOrientationInInt;
    RescueVertex * vertexIn = (RescueVertex *) vertexInNdx;
    jboolean XpropertyBool;
    const char *Xproperty = env->GetStringUTFChars(XpropertyStr, &XpropertyBool);
    jboolean XuomBool;
    const char *Xuom = env->GetStringUTFChars(XuomStr, &XuomBool);
    jboolean YpropertyBool;
    const char *Yproperty = env->GetStringUTFChars(YpropertyStr, &YpropertyBool);
    jboolean YuomBool;
    const char *Yuom = env->GetStringUTFChars(YuomStr, &YuomBool);
    jboolean ZpropertyBool;
    const char *Zproperty = env->GetStringUTFChars(ZpropertyStr, &ZpropertyBool);
    jboolean ZuomBool;
    const char *Zuom = env->GetStringUTFChars(ZuomStr, &ZuomBool);
    RescueCoordinateSystem *myReturn = new RescueCoordinateSystem((RescueContext *) context,
                (char *) name,
                (RescueCoordinateSystem::Orientation) displayOrientationIn,
                (RescueVertex *) vertexIn,
                (char *) Xproperty,
                (char *) Xuom,
                (char *) Yproperty,
                (char *) Yuom,
                (char *) Zproperty,
                (char *) Zuom,
                (int) insysIn,
                (int) inzoneIn,
                (int) inUnitIn,
                (int) insphIn,
                (double) semiMajorAxisIn,
                (double) eccentricityIn,
                (double) standardLatIn,
                (double) secondLatIn,
                (double) centralLongIn,
                (double) latOriginIn,
                (double) FALSEEastingIn,
                (double) FALSENorthingIn);
    env->ReleaseStringUTFChars(nameStr, name);
    env->ReleaseStringUTFChars(XpropertyStr, Xproperty);
    env->ReleaseStringUTFChars(XuomStr, Xuom);
    env->ReleaseStringUTFChars(YpropertyStr, Yproperty);
    env->ReleaseStringUTFChars(YuomStr, Yuom);
    env->ReleaseStringUTFChars(ZpropertyStr, Zproperty);
    env->ReleaseStringUTFChars(ZuomStr, Zuom);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_RescueCoordinateSystem");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Dimensions1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->Dimensions();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_Dimensions");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_PublicEPSG1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->PublicEPSG();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_PublicEPSG");
    return (jint) 0; // Dummy return prevents compiler warning.
  }

}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_SetPublicEPSG2
  (JNIEnv *env, jobject obj, jlong nativeNdx, jint epsgIn)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    myObject->SetPublicEPSG(epsgIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_SetPublicEPSG");
  }
}


extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Axis2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint zeroBasedOrdinal)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RescueCoordinateSystemAxis * myReturn = myObject->Axis(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_Axis");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_AxisIdentifiedBy3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RescueCoordinateSystemAxis * myReturn = myObject->AxisIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_AxisIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Vertex4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RescueVertex * myReturn = myObject->Vertex();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_Vertex");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_SetVertex5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newVertexNdx)
{
  try
  {
    RescueVertex * newVertex = (RescueVertex *) newVertexNdx;
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    myObject->SetVertex((RescueVertex *) newVertex);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_SetVertex");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Name6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RCHString * myReturn = myObject->Name();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_Name");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_OrientationIs7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RescueCoordinateSystem::Orientation myReturn = myObject->OrientationIs();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_OrientationIs");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_InSys8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->InSys();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_InSys");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_InZone9
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->InZone();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_InZone");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_InUnit10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->InUnit();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_InUnit");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_InSpheroid11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->InSpheroid();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_InSpheroid");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_SemiMajorAxis12
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->SemiMajorAxis();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_SemiMajorAxis");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_EccentricityOrSemiMinorAxis13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->EccentricityOrSemiMinorAxis();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_EccentricityOrSemiMinorAxis");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_StandardLat14
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->StandardLat();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_StandardLat");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_SecondLat15
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->SecondLat();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_SecondLat");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_CentralLong16
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->CentralLong();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_CentralLong");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_LatOrigin17
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->LatOrigin();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_LatOrigin");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_FalseEasting18
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->FalseEasting();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_FalseEasting");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jdouble JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_FalseNorthing19
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    double myReturn = myObject->FalseNorthing();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_FalseNorthing");
    return (jdouble) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_NdxOf20
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong axisInNdx)
{
  try
  {
    RescueCoordinateSystemAxis * axisIn = (RescueCoordinateSystemAxis *) axisInNdx;
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    int myReturn = myObject->NdxOf((RescueCoordinateSystemAxis *) axisIn);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_NdxOf");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Context21
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RescueContext * myReturn = myObject->Context();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_Context");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_IsOfType22
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueCoordinateSystem *myObject = (RescueCoordinateSystem *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueCoordinateSystem_Delete_1RescueCoordinateSystem
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueCoordinateSystem *myObj = (RescueCoordinateSystem *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystem_~RescueCoordinateSystem");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueCoordinateSystemAxis_ParentCoordinateSystem0
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystemAxis *myObject = (RescueCoordinateSystemAxis *) nativeNdx;
    RescueCoordinateSystem * myReturn = myObject->ParentCoordinateSystem();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystemAxis_ParentCoordinateSystem");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueCoordinateSystemAxis_Delete_1RescueCoordinateSystemAxis
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueCoordinateSystemAxis *myObj = (RescueCoordinateSystemAxis *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystemAxis_~RescueCoordinateSystemAxis");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueCoordinateSystemAxis_AxisName2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystemAxis *myObject = (RescueCoordinateSystemAxis *) nativeNdx;
    RCHString * myReturn = myObject->AxisName();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystemAxis_AxisName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueCoordinateSystemAxis_IsOfType3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueCoordinateSystemAxis *myObject = (RescueCoordinateSystemAxis *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystemAxis_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueCoordinateSystemAxis_UnitOfMeasure4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueCoordinateSystemAxis *myObject = (RescueCoordinateSystemAxis *) nativeNdx;
    RCHString * myReturn = myObject->UnitOfMeasure();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueCoordinateSystemAxis_UnitOfMeasure");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_Create_1RescueEdgeSet0  (JNIEnv *env, jobject obj
  ,jlong ownerInNdx)
{
  try
  {
    RescueWireframeOwner * ownerIn = (RescueWireframeOwner *) ownerInNdx;
    RescueEdgeSet *myReturn = new RescueEdgeSet((RescueWireframeOwner *) ownerIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_RescueEdgeSet");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEdgeSet_Delete_1RescueEdgeSet
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueEdgeSet *myObj = (RescueEdgeSet *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_~RescueEdgeSet");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEdgeSet_AddBoundaryLoop2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingLoopNdx)
{
  try
  {
    RescueTrimLoop * existingLoop = (RescueTrimLoop *) existingLoopNdx;
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    myObject->AddBoundaryLoop((RescueTrimLoop *) existingLoop);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_AddBoundaryLoop");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEdgeSet_DropBoundaryLoop3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingLoopNdx)
{
  try
  {
    RescueTrimLoop * existingLoop = (RescueTrimLoop *) existingLoopNdx;
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    myObject->DropBoundaryLoop((RescueTrimLoop *) existingLoop);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_DropBoundaryLoop");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_NthBoundaryLoop4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->NthBoundaryLoop(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_NthBoundaryLoop");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEdgeSet_AddInteriorLoop5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingLoopNdx)
{
  try
  {
    RescueTrimLoop * existingLoop = (RescueTrimLoop *) existingLoopNdx;
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    myObject->AddInteriorLoop((RescueTrimLoop *) existingLoop);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_AddInteriorLoop");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEdgeSet_DropInteriorLoop6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingLoopNdx)
{
  try
  {
    RescueTrimLoop * existingLoop = (RescueTrimLoop *) existingLoopNdx;
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    myObject->DropInteriorLoop((RescueTrimLoop *) existingLoop);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_DropInteriorLoop");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_NthInteriorLoop7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->NthInteriorLoop(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_NthInteriorLoop");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_TrimLoopIdentifiedBy8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    RescueTrimLoop * myReturn = myObject->TrimLoopIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_TrimLoopIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_RescueBusinessOwner9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong modelNdx)
{
  try
  {
    RescueModel * model = (RescueModel *) modelNdx;
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    RescueObject * myReturn = myObject->RescueBusinessOwner((RescueModel *) model);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_RescueBusinessOwner");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_CountOfBoundaryLoop10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    int myReturn = myObject->CountOfBoundaryLoop64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_CountOfBoundaryLoop");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_CountOfInteriorLoop11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    int myReturn = myObject->CountOfInteriorLoop64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_CountOfInteriorLoop");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSet_Owner12
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    RescueWireframe * myReturn = myObject->Owner();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_Owner");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueEdgeSet_IsOfType13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueEdgeSet *myObject = (RescueEdgeSet *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSet_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEdgeSetStub_Delete_1RescueEdgeSetStub
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueEdgeSetStub *myObj = (RescueEdgeSetStub *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSetStub_~RescueEdgeSetStub");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueEdgeSetStub_Equals1
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong otherNdx)
{
  try
  {
    RescueEdgeSetStub * other = (RescueEdgeSetStub *) otherNdx;
    RescueEdgeSetStub *myObject = (RescueEdgeSetStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Equals((RescueEdgeSetStub *) other);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSetStub_Equals");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueEdgeSetStub_Equals2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong otherNdx)
{
  try
  {
    RescueEdgeSet * other = (RescueEdgeSet *) otherNdx;
    RescueEdgeSetStub *myObject = (RescueEdgeSetStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Equals((RescueEdgeSet *) other);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSetStub_Equals");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEdgeSetStub_EdgeSet3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong modelNdx
  ,jboolean loadIfNeededBool)
{
  try
  {
    RescueModel * model = (RescueModel *) modelNdx;
    RESCUEBOOL loadIfNeeded = ((loadIfNeededBool == JNI_TRUE) ? TRUE : FALSE);
    RescueEdgeSetStub *myObject = (RescueEdgeSetStub *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->EdgeSet((RescueModel *) model,
                (RESCUEBOOL) loadIfNeeded);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSetStub_EdgeSet");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueEdgeSetStub_IsOfType4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueEdgeSetStub *myObject = (RescueEdgeSetStub *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEdgeSetStub_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueEventDescr_Type0
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    RescueEventDescr::EventType myReturn = myObject->Type();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_Type");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueEventDescr_EventDescrName1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    RCHString * myReturn = myObject->EventDescrName();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_EventDescrName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEventDescr_SetEventDescrName2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newEventDescrNameStr)
{
  try
  {
    jboolean newEventDescrNameBool;
    const char *newEventDescrName = env->GetStringUTFChars(newEventDescrNameStr, &newEventDescrNameBool);
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    myObject->SetEventDescrName((char *) newEventDescrName);
    env->ReleaseStringUTFChars(newEventDescrNameStr, newEventDescrName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_SetEventDescrName");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEventDescr_Delete_1RescueEventDescr
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueEventDescr *myObj = (RescueEventDescr *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_~RescueEventDescr");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEventDescr_AddSection4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSectionNdx)
{
  try
  {
    RescueSection * existingSection = (RescueSection *) existingSectionNdx;
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    myObject->AddSection((RescueSection *) existingSection);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_AddSection");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueEventDescr_DropSection5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSectionNdx)
{
  try
  {
    RescueSection * existingSection = (RescueSection *) existingSectionNdx;
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    myObject->DropSection((RescueSection *) existingSection);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_DropSection");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEventDescr_SectionCount6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    int myReturn = myObject->SectionCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_SectionCount");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueEventDescr_NthSection7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    RescueSection * myReturn = myObject->NthSection(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_NthSection");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueEventDescr_FullEvents8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong modelNdx)
{
  try
  {
    RescueModel * model = (RescueModel *) modelNdx;
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    RESCUEBOOL myReturn = myObject->FullEvents((RescueModel *) model);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_FullEvents");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueEventDescr_IsOfType9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueEventDescr *myObject = (RescueEventDescr *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueEventDescr_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_Delete_1RescueFaultIntersection
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueFaultIntersection *myObj = (RescueFaultIntersection *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_~RescueFaultIntersection");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_Create_1RescueFaultIntersection1  (JNIEnv *env, jobject obj
  ,jlong modelNdx
  ,jlong majorSectionNdx
  ,jlong minorSectionNdx)
{
  try
  {
    RescueModel * model = (RescueModel *) modelNdx;
    RescueSection * majorSection = (RescueSection *) majorSectionNdx;
    RescueSection * minorSection = (RescueSection *) minorSectionNdx;
    RescueFaultIntersection *myReturn = new RescueFaultIntersection((RescueModel *) model,
                (RescueSection *) majorSection,
                (RescueSection *) minorSection);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_RescueFaultIntersection");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_ParentModel2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_MajorSection3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    RescueSection * myReturn = myObject->MajorSection();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_MajorSection");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_MinorSection4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    RescueSection * myReturn = myObject->MinorSection();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_MinorSection");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_SetMajorSection5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newMajorSectionNdx)
{
  try
  {
    RescueSection * newMajorSection = (RescueSection *) newMajorSectionNdx;
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    myObject->SetMajorSection((RescueSection *) newMajorSection);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_SetMajorSection");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_SetMinorSection6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newMinorSectionNdx)
{
  try
  {
    RescueSection * newMinorSection = (RescueSection *) newMinorSectionNdx;
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    myObject->SetMinorSection((RescueSection *) newMinorSection);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_SetMinorSection");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_EdgesObj7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->EdgesObj();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_EdgesObj");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_Edges8
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->Edges();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_Edges");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueFaultIntersection_IsOfType9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueFaultIntersection *myObject = (RescueFaultIntersection *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueFaultIntersection_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_Create_1RescueGeobody0  (JNIEnv *env, jobject obj
  ,jstring newBodyNameStr
  ,jlong newParentModelNdx)
{
  try
  {
    jboolean newBodyNameBool;
    const char *newBodyName = env->GetStringUTFChars(newBodyNameStr, &newBodyNameBool);
    RescueModel * newParentModel = (RescueModel *) newParentModelNdx;
    RescueGeobody *myReturn = new RescueGeobody((char *) newBodyName,
                (RescueModel *) newParentModel);
    env->ReleaseStringUTFChars(newBodyNameStr, newBodyName);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_RescueGeobody");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobody_Delete_1RescueGeobody
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueGeobody *myObj = (RescueGeobody *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_~RescueGeobody");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueGeobody_BodyName2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RCHString * myReturn = myObject->BodyName();
    return env->NewStringUTF(myReturn->String());
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_BodyName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobody_SetBodyName3
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newBodyNameStr)
{
  try
  {
    jboolean newBodyNameBool;
    const char *newBodyName = env->GetStringUTFChars(newBodyNameStr, &newBodyNameBool);
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    myObject->SetBodyName((char *) newBodyName);
    env->ReleaseStringUTFChars(newBodyNameStr, newBodyName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_SetBodyName");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_ParentModel4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_PropertyGroupCount5
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    int myReturn = myObject->PropertyGroupCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_PropertyGroupCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_NthRescuePropertyGroup6
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->NthRescuePropertyGroup(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_NthRescuePropertyGroup");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_PropertyGroupIdentifiedBy7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->PropertyGroupIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_PropertyGroupIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobody_DropRescuePropertyGroup8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong unitToDropNdx)
{
  try
  {
    RescuePropertyGroup * unitToDrop = (RescuePropertyGroup *) unitToDropNdx;
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropRescuePropertyGroup((RescuePropertyGroup *) unitToDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_DropRescuePropertyGroup");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobody_DeleteBodyPart9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingBodyPartNdx)
{
  try
  {
    RescueGeobodyPart * existingBodyPart = (RescueGeobodyPart *) existingBodyPartNdx;
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DeleteBodyPart((RescueGeobodyPart *) existingBodyPart);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_DeleteBodyPart");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeobody_GeobodyPartCount10
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    int myReturn = myObject->GeobodyPartCount();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_GeobodyPartCount");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_NthBodyPart11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint zeroBasedOrdinal)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->NthBodyPart((int) zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_NthBodyPart");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobody_IsNamed12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring possibleNameStr)
{
  try
  {
    jboolean possibleNameBool;
    const char *possibleName = env->GetStringUTFChars(possibleNameStr, &possibleNameBool);
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsNamed((char *) possibleName);
    env->ReleaseStringUTFChars(possibleNameStr, possibleName);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_IsNamed");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_GeometryIdentifiedBy13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_PropertyIdentifiedBy14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_PropertyIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_GeobodyVolumeIdentifiedBy15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->GeobodyVolumeIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_GeobodyVolumeIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobody_GeobodySurfaceIdentifiedBy16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->GeobodySurfaceIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_GeobodySurfaceIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobody_AnyFileTruncated17
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobody_IsOfType18
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueGeobody *myObject = (RescueGeobody *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobody_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Create_1RescueGeobodyPart0  (JNIEnv *env, jobject obj
  ,jlong parentBodyNdx)
{
  try
  {
    RescueGeobody * parentBody = (RescueGeobody *) parentBodyNdx;
    RescueGeobodyPart *myReturn = new RescueGeobodyPart((RescueGeobody *) parentBody);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_RescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Create_1RescueGeobodyPart1  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBodyNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jfloat k_origin
  ,jfloat k_step
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueGeobody * parentBody = (RescueGeobody *) parentBodyNdx;
    RescueGeobodyPart *myReturn = new RescueGeobodyPart((RescueCoordinateSystem::Orientation) orientation,
                (RescueGeobody *) parentBody,
                (float) i_origin,
                (float) i_step,
                i_lowbound,
                i_count,
                (float) j_origin,
                (float) j_step,
                j_lowbound,
                j_count,
                (float) k_origin,
                (float) k_step,
                k_lowbound,
                k_count,
                (float) missingValue);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_RescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Create_1RescueGeobodyPart2  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBodyNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueGeobody * parentBody = (RescueGeobody *) parentBodyNdx;
    RescueGeobodyPart *myReturn = new RescueGeobodyPart((RescueCoordinateSystem::Orientation) orientation,
                (RescueGeobody *) parentBody,
                (float) i_origin,
                (float) i_step,
                i_lowbound,
                i_count,
                (float) j_origin,
                (float) j_step,
                j_lowbound,
                j_count,
                k_lowbound,
                k_count,
                (float) missingValue);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_RescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Create_1RescueGeobodyPart3  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBodyNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue
  ,jlong topSurfaceInNdx
  ,jfloat topOffsetIn
  ,jlong bottomSurfaceInNdx
  ,jfloat bottomOffsetIn)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueGeobody * parentBody = (RescueGeobody *) parentBodyNdx;
    RescueReferenceSurface * topSurfaceIn = (RescueReferenceSurface *) topSurfaceInNdx;
    RescueReferenceSurface * bottomSurfaceIn = (RescueReferenceSurface *) bottomSurfaceInNdx;
    RescueGeobodyPart *myReturn = new RescueGeobodyPart((RescueCoordinateSystem::Orientation) orientation,
                (RescueGeobody *) parentBody,
                (float) i_origin,
                (float) i_step,
                i_lowbound,
                i_count,
                (float) j_origin,
                (float) j_step,
                j_lowbound,
                j_count,
                k_lowbound,
                k_count,
                (float) missingValue,
                (RescueReferenceSurface *) topSurfaceIn,
                (float) topOffsetIn,
                (RescueReferenceSurface *) bottomSurfaceIn,
                (float) bottomOffsetIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_RescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Create_1RescueGeobodyPart4  (JNIEnv *env, jobject obj
  ,jint orientationInt
  ,jlong parentBodyNdx
  ,jfloat i_origin
  ,jfloat i_step
  ,jlong i_lowbound
  ,jlong i_count
  ,jfloat j_origin
  ,jfloat j_step
  ,jlong j_lowbound
  ,jlong j_count
  ,jlong k_lowbound
  ,jlong k_count
  ,jfloat missingValue
  ,jlong referenceSurfaceInNdx
  ,jfloat referenceOffsetIn
  ,jfloat thicknessIn
  ,jint onOffLapInInt)
{
  try
  {
    RescueCoordinateSystem::Orientation orientation = (RescueCoordinateSystem::Orientation) orientationInt;
    RescueGeobody * parentBody = (RescueGeobody *) parentBodyNdx;
    RescueReferenceSurface * referenceSurfaceIn = (RescueReferenceSurface *) referenceSurfaceInNdx;
    RescueGeometry::RescueLapType onOffLapIn = (RescueGeometry::RescueLapType) onOffLapInInt;
    RescueGeobodyPart *myReturn = new RescueGeobodyPart((RescueCoordinateSystem::Orientation) orientation,
                (RescueGeobody *) parentBody,
                (float) i_origin,
                (float) i_step,
                i_lowbound,
                i_count,
                (float) j_origin,
                (float) j_step,
                j_lowbound,
                j_count,
                k_lowbound,
                k_count,
                (float) missingValue,
                (RescueReferenceSurface *) referenceSurfaceIn,
                (float) referenceOffsetIn,
                (float) thicknessIn,
                (RescueGeometry::RescueLapType) onOffLapIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_RescueGeobodyPart");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Delete_1RescueGeobodyPart
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueGeobodyPart *myObj = (RescueGeobodyPart *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_~RescueGeobodyPart");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Body6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeobody * myReturn = myObject->Body();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_Body");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_AddGeobodyVolume7
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->AddGeobodyVolume();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_AddGeobodyVolume");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_DropGeobodyVolume8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingVolumeNdx)
{
  try
  {
    RescueGeobodyVolume * existingVolume = (RescueGeobodyVolume *) existingVolumeNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    myObject->DropGeobodyVolume((RescueGeobodyVolume *) existingVolume);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_DropGeobodyVolume");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_NthGeobodyVolume9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->NthGeobodyVolume(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_NthGeobodyVolume");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_AddPropertyGroup10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingPropertyGroupNdx)
{
  try
  {
    RescuePropertyGroup * existingPropertyGroup = (RescuePropertyGroup *) existingPropertyGroupNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    myObject->AddPropertyGroup((RescuePropertyGroup *) existingPropertyGroup);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_AddPropertyGroup");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_DeletePropertyGroup11
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingPropertyGroupNdx)
{
  try
  {
    RescuePropertyGroup * existingPropertyGroup = (RescuePropertyGroup *) existingPropertyGroupNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DeletePropertyGroup((RescuePropertyGroup *) existingPropertyGroup);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_DeletePropertyGroup");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_NthPropertyGroup12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescuePropertyGroup * myReturn = myObject->NthPropertyGroup(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_NthPropertyGroup");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_AddBlockUnit13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingBlockUnitNdx)
{
  try
  {
    RescueBlockUnit * existingBlockUnit = (RescueBlockUnit *) existingBlockUnitNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    myObject->AddBlockUnit((RescueBlockUnit *) existingBlockUnit);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_AddBlockUnit");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_DropBlockUnit14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingBlockUnitNdx)
{
  try
  {
    RescueBlockUnit * existingBlockUnit = (RescueBlockUnit *) existingBlockUnitNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropBlockUnit((RescueBlockUnit *) existingBlockUnit);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_DropBlockUnit");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_BlockUnitCount15
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->BlockUnitCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_BlockUnitCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_NthBlockUnit16
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->NthBlockUnit(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_NthBlockUnit");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_GridGeometry17
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeometry * myReturn = myObject->GridGeometry(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_GridGeometry");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_GeometryIdentifiedBy18
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeometry * myReturn = myObject->GeometryIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_GeometryIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_GeometryCount19
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->GeometryCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_GeometryCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_AddGeometry20
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newGeometryNdx)
{
  try
  {
    RescueGeometry * newGeometry = (RescueGeometry *) newGeometryNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    myObject->AddGeometry((RescueGeometry *) newGeometry);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_AddGeometry");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_DropGeometry21
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong toDropNdx)
{
  try
  {
    RescueGeometry * toDrop = (RescueGeometry *) toDropNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    myObject->DropGeometry((RescueGeometry *) toDrop);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_DropGeometry");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_PropertyCount22
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->PropertyCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_PropertyCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_CountOfPropertyGroup23
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->CountOfPropertyGroup64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_CountOfPropertyGroup");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_CountOfVolumes24
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    jlong myReturn = myObject->CountOfVolumes64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_CountOfVolumes");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_SetColor26
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong colorInNdx)
{
  try
  {
    RescueColor * colorIn = (RescueColor *) colorInNdx;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    myObject->SetColor((RescueColor *) colorIn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_SetColor");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_Color27
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueColor * myReturn = myObject->Color();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_Color");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_PropertyIdentifiedBy28
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyIdentifiedBy(id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_PropertyIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_GeobodyVolumeIdentifiedBy29
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeobodyVolume * myReturn = myObject->GeobodyVolumeIdentifiedBy(id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_GeobodyVolumeIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_GeobodySurfaceIdentifiedBy30
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->GeobodySurfaceIdentifiedBy(id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_GeobodySurfaceIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_AnyFileTruncated31
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyPart_IsOfType32
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueGeobodyPart *myObject = (RescueGeobodyPart *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyPart_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodySurface_Delete_1RescueGeobodySurface
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueGeobodySurface *myObj = (RescueGeobodySurface *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodySurface_~RescueGeobodySurface");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodySurface_EdgesObj1
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodySurface *myObject = (RescueGeobodySurface *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->EdgesObj();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodySurface_EdgesObj");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodySurface_Edges2
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodySurface *myObject = (RescueGeobodySurface *) nativeNdx;
    RescueEdgeSet * myReturn = myObject->Edges();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodySurface_Edges");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodySurface_Surface3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodySurface *myObject = (RescueGeobodySurface *) nativeNdx;
    RescueSurface * myReturn = myObject->Surface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodySurface_Surface");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeobodySurface_SurfaceRole4
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodySurface *myObject = (RescueGeobodySurface *) nativeNdx;
    RescueGeobodySurface::Role myReturn = myObject->SurfaceRole();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodySurface_SurfaceRole");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_AddGeobodySurface0
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSurfaceNdx
  ,jint roleInt)
{
  try
  {
    RescueSurface * existingSurface = (RescueSurface *) existingSurfaceNdx;
    RescueGeobodySurface::Role role = (RescueGeobodySurface::Role) roleInt;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    myObject->AddGeobodySurface((RescueSurface *) existingSurface,
                (RescueGeobodySurface::Role) role);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_AddGeobodySurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_DropGeobodySurface1
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSurfaceNdx)
{
  try
  {
    RescueSurface * existingSurface = (RescueSurface *) existingSurfaceNdx;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    myObject->DropGeobodySurface((RescueSurface *) existingSurface);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_DropGeobodySurface");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_DropGeobodySurface2
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingSurfaceNdx)
{
  try
  {
    RescueGeobodySurface * existingSurface = (RescueGeobodySurface *) existingSurfaceNdx;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    myObject->DropGeobodySurface((RescueGeobodySurface *) existingSurface);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_DropGeobodySurface");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_SurfaceCount3
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    jlong myReturn = myObject->SurfaceCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_SurfaceCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_NthGeobodySurface4
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->NthGeobodySurface(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_NthGeobodySurface");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_GeobodySurfaceIdentifiedBy5
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong id)
{
  try
  {
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RescueGeobodySurface * myReturn = myObject->GeobodySurfaceIdentifiedBy(id);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_GeobodySurfaceIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_ParentPart6
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->ParentPart();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_ParentPart");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_AddKLayerEdge7
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingEdgeSetNdx)
{
  try
  {
    RescueEdgeSet * existingEdgeSet = (RescueEdgeSet *) existingEdgeSetNdx;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    myObject->AddKLayerEdge((RescueEdgeSet *) existingEdgeSet);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_AddKLayerEdge");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_DeleteKLayerEdge8
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingEdgeSetNdx)
{
  try
  {
    RescueEdgeSet * existingEdgeSet = (RescueEdgeSet *) existingEdgeSetNdx;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DeleteKLayerEdge((RescueEdgeSet *) existingEdgeSet);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_DeleteKLayerEdge");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_DeleteKLayerEdge9
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong existingEdgeSetNdx)
{
  try
  {
    RescueEdgeSetStub * existingEdgeSet = (RescueEdgeSetStub *) existingEdgeSetNdx;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DeleteKLayerEdge((RescueEdgeSetStub *) existingEdgeSet);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_DeleteKLayerEdge");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_NthKLayerEdge10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RescueEdgeSetStub * myReturn = myObject->NthKLayerEdge(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_NthKLayerEdge");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_KLayerEdgeCount11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    jlong myReturn = myObject->KLayerEdgeCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_KLayerEdgeCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_Delete_1RescueGeobodyVolume
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueGeobodyVolume *myObj = (RescueGeobodyVolume *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_~RescueGeobodyVolume");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeobodyVolume_IsOfType13
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueGeobodyVolume *myObject = (RescueGeobodyVolume *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeobodyVolume_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry0  (JNIEnv *env, jobject obj
  ,jlong parentModelInNdx
  ,jlong existingGridNdx
  ,jfloat missingValueIn)
{
  try
  {
    RescueModel * parentModelIn = (RescueModel *) parentModelInNdx;
    RescueGrid * existingGrid = (RescueGrid *) existingGridNdx;
    RescueGeometry *myReturn = new RescueGeometry((RescueModel *) parentModelIn,
                (RescueGrid *) existingGrid,
                (float) missingValueIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry1  (JNIEnv *env, jobject obj
  ,jlong parentModelInNdx
  ,jlong existingGridNdx
  ,jfloat missingValueIn
  ,jlong topSurfaceInNdx
  ,jfloat topOffsetIn
  ,jlong bottomSurfaceInNdx
  ,jfloat bottomOffsetIn)
{
  try
  {
    RescueModel * parentModelIn = (RescueModel *) parentModelInNdx;
    RescueGrid * existingGrid = (RescueGrid *) existingGridNdx;
    RescueReferenceSurface * topSurfaceIn = (RescueReferenceSurface *) topSurfaceInNdx;
    RescueReferenceSurface * bottomSurfaceIn = (RescueReferenceSurface *) bottomSurfaceInNdx;
    RescueGeometry *myReturn = new RescueGeometry((RescueModel *) parentModelIn,
                (RescueGrid *) existingGrid,
                (float) missingValueIn,
                (RescueReferenceSurface *) topSurfaceIn,
                (float) topOffsetIn,
                (RescueReferenceSurface *) bottomSurfaceIn,
                (float) bottomOffsetIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry2  (JNIEnv *env, jobject obj
  ,jlong parentModelInNdx
  ,jlong existingGridNdx
  ,jfloat missingValueIn
  ,jlong referenceSurfaceInNdx
  ,jfloat referenceOffsetIn
  ,jfloat thicknessIn
  ,jint onOffLapInInt)
{
  try
  {
    RescueModel * parentModelIn = (RescueModel *) parentModelInNdx;
    RescueGrid * existingGrid = (RescueGrid *) existingGridNdx;
    RescueReferenceSurface * referenceSurfaceIn = (RescueReferenceSurface *) referenceSurfaceInNdx;
    RescueGeometry::RescueLapType onOffLapIn = (RescueGeometry::RescueLapType) onOffLapInInt;
    RescueGeometry *myReturn = new RescueGeometry((RescueModel *) parentModelIn,
                (RescueGrid *) existingGrid,
                (float) missingValueIn,
                (RescueReferenceSurface *) referenceSurfaceIn,
                (float) referenceOffsetIn,
                (float) thicknessIn,
                (RescueGeometry::RescueLapType) onOffLapIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry3  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID
  ,jlong parentILowBound
  ,jlong parentICount
  ,jlong refinedILowBound
  ,jlong refinedICount
  ,jlong parentJLowBound
  ,jlong parentJCount
  ,jlong refinedJLowBound
  ,jlong refinedJCount
  ,jlong parentKLowBound
  ,jlong parentKCount
  ,jlong refinedKLowBound
  ,jlong refinedKCount)
{
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                referenceID,
                (RESCUEINT64) parentILowBound,
                (RESCUEINT64) parentICount,
                (RESCUEINT64) refinedILowBound,
                (RESCUEINT64) refinedICount,
                (RESCUEINT64) parentJLowBound,
                (RESCUEINT64) parentJCount,
                (RESCUEINT64) refinedJLowBound,
                (RESCUEINT64) refinedJCount,
                (RESCUEINT64) parentKLowBound,
                (RESCUEINT64) parentKCount,
                (RESCUEINT64) refinedKLowBound,
                (RESCUEINT64) refinedKCount);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry4  
  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID
  ,jlong parentILowBound
  ,jlong parentICount
  ,jlongArray refinedICountArrayArray
  ,jlong parentJLowBound
  ,jlong parentJCount
  ,jlongArray refinedJCountArrayArray
  ,jlong parentKLowBound
  ,jlong parentKCount
  ,jlongArray refinedKCountArrayArray)
{
  jlong *refinedICountArray = 0;
  jlong *refinedJCountArray = 0;
  jlong *refinedKCountArray = 0;
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    if (refinedICountArrayArray != 0)
    {
      refinedICountArray = (jlong *) env->GetPrimitiveArrayCritical(refinedICountArrayArray, 0);
    }
    if (refinedJCountArrayArray != 0)
    {
      refinedJCountArray = (jlong *) env->GetPrimitiveArrayCritical(refinedJCountArrayArray, 0);
    }
    if (refinedKCountArrayArray != 0)
    {
      refinedKCountArray = (jlong *) env->GetPrimitiveArrayCritical(refinedKCountArrayArray, 0);
    }
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                (RESCUEINT64) referenceID,
                (RESCUEINT64) parentILowBound,
                (RESCUEINT64) parentICount,
                (RESCUEINT64 *) refinedICountArray,
                (RESCUEINT64) parentJLowBound,
                (RESCUEINT64) parentJCount,
                (RESCUEINT64 *) refinedJCountArray,
                (RESCUEINT64) parentKLowBound,
                (RESCUEINT64) parentKCount,
                (RESCUEINT64 *) refinedKCountArray);
/*
	jlong and RESCUEINGT64 are both signed 64 bit 2s complement integers.
*/
    if (refinedICountArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(refinedICountArrayArray, (jlong *) refinedICountArray, 0);
    }
    if (refinedJCountArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(refinedJCountArrayArray, (jlong *) refinedJCountArray, 0);
    }
    if (refinedKCountArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(refinedKCountArrayArray, (jlong *) refinedKCountArray, 0);
    }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (refinedICountArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(refinedICountArrayArray, (jint *) refinedICountArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (refinedJCountArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(refinedJCountArrayArray, (jint *) refinedJCountArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (refinedKCountArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(refinedKCountArrayArray, (jint *) refinedKCountArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry5  
  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID
  ,jlong xLowBoundin
  ,jdoubleArray xWeightsArray
  ,jlong xWeightLength
  ,jlong yLowBoundin
  ,jdoubleArray yWeightsArray
  ,jlong yWeightLength
  ,jlong zLowBoundin
  ,jdoubleArray zWeightsArray
  ,jlong zWeightLength)
{
  jdouble *xWeights = 0;
  jdouble *yWeights = 0;
  jdouble *zWeights = 0;
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    if (xWeightsArray != 0)
    {
      xWeights = (jdouble *) env->GetPrimitiveArrayCritical(xWeightsArray, 0);
    }
    if (yWeightsArray != 0)
    {
      yWeights = (jdouble *) env->GetPrimitiveArrayCritical(yWeightsArray, 0);
    }
    if (zWeightsArray != 0)
    {
      zWeights = (jdouble *) env->GetPrimitiveArrayCritical(zWeightsArray, 0);
    }
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                (RESCUEINT64) referenceID,
                (RESCUEINT64) xLowBoundin,
                (RESCUEDOUBLE *) xWeights,
                (RESCUEINT64) xWeightLength,
                (RESCUEINT64) yLowBoundin,
                (RESCUEDOUBLE *) yWeights,
                (RESCUEINT64) yWeightLength,
                (RESCUEINT64) zLowBoundin,
                (RESCUEDOUBLE *) zWeights,
                (RESCUEINT64) zWeightLength);
    if (xWeightsArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(xWeightsArray, (jdouble *) xWeights, 0);
    }
    if (yWeightsArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(yWeightsArray, (jdouble *) yWeights, 0);
    }
    if (zWeightsArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(zWeightsArray, (jdouble *) zWeights, 0);
    }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (xWeights != 0)
      {
        env->ReleasePrimitiveArrayCritical(xWeightsArray, (jdouble *) xWeights, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (yWeights != 0)
      {
        env->ReleasePrimitiveArrayCritical(yWeightsArray, (jdouble *) yWeights, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (zWeights != 0)
      {
        env->ReleasePrimitiveArrayCritical(zWeightsArray, (jdouble *) zWeights, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry6  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID
  ,jlong parentILowBound
  ,jlong parentICount
  ,jlongArray xWeightLengthArray
  ,jobjectArray xWeightsArray
  ,jlong parentJLowBound
  ,jlong parentJCount
  ,jlongArray yWeightLengthArray
  ,jobjectArray yWeightsArray
  ,jlong parentKLowBound
  ,jlong parentKCount
  ,jlongArray zWeightLengthArray
  ,jobjectArray zWeightsArray)
{
  jlong *xWeightLength = 0;
  jdouble **xWeights = 0;
  jlong *yWeightLength = 0;
  jdouble **yWeights = 0;
  jlong *zWeightLength = 0;
  jdouble **zWeights = 0;
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    if (xWeightLengthArray != 0)
    {
      xWeightLength = (jlong *) env->GetPrimitiveArrayCritical(xWeightLengthArray, 0);
    }
    if (xWeightsArray != 0)
    {
      int xWeightsDim1 = env->GetArrayLength(xWeightsArray);
      xWeights = new jdouble*[xWeightsDim1];
      int loop;
      for (loop = 0; loop < xWeightsDim1; loop++)
      {
        jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(xWeightsArray, loop);
        xWeights[loop] = (jdouble *) env->GetPrimitiveArrayCritical(dimArray, 0);
      }
    }
    if (yWeightLengthArray != 0)
    {
      yWeightLength = (jlong *) env->GetPrimitiveArrayCritical(yWeightLengthArray, 0);
    }
    if (yWeightsArray != 0)
    {
      int yWeightsDim1 = env->GetArrayLength(yWeightsArray);
      yWeights = new jdouble*[yWeightsDim1];
      int loop;
      for (loop = 0; loop < yWeightsDim1; loop++)
      {
        jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(yWeightsArray, loop);
        yWeights[loop] = (jdouble *) env->GetPrimitiveArrayCritical(dimArray, 0);
      }
    }
    if (zWeightLengthArray != 0)
    {
      zWeightLength = (jlong *) env->GetPrimitiveArrayCritical(zWeightLengthArray, 0);
    }
    if (zWeightsArray != 0)
    {
      int zWeightsDim1 = env->GetArrayLength(zWeightsArray);
      zWeights = new jdouble*[zWeightsDim1];
      int loop;
      for (loop = 0; loop < zWeightsDim1; loop++)
      {
        jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(zWeightsArray, loop);
        zWeights[loop] = (jdouble *) env->GetPrimitiveArrayCritical(dimArray, 0);
      }
    }
    RescueGeometry *myReturn = new RescueGeometry(
                (RescueGeometry *) parentGrid,
                (RESCUEINT64) referenceID,
                (RESCUEINT64) parentILowBound,
                (RESCUEINT64) parentICount,
                (RESCUEINT64 *) xWeightLength,
                (RESCUEDOUBLE **) xWeights,
                (RESCUEINT64) parentJLowBound,
                (RESCUEINT64) parentJCount,
                (RESCUEINT64 *) yWeightLength,
                (RESCUEDOUBLE **) yWeights,
                (RESCUEINT64) parentKLowBound,
                (RESCUEINT64) parentKCount,
                (RESCUEINT64 *) zWeightLength,
                (RESCUEDOUBLE **) zWeights);
    if (xWeightLengthArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(xWeightLengthArray, (jlong *) xWeightLength, 0);
    }
    if (xWeightsArray != 0)
    {
      int xWeightsDim1 = env->GetArrayLength(xWeightsArray);
      int loop;
      for (loop = 0; loop < xWeightsDim1; loop++)
      {
        jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(xWeightsArray, loop);
        env->ReleasePrimitiveArrayCritical(dimArray, (jdouble *) xWeights[loop], 0);
      }
      delete [] xWeights;
   }
    if (yWeightLengthArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(yWeightLengthArray, (jlong *) yWeightLength, 0);
    }
    if (yWeightsArray != 0)
    {
      int yWeightsDim1 = env->GetArrayLength(yWeightsArray);
      int loop;
      for (loop = 0; loop < yWeightsDim1; loop++)
      {
        jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(yWeightsArray, loop);
        env->ReleasePrimitiveArrayCritical(dimArray, (jdouble *) yWeights[loop], 0);
      }
      delete [] yWeights;
   }
    if (zWeightLengthArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(zWeightLengthArray, (jlong *) zWeightLength, 0);
    }
    if (zWeightsArray != 0)
    {
      int zWeightsDim1 = env->GetArrayLength(zWeightsArray);
      int loop;
      for (loop = 0; loop < zWeightsDim1; loop++)
      {
        jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(zWeightsArray, loop);
        env->ReleasePrimitiveArrayCritical(dimArray, (jdouble *) zWeights[loop], 0);
      }
      delete [] zWeights;
   }
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    try
    {
      if (xWeightLength != 0)
      {
        env->ReleasePrimitiveArrayCritical(xWeightLengthArray, (jint *) xWeightLength, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
  if (xWeights != 0)
  {
    int xWeightsDim1 = env->GetArrayLength(xWeightsArray);
    int loop;
    for (loop = 0; loop < xWeightsDim1; loop++)
    {
      jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(xWeightsArray, loop);
      env->ReleasePrimitiveArrayCritical(dimArray, (jdouble *) xWeights[loop], 0);
    }
    delete [] xWeights;
 }
    try
    {
      if (yWeightLength != 0)
      {
        env->ReleasePrimitiveArrayCritical(yWeightLengthArray, (jint *) yWeightLength, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
  if (yWeights != 0)
  {
    int yWeightsDim1 = env->GetArrayLength(yWeightsArray);
    int loop;
    for (loop = 0; loop < yWeightsDim1; loop++)
    {
      jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(yWeightsArray, loop);
      env->ReleasePrimitiveArrayCritical(dimArray, (jdouble *) yWeights[loop], 0);
    }
    delete [] yWeights;
 }
    try
    {
      if (zWeightLength != 0)
      {
        env->ReleasePrimitiveArrayCritical(zWeightLengthArray, (jint *) zWeightLength, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
  if (zWeights != 0)
  {
    int zWeightsDim1 = env->GetArrayLength(zWeightsArray);
    int loop;
    for (loop = 0; loop < zWeightsDim1; loop++)
    {
      jdoubleArray dimArray = (jdoubleArray) env->GetObjectArrayElement(zWeightsArray, loop);
      env->ReleasePrimitiveArrayCritical(dimArray, (jdouble *) zWeights[loop], 0);
    }
    delete [] zWeights;
 }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry7  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID
  ,jlong existingGridNdx
  ,jfloat missingValueIn)
{
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    RescueGrid * existingGrid = (RescueGrid *) existingGridNdx;
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                (RESCUEINT64) referenceID,
                (RescueGrid *) existingGrid,
                (float) missingValueIn);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry8  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID
  ,jint gridTypeInt
  ,jlong expectedVertexCount
  ,jlong expectedFaceCount
  ,jlong expectedFaceVertexTuples
  ,jlong expectedCellCount
  ,jlong expectedCellFaceTuples
  ,jlong expectedVertexRealloc
  ,jlong expectedFaceRealloc
  ,jlong expectedFaceVertexRealloc
  ,jlong expectedCellRealloc
  ,jlong expectedCellFaceRealloc)
{
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    RescueGeometry::RescueLGRGridType gridType = (RescueGeometry::RescueLGRGridType) gridTypeInt;
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                referenceID,
                (RescueGeometry::RescueLGRGridType) gridType,
                expectedVertexCount,
                expectedFaceCount,
                expectedFaceVertexTuples,
                expectedCellCount,
                expectedCellFaceTuples,
                expectedVertexRealloc,
                expectedFaceRealloc,
                expectedFaceVertexRealloc,
                expectedCellRealloc,
                expectedCellFaceRealloc);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C"
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry8b(JNIEnv *env, jobject obj, 
   jlong parentGridNdx, 
   jlong parentILowBound, 
   jlong parentICount, 
   jlong parentJLowBound, 
   jlong parentJCount, 
   jlong parentKLowBound, 
   jlong parentKCount
  ,jlong referenceID
  ,jint gridTypeInt
  ,jlong expectedVertexCount
  ,jlong expectedFaceCount
  ,jlong expectedFaceVertexTuples
  ,jlong expectedCellCount
  ,jlong expectedCellFaceTuples
  ,jlong expectedVertexRealloc
  ,jlong expectedFaceRealloc
  ,jlong expectedFaceVertexRealloc
  ,jlong expectedCellRealloc
  ,jlong expectedCellFaceRealloc)
{
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    RescueGeometry::RescueLGRGridType gridType = (RescueGeometry::RescueLGRGridType) gridTypeInt;
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                parentILowBound,
                parentICount,
                parentJLowBound,
                parentJCount,
                parentKLowBound,
                parentKCount,
                referenceID,
                (RescueGeometry::RescueLGRGridType) gridType,
                expectedVertexCount,
                expectedFaceCount,
                expectedFaceVertexTuples,
                expectedCellCount,
                expectedCellFaceTuples,
                expectedVertexRealloc,
                expectedFaceRealloc,
                expectedFaceVertexRealloc,
                expectedCellRealloc,
                expectedCellFaceRealloc);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry9  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
  ,jlong referenceID)
{
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid, referenceID);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Create_1RescueGeometry9b  (JNIEnv *env, jobject obj
  ,jlong parentGridNdx
   ,jlong parentILowBound
   ,jlong parentICount
   ,jlong parentJLowBound
   ,jlong parentJCount
   ,jlong parentKLowBound
   ,jlong parentKCount
  ,jlong referenceID)
{
  try
  {
    RescueGeometry * parentGrid = (RescueGeometry *) parentGridNdx;
    RescueGeometry *myReturn = new RescueGeometry((RescueGeometry *) parentGrid,
                parentILowBound,
                parentICount,
                parentJLowBound,
                parentJCount,
                parentKLowBound,
                parentKCount,
                referenceID);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RescueGeometry");
    return (jlong) 0;   // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetReferenceID10
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong newId)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetReferenceID(newId);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetReferenceID");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ReferenceID11
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->ReferenceID64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ReferenceID");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetReferenceName12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newNameStr)
{
  try
  {
    jboolean newNameBool;
    const char *newName = env->GetStringUTFChars(newNameStr, &newNameBool);
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetReferenceName((char *) newName);
    env->ReleaseStringUTFChars(newNameStr, newName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetReferenceName");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueGeometry_ReferenceName13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    char * myReturn = myObject->ReferenceName();
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ReferenceName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetLGRGroupName12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newNameStr)
{
  try
  {
    jboolean newNameBool;
    const char *newName = env->GetStringUTFChars(newNameStr, &newNameBool);
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetLGRGroupName((char *) newName);
    env->ReleaseStringUTFChars(newNameStr, newName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetLGRGroupName");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueGeometry_LGRGroupName13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    char * myReturn = myObject->LGRGroupName();
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LGRGroupName");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetLGRStartTime12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newNameStr)
{
  try
  {
    jboolean newNameBool;
    const char *newName = env->GetStringUTFChars(newNameStr, &newNameBool);
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetLGRStartTime((char *) newName);
    env->ReleaseStringUTFChars(newNameStr, newName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetLGRStartTime");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueGeometry_LGRStartTime13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    char * myReturn = myObject->LGRStartTime();
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LGRStartTime");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetLGREndTime12
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring newNameStr)
{
  try
  {
    jboolean newNameBool;
    const char *newName = env->GetStringUTFChars(newNameStr, &newNameBool);
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetLGREndTime((char *) newName);
    env->ReleaseStringUTFChars(newNameStr, newName);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetLGREndTime");
  }
}

extern "C" 
JNIEXPORT jstring JNICALL Java_org_Rescue_rjni_RescueGeometry_LGREndTime13
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    char * myReturn = myObject->LGREndTime();
    return env->NewStringUTF(myReturn);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LGREndTime");
    return (jstring) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ProgenyHavingID14
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong referenceID)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->ProgenyHavingID(referenceID);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ProgenyHavingID");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropGeometry15
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong toDropNdx)
{
  try
  {
    RescueGeometry * toDrop = (RescueGeometry *) toDropNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropGeometry((RescueGeometry *) toDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropGeometry");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentGeometry16
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->ParentGeometry();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentGeometry");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentBUG17
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->ParentBUG();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentBUG");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_LGRCount18
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->LGRCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LGRCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthLGR19
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry * myReturn = myObject->NthLGR(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthLGR");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_LGRType20
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueLGRType myReturn = myObject->LGRType();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LGRType");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_LGRGridType21
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueLGRGridType myReturn = myObject->LGRGridType();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LGRGridType");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentLowBound22
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt)
{
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentLowBound64((RescueGridAxis::GridNdx) ndx);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentLowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentCount23
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt)
{
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentCount64((RescueGridAxis::GridNdx) ndx);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentILowBound24
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentILowBound64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentILowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentICount25
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentICount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentICount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentJLowBound26
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentJLowBound64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentJLowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentJCount27
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentJCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentJCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentKLowBound28
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentKLowBound64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentKLowBound");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentKCount29
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->ParentKCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentKCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_WeightLength30
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt)
{
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->WeightLength64((RescueGridAxis::GridNdx) ndx);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_WeightLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_XWeightLength33
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->XWeightLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_XWeightLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_XWeight34
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdoubleArray bufferArray
  ,jlong offset
  ,jlong bufferLength)
{
  jdouble *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jdouble *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->XWeight((double *) buffer,
                offset,
                bufferLength);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_XWeight");
  }
}

extern "C" 
JNIEXPORT jdoubleArray JNICALL Java_org_Rescue_rjni_RescueGeometry_XWeight35
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jdouble * myReturnCpp = (jdouble *) myObject->XWeight();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->XWeightLength64();
      jdoubleArray myReturn = env->NewDoubleArray(howMany);
      env->SetDoubleArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_XWeight");
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_YWeightLength36
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->YWeightLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_YWeightLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_YWeight37
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdoubleArray bufferArray
  ,jlong offset
  ,jlong bufferLength)
{
  jdouble *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jdouble *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->YWeight((double *) buffer,
                offset,
                bufferLength);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_YWeight");
  }
}

extern "C" 
JNIEXPORT jdoubleArray JNICALL Java_org_Rescue_rjni_RescueGeometry_YWeight38
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jdouble * myReturnCpp = (jdouble *) myObject->YWeight();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->YWeightLength64();
      jdoubleArray myReturn = env->NewDoubleArray(howMany);
      env->SetDoubleArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_YWeight");
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ZWeightLength39
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    int myReturn = myObject->ZWeightLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ZWeightLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_ZWeight40
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdoubleArray bufferArray
  ,jlong offset
  ,jlong bufferLength)
{
  jdouble *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jdouble *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->ZWeight((double *) buffer,
                offset,
                bufferLength);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ZWeight");
  }
}

extern "C" 
JNIEXPORT jdoubleArray JNICALL Java_org_Rescue_rjni_RescueGeometry_ZWeight41
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jdouble * myReturnCpp = (jdouble *) myObject->ZWeight();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      long howMany = myObject->ZWeightLength64();
      jdoubleArray myReturn = env->NewDoubleArray(howMany);
      env->SetDoubleArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ZWeight");
    return (jdoubleArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_RefinedCountArray42
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt
  ,jintArray bufferArray
  ,jint offset
  ,jint bufferLen)
{
  jint *buffer = 0;
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    if (bufferArray != 0)
    {
      buffer = (jint *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->RefinedCountArray((RescueGridAxis::GridNdx) ndx,
                (RESCUEINT32 *) buffer,
                offset,
                bufferLen);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jint *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jint *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jint *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RefinedCountArray");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_RefinedCountArray42l
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt
  ,jlongArray bufferArray
  ,jlong offset
  ,jlong bufferLen)
{
  jlong *buffer = 0;
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    if (bufferArray != 0)
    {
      buffer = (jlong *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->RefinedCountArray((RescueGridAxis::GridNdx) ndx,
                (RESCUEINT64 *) buffer,
                offset,
                bufferLen);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jlong *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jlong *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jlong *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RefinedCountArray");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_WeightBasedNodesFor43
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt
  ,jlong iNdx)
{
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    int myReturn = myObject->WeightBasedNodesFor((RescueGridAxis::GridNdx) ndx,
                (RESCUEINT64) iNdx);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_WeightBasedNodesFor");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_WeightFor44
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint ndxInt
  ,jlong iNdx
  ,jdoubleArray bufferArray
  ,jlong offset
  ,jlong bufferLen)
{
  jdouble *buffer = 0;
  try
  {
    RescueGridAxis::GridNdx ndx = (RescueGridAxis::GridNdx) ndxInt;
    if (bufferArray != 0)
    {
      buffer = (jdouble *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->WeightFor( ndx,
                iNdx,
                (double *) buffer,
                offset,
                bufferLen);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jdouble *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_WeightFor");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParametricMap45
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueParametricLGRMap * myReturn = myObject->ParametricMap();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParametricMap");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_InterfaceSurfaceDesc46
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueInterfaceSurfaceDesc * myReturn = myObject->InterfaceSurfaceDesc(zeroBasedNdx);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_InterfaceSurfaceDesc");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_InterfaceSurfaceDescCount47
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->InterfaceSurfaceDescCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_InterfaceSurfaceDescCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropInterfaceSurfaceDesc48
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong toDropNdx)
{
  try
  {
    RescueInterfaceSurfaceDesc * toDrop = (RescueInterfaceSurfaceDesc *) toDropNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropInterfaceSurfaceDesc((RescueInterfaceSurfaceDesc *) toDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropInterfaceSurfaceDesc");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_UnstructuredGrid49
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueUnstructuredGrid * myReturn = myObject->UnstructuredGrid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_UnstructuredGrid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_RadialGrid50
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueRadialGrid * myReturn = myObject->RadialGrid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_RadialGrid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_Delete_1RescueGeometry
  (JNIEnv *env, jobject obj, jlong objNdx)
{
  try
  {
    RescueGeometry *myObj = (RescueGeometry *) objNdx;
    delete myObj;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_~RescueGeometry");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_AnyFileTruncated52
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->AnyFileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_AnyFileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_Grid53
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGrid * myReturn = myObject->Grid();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_Grid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentModel54
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueModel * myReturn = myObject->ParentModel();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentModel");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MissingValue55
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MissingValue();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MissingValue");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetZValue56
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloatArray valueArrayArray)
{
  jfloat *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jfloat *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetZValue((float *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetZValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetZValue57
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jfloatArray valueArrayArray)
{
  jfloat *valueArray = 0;
  try
  {
    if (valueArrayArray != 0)
    {
      valueArray = (jfloat *) env->GetPrimitiveArrayCritical(valueArrayArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetZValue((RESCUEINT64) i,
                (RESCUEINT64) j,
                (float *) valueArray);
    if (valueArrayArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (valueArray != 0)
      {
        env->ReleasePrimitiveArrayCritical(valueArrayArray, (jfloat *) valueArray, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetZValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetZValue58
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jfloat value)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetZValue((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k,
                (float) value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetZValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetCoordinateLine59
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jfloat xTop
  ,jfloat yTop
  ,jfloat zTop
  ,jfloat xBottom
  ,jfloat yBottom
  ,jfloat zBottom
  ,jfloatArray middleZvaluesArray)
{
  jfloat *middleZvalues = 0;
  try
  {
    if (middleZvaluesArray != 0)
    {
      middleZvalues = (jfloat *) env->GetPrimitiveArrayCritical(middleZvaluesArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetCoordinateLine((RESCUEINT64) i,
                (RESCUEINT64) j,
                (float) xTop,
                (float) yTop,
                (float) zTop,
                (float) xBottom,
                (float) yBottom,
                (float) zBottom,
                (float *) (middleZvaluesArray == 0) ? 0 : copyFloatArray(middleZvalues, (int) env->GetArrayLength(middleZvaluesArray)));
    if (middleZvaluesArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(middleZvaluesArray, (jfloat *) middleZvalues, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (middleZvalues != 0)
      {
        env->ReleasePrimitiveArrayCritical(middleZvaluesArray, (jfloat *) middleZvalues, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (middleZvalues != 0)
      {
        env->ReleasePrimitiveArrayCritical(middleZvaluesArray, (jfloat *) middleZvalues, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetCoordinateLine");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetCoordinatePolyLine60
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jfloatArray valuesArray)
{
  jfloat *values = 0;
  try
  {
    if (valuesArray != 0)
    {
      values = (jfloat *) env->GetPrimitiveArrayCritical(valuesArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetCoordinatePolyLine((RESCUEINT64) i,
                (RESCUEINT64) j,
                (float *) (valuesArray == 0) ? 0 : copyFloatArray(values, (int) env->GetArrayLength(valuesArray)));
    if (valuesArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (values != 0)
      {
        env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (values != 0)
      {
        env->ReleasePrimitiveArrayCritical(valuesArray, (jfloat *) values, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetCoordinatePolyLine");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetCornerNode61
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jint corner
  ,jfloat x
  ,jfloat y
  ,jfloat z)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetCornerNode(i,
                j,
                k,
                (int) corner,
                (float) x,
                (float) y,
                (float) z);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetCornerNode");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetXValue62
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jint corner
  ,jfloat value)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetXValue((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k,
                (int) corner,
                (float) value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetXValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetYValue63
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jint corner
  ,jfloat value)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetYValue((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k,
                (int) corner,
                (float) value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetYValue");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetZValue64
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jint corner
  ,jfloat value)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetZValue(i,
                j,
                k,
                (int) corner,
                (float) value);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetZValue");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_VertexIs65
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueVertexType myReturn = myObject->VertexIs();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_VertexIs");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_VertexIs66
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueVertexType myReturn = myObject->VertexIs((RESCUEINT64) i,
                (RESCUEINT64) j);
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_VertexIs");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_GeometryType67
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueGridType myReturn = myObject->GeometryType();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_GeometryType");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_DemandPillar73
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescuePillar * myReturn = myObject->DemandPillar((RESCUEINT64) i,
                (RESCUEINT64) j);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DemandPillar");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueGeometry_CornerValues76
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jint corner)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->CornerValues((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k,
                (int) corner);
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      int howMany = myObject->CornerValuesLength();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      delete [] myReturnCpp;
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_CornerValues");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_CornerValuesLength77
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jint myReturn = (jint) myObject->CornerValuesLength();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_CornerValuesLength");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueGeometry_NodeValues78
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->NodeValues((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k);
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      int howMany = myObject->NodeValuesLength();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      delete [] myReturnCpp;
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NodeValues");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_NodeValuesLength79
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jint myReturn = myObject->NodeValuesLength();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NodeValuesLength");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueGeometry_UVWNodeValues80
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->UVWNodeValues((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k);
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      int howMany = myObject->UVWNodeValuesLength();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      delete [] myReturnCpp;
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_UVWNodeValues");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_UVWNodeValuesLength81
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jint myReturn = myObject->UVWNodeValuesLength();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_UVWNodeValuesLength");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloatArray JNICALL Java_org_Rescue_rjni_RescueGeometry_UVWNodeValues282
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jdouble i
  ,jdouble j
  ,jdouble k)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jfloat * myReturnCpp = (jfloat *) myObject->UVWNodeValues2((double) i,
                (double) j,
                (double) k);
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      int howMany = myObject->UVWNodeValues2Length();
      jfloatArray myReturn = env->NewFloatArray(howMany);
      env->SetFloatArrayRegion(myReturn, 0, howMany, myReturnCpp);
      delete [] myReturnCpp;
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_UVWNodeValues2");
    return (jfloatArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_UVWNodeValues2Length83
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jint myReturn = myObject->UVWNodeValues2Length();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_UVWNodeValues2Length");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_ZValue84
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->ZValue((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ZValue");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_AllCornerValues85
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jfloatArray bufferArray
  ,jlong offset
  ,jlong bufferLength)
{
  jfloat *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jfloat *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->AllCornerValues((float *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) bufferLength);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_AllCornerValues");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_AllCornerValuesLength86
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->AllCornerValuesLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_AllCornerValuesLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_LayerCornerValues87
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong k
  ,jfloatArray bufferArray
  ,jlong offset
  ,jlong bufferLength)
{
  jfloat *buffer = 0;
  try
  {
    if (bufferArray != 0)
    {
      buffer = (jfloat *) env->GetPrimitiveArrayCritical(bufferArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->LayerCornerValues((RESCUEINT64) k,
                (float *) buffer,
                (RESCUEINT64) offset,
                (RESCUEINT64) bufferLength);
    if (bufferArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (buffer != 0)
      {
        env->ReleasePrimitiveArrayCritical(bufferArray, (jfloat *) buffer, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LayerCornerValues");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_LayerCornerValuesLength88
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEINT64 myReturn = myObject->LayerCornerValuesLength64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LayerCornerValuesLength");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetStairSteppedSurface89
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong surfaceNdx
  ,jobjectArray cellPairsJ
  ,jlong arrayLength)
{
  try
  {
    RescueIJSurface * surface = (RescueIJSurface *) surfaceNdx;
    RescueIJKCellPair *cellPairs = 0;
    if (cellPairsJ != 0)
    {
      jsize cellPairsLength = env->GetArrayLength(cellPairsJ);
      if (cellPairsLength > 0)
      {
        jclass cellPairsClass = env->FindClass("org/Rescue/rjni/RescueIJKCellPair");
        jfieldID cellPairsi1ID = env->GetFieldID(cellPairsClass, "i1", "I");
        jfieldID cellPairsj1ID = env->GetFieldID(cellPairsClass, "j1", "I");
        jfieldID cellPairsk1ID = env->GetFieldID(cellPairsClass, "k1", "I");
        jfieldID cellPairsface1ID = env->GetFieldID(cellPairsClass, "face1", "I");
        jfieldID cellPairslgrid1ID = env->GetFieldID(cellPairsClass, "lgrid1", "I");
        jfieldID cellPairsi2ID = env->GetFieldID(cellPairsClass, "i2", "I");
        jfieldID cellPairsj2ID = env->GetFieldID(cellPairsClass, "j2", "I");
        jfieldID cellPairsk2ID = env->GetFieldID(cellPairsClass, "k2", "I");
        jfieldID cellPairsface2ID = env->GetFieldID(cellPairsClass, "face2", "I");
        jfieldID cellPairslgrid2ID = env->GetFieldID(cellPairsClass, "lgrid2", "I");
        cellPairs = new RescueIJKCellPair[cellPairsLength];
        jsize loop2;
        for (loop2 = 0; loop2 < cellPairsLength; loop2++)
        {
          jobject element = env->GetObjectArrayElement(cellPairsJ, loop2);
          cellPairs[loop2].i1 = env->GetIntField(element, cellPairsi1ID);
          cellPairs[loop2].j1 = env->GetIntField(element, cellPairsj1ID);
          cellPairs[loop2].k1 = env->GetIntField(element, cellPairsk1ID);
          cellPairs[loop2].face1 = env->GetIntField(element, cellPairsface1ID);
          cellPairs[loop2].lgrid1 = env->GetIntField(element, cellPairslgrid1ID);
          cellPairs[loop2].i2 = env->GetIntField(element, cellPairsi2ID);
          cellPairs[loop2].j2 = env->GetIntField(element, cellPairsj2ID);
          cellPairs[loop2].k2 = env->GetIntField(element, cellPairsk2ID);
          cellPairs[loop2].face2 = env->GetIntField(element, cellPairsface2ID);
          cellPairs[loop2].lgrid2 = env->GetIntField(element, cellPairslgrid2ID);
        }
      }
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetStairSteppedSurface((RescueIJSurface *) surface,
                (RescueIJKCellPair *) cellPairs,
                (RESCUEINT64) arrayLength);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetStairSteppedSurface");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_StairStepsFor90
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong surfaceNdx)
{
  try
  {
    RescueIJSurface * surface = (RescueIJSurface *) surfaceNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueStairSteppedFault * myReturn = myObject->StairStepsFor((RescueIJSurface *) surface);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_StairStepsFor");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_StairStepCount91
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    int myReturn = myObject->StairStepCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_StairStepCount");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthStairSteppedFault92
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueStairSteppedFault * myReturn = myObject->NthStairSteppedFault(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthStairSteppedFault");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetSurfaceIntersection93i
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong surfaceNdx
  ,jintArray iListArray
  ,jintArray jListArray
  ,jint listLength)
{
  jint *iList = 0;
  jint *jList = 0;
  try
  {
    RescueIJSurface * surface = (RescueIJSurface *) surfaceNdx;
    if (iListArray != 0)
    {
      iList = (jint *) env->GetPrimitiveArrayCritical(iListArray, 0);
    }
    if (jListArray != 0)
    {
      jList = (jint *) env->GetPrimitiveArrayCritical(jListArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetSurfaceIntersection((RescueIJSurface *) surface,
                (RESCUEINT32 *) (iListArray == 0) ? 0 : copyIntArray((RESCUEINT32 *) iList, env->GetArrayLength(iListArray)),
                (RESCUEINT32 *) (jListArray == 0) ? 0 : copyIntArray((RESCUEINT32 *) jList, env->GetArrayLength(jListArray)),
                (int) listLength);
    if (iListArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(iListArray, (void *) iList, 0);
    }
    if (jListArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(jListArray, (void *) jList, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (iList != 0)
      {
        env->ReleasePrimitiveArrayCritical(iListArray, (void *) iList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (jList != 0)
      {
        env->ReleasePrimitiveArrayCritical(jListArray, (void *) jList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (iList != 0)
      {
        env->ReleasePrimitiveArrayCritical(iListArray, (jint *) iList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (jList != 0)
      {
        env->ReleasePrimitiveArrayCritical(jListArray, (jint *) jList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetSurfaceIntersection");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetSurfaceIntersection93
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong surfaceNdx
  ,jlongArray iListArray
  ,jlongArray jListArray
  ,jlong listLength)
{
  jlong *iList = 0;
  jlong *jList = 0;
  try
  {
    RescueIJSurface * surface = (RescueIJSurface *) surfaceNdx;
    if (iListArray != 0)
    {
      iList = (jlong *) env->GetPrimitiveArrayCritical(iListArray, 0);
    }
    if (jListArray != 0)
    {
      jList = (jlong *) env->GetPrimitiveArrayCritical(jListArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetSurfaceIntersection((RescueIJSurface *) surface,
                (RESCUEINT64 *) (iListArray == 0) ? 0 : copyLongArray((RESCUEINT64 *) iList, env->GetArrayLength(iListArray)),
                (RESCUEINT64 *) (jListArray == 0) ? 0 : copyLongArray((RESCUEINT64 *) jList, env->GetArrayLength(jListArray)),
                (int) listLength);
    if (iListArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(iListArray, (void *) iList, 0);
    }
    if (jListArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(jListArray, (void *) jList, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (iList != 0)
      {
        env->ReleasePrimitiveArrayCritical(iListArray, (void *) iList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (jList != 0)
      {
        env->ReleasePrimitiveArrayCritical(jListArray, (void *) jList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (iList != 0)
      {
        env->ReleasePrimitiveArrayCritical(iListArray, (jint *) iList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    try
    {
      if (jList != 0)
      {
        env->ReleasePrimitiveArrayCritical(jListArray, (jint *) jList, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetSurfaceIntersection");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_IntersectionFor94
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong surfaceNdx)
{
  try
  {
    RescueIJSurface * surface = (RescueIJSurface *) surfaceNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueSurfaceToGrid * myReturn = myObject->IntersectionFor((RescueIJSurface *) surface);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_IntersectionFor");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthSurfaceToGrid95
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueSurfaceToGrid * myReturn = myObject->NthSurfaceToGrid(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthSurfaceToGrid");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetSurfaceIntersection96
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong surfaceNdx
  ,jint sideInt
  ,jlong i
  ,jlong j
  ,jlong k
  ,jint cellFaceNumber
  ,jfloatArray uvsArray)
{
  jfloat *uvs = 0;
  try
  {
    RescueIJSurface * surface = (RescueIJSurface *) surfaceNdx;
    RescueSurfaceCell::SurfaceSide side = (RescueSurfaceCell::SurfaceSide) sideInt;
    if (uvsArray != 0)
    {
      uvs = (jfloat *) env->GetPrimitiveArrayCritical(uvsArray, 0);
    }
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetSurfaceIntersection((RescueIJSurface *) surface,
                (RescueSurfaceCell::SurfaceSide) side,
                (RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k,
                (int) cellFaceNumber,
                (float *) (uvsArray == 0) ? 0 : copyFloatArray(uvs, (int) env->GetArrayLength(uvsArray)));
    if (uvsArray != 0)
    {
      env->ReleasePrimitiveArrayCritical(uvsArray, (jfloat *) uvs, 0);
    }
  }
  catch (char *errorText)
  {
    try
    {
      if (uvs != 0)
      {
        env->ReleasePrimitiveArrayCritical(uvsArray, (jfloat *) uvs, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    try
    {
      if (uvs != 0)
      {
        env->ReleasePrimitiveArrayCritical(uvsArray, (jfloat *) uvs, 0);
      }
    }
    catch (...)
    {
      //intentionally blank
    }
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetSurfaceIntersection");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropRescueSurfaceCell97
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong cellToDropNdx)
{
  try
  {
    RescueSurfaceCell * cellToDrop = (RescueSurfaceCell *) cellToDropNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropRescueSurfaceCell((RescueSurfaceCell *) cellToDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropRescueSurfaceCell");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthSurfaceCell98
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueSurfaceCell * myReturn = myObject->NthSurfaceCell(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthSurfaceCell");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_GeometryUnitCount99
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->GeometryUnitCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_GeometryUnitCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthGeometryUnit100
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometryUnit * myReturn = myObject->NthGeometryUnit(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthGeometryUnit");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_UnitIntersect101
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong unitNdx)
{
  try
  {
    RescueUnit * unit = (RescueUnit *) unitNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometryUnit * myReturn = myObject->UnitIntersect((RescueUnit *) unit);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_UnitIntersect");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropUnitIntersect102
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong unitNdx)
{
  try
  {
    RescueUnit * unit = (RescueUnit *) unitNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropUnitIntersect((RescueUnit *) unit);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropUnitIntersect");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropUnitIntersect103
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong unitNdx)
{
  try
  {
    RescueGeometryUnit * unit = (RescueGeometryUnit *) unitNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropUnitIntersect((RescueGeometryUnit *) unit);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropUnitIntersect");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetWellboreIntersection104
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong wellboreNdx
  ,jlong i
  ,jlong j
  ,jlong k)
{
  try
  {
    RescueWellbore * wellbore = (RescueWellbore *) wellboreNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetWellboreIntersection((RescueWellbore *) wellbore,
                (RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetWellboreIntersection");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropRescueWellboreCell105
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong cellToDropNdx)
{
  try
  {
    RescueWellboreCell * cellToDrop = (RescueWellboreCell *) cellToDropNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropRescueWellboreCell((RescueWellboreCell *) cellToDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropRescueWellboreCell");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthWellboreCell106
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueWellboreCell * myReturn = myObject->NthWellboreCell(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthWellboreCell");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_CalculateMinMax107
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->CalculateMinMax();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_CalculateMinMax");
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_MinMaxDirty108
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->MinMaxDirty();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MinMaxDirty");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MinX109
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MinX();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MinX");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MaxX110
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MaxX();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MaxX");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MinY111
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MinY();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MinY");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MaxY112
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MaxY();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MaxY");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MinZ113
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MinZ();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MinZ");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_MaxZ114
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->MaxZ();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MaxZ");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_PropertyCount115
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->PropertyCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_PropertyCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_NthRescueProperty116
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedOrdinal)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueProperty * myReturn = myObject->NthRescueProperty(zeroBasedOrdinal);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_NthRescueProperty");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_PropertyIdentifiedBy117
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong identifier)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyIdentifiedBy(identifier);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_PropertyIdentifiedBy");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_PropertyNamed118
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jstring nameStr)
{
  try
  {
    jboolean nameBool;
    const char *name = env->GetStringUTFChars(nameStr, &nameBool);
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueProperty * myReturn = myObject->PropertyNamed((char *) name);
    env->ReleaseStringUTFChars(nameStr, name);
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_PropertyNamed");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_DropRescueProperty119
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong unitToDropNdx)
{
  try
  {
    RescueProperty * unitToDrop = (RescueProperty *) unitToDropNdx;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->DropRescueProperty((RescueProperty *) unitToDrop);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DropRescueProperty");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_SetKLayerID120
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedNdx
  ,jlong globalID)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->SetKLayerID((RESCUEINT64) zeroBasedNdx, globalID);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetKLayerID");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_KLayerID121
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong zeroBasedNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    int myReturn = myObject->KLayerID((RESCUEINT64) zeroBasedNdx);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_KLayerID");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentBlockUnit122
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueBlockUnit * myReturn = myObject->ParentBlockUnit();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentBlockUnit");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ParentGeobodyPart123
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeobodyPart * myReturn = myObject->ParentGeobodyPart();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ParentGeobodyPart");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_IsProportional124
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsProportional();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_IsProportional");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_TopReferenceSurface125
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueReferenceSurface * myReturn = myObject->TopReferenceSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_TopReferenceSurface");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_BottomReferenceSurface126
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueReferenceSurface * myReturn = myObject->BottomReferenceSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_BottomReferenceSurface");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_TopOffset127
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->TopOffset();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_TopOffset");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_BottomOffset128
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->BottomOffset();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_BottomOffset");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_IsReferenced129
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsReferenced();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_IsReferenced");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_ReferenceSurface130
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueReferenceSurface * myReturn = myObject->ReferenceSurface();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ReferenceSurface");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_SurfaceOffset131
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->SurfaceOffset();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SurfaceOffset");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jfloat JNICALL Java_org_Rescue_rjni_RescueGeometry_KLayerThickness132
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    float myReturn = myObject->KLayerThickness();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_KLayerThickness");
    return (jfloat) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_LapType133
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueLapType myReturn = myObject->LapType();
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LapType");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_Version134
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jboolean reloadBool)
{
  try
  {
    RESCUEBOOL reload = ((reloadBool == JNI_TRUE) ? TRUE : FALSE);
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    int myReturn = myObject->Version((RESCUEBOOL) reload);
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_Version");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_SetCellStatus135
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k
  ,jint newStatusInt)
{
  try
  {
    RescueGeometry::RescueCellStatus newStatus = (RescueGeometry::RescueCellStatus) newStatusInt;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->SetCellStatus((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k,
                (RescueGeometry::RescueCellStatus) newStatus);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SetCellStatus");
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_CellStatus136
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jlong i
  ,jlong j
  ,jlong k)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueGeometry::RescueCellStatus myReturn = myObject->CellStatus((RESCUEINT64) i,
                (RESCUEINT64) j,
                (RESCUEINT64) k);
    return (jint) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_CellStatus");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_IsOfType137
  (JNIEnv *env, jobject obj, jlong nativeNdx  ,jint thisTypeInt)
{
  try
  {
    _RescueObjectType thisType = (_RescueObjectType) thisTypeInt;
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsOfType((_RescueObjectType) thisType);
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_IsOfType");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_IsLoaded138
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->IsLoaded();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_IsLoaded");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_FileTruncated139
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->FileTruncated();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_FileTruncated");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_Load140
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Load();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_Load");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_Unload141
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->Unload();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_Unload");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jboolean JNICALL Java_org_Rescue_rjni_RescueGeometry_HasChanged142
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RESCUEBOOL myReturn = myObject->HasChanged();
    return ((myReturn == FALSE) ? (jboolean) false : (jboolean) true);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_HasChanged");
    return (jboolean) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_MarkChanged143
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->MarkChanged();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_MarkChanged");
  }
}

extern "C" 
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_LoadRefSurface144
  (JNIEnv *env, jclass cls  ,jlong surfaceNdx)
{
  try
  {
    RescueReferenceSurface * surface = (RescueReferenceSurface *) surfaceNdx;
    RescueGeometry::LoadRefSurface((RescueReferenceSurface *) surface);
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_LoadRefSurface");
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_WireFrame145
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    //RescueWireframe * myReturn = myObject->WireFrame();
    return 0; //(jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_WireFrame");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlongArray JNICALL Java_org_Rescue_rjni_RescueGeometry_ObjectCounts146
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong * myReturnCpp = (jlong *) myObject->ObjectCounts();
    if (myReturnCpp == 0)
    {
      return 0;
    }
    else
    {
      int howMany = myObject->ObjectCountsLength();
      jlongArray myReturn = env->NewLongArray(howMany);
      env->SetLongArrayRegion(myReturn, 0, howMany, myReturnCpp);
      return myReturn;
    }
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlongArray) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ObjectCounts");
    return (jlongArray) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jint JNICALL Java_org_Rescue_rjni_RescueGeometry_ObjectCountsLength147
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jint myReturn = myObject->ObjectCountsLength();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jint) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_ObjectCountsLength");
    return (jint) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_SurfaceToGridCount148
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    jlong myReturn = myObject->SurfaceToGridCount64();
    return myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_SurfaceToGridCount");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_GetColor149
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    RescueColor * myReturn = myObject->GetColor();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_GetColor");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_DataContainers150
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    cSetRescueDataContainer * myReturn = myObject->DataContainers();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DataContainers");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C" 
JNIEXPORT jlong JNICALL Java_org_Rescue_rjni_RescueGeometry_DemandDataContainers151
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    cSetRescueDataContainer * myReturn = myObject->DemandDataContainers();
    return (jlong) myReturn;
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_DemandDataContainers");
    return (jlong) 0; // Dummy return prevents compiler warning.
  }
}

extern "C"
JNIEXPORT void JNICALL Java_org_Rescue_rjni_RescueGeometry_EnsureLoadedNative
  (JNIEnv *env, jobject obj, jlong nativeNdx)
{
  try
  {
    RescueGeometry *myObject = (RescueGeometry *) nativeNdx;
    myObject->EnsureLoaded();
  }
  catch (char *errorText)
  {
    throwByName(env, "java/lang/RuntimeException", errorText);
  }
  catch (...)
  {
    throwByName(env, "java/lang/RuntimeException", "Unexpected error in RescueGeometry_EnsureLoaded");
  }
}

